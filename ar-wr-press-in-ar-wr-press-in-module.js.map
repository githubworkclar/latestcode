{"version":3,"sources":["./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in-routing.module.ts","./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in-validation.service.ts","./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.component.ts","./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.component.html","./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.module.ts","./client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.service.ts"],"names":[],"mappings":"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","file":"ar-wr-press-in-ar-wr-press-in-module.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { ArWrPressInComponent } from \"./ar-wr-press-in.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ArWrPressInComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ArWrPressInRoutingModule { }","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { ErrorModel } from '../../models/error.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrPressInValidationService {\n  constructor(\n    private readonly helperService: HelperService,\n    private readonly unitButtonService: UnitButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // Function serviceStorageTemperature min validation\n  serviceStorageTemperatureMinValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMinControl = control.get('serviceStorageTemperatureAmbient75FMin');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMinControl\n        && serviceStorageTemperatureAmbient75FMinControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMinError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 75°F or less\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 24°C or less\");\n        }\n\n        if (serviceStorageTemperatureAmbient75FMinError) {\n          error = serviceStorageTemperatureAmbient75FMinError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMinControl, error, \"serviceStorageTemperatureAmbientMin\");\n      return error;\n    };\n  }\n\n  // Function serviceStorageTemperature max validation\n  serviceStorageTemperatureMaxValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMaxControl = control.get('serviceStorageTemperatureAmbient75FMax');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMaxControl\n        && serviceStorageTemperatureAmbient75FMaxControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMaxError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 75°F or more\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 24°C or more\");\n        }\n\n\n        if (serviceStorageTemperatureAmbient75FMaxError) {\n          error = serviceStorageTemperatureAmbient75FMaxError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMaxControl, error, \"serviceStorageTemperatureAmbientMax\");\n      return error;\n    };\n  }\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** Doen't prevent the form submission*****************/\n  /********************************************************************/\n  // gland width validation\n  clearanceValidationBasedOnPumpAndComponentType(control: FormGroup): ErrorModel {\n    const pumpTypeControl = control.get('pumpType');\n    const componentTypeControl = control.get('componentType');\n\n    if (pumpTypeControl && pumpTypeControl.value && componentTypeControl && componentTypeControl.value) {\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      // const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const error = new ErrorModel();\n      error.field = '';\n      error.type = ErrorTypes.Warning;\n\n      const bushing = \"Follow OEM Bushing Clearance if Available\";\n      const bearing = \"Follow OEM Bearing Clearance if Available\";\n\n      if (pumpTypeControl.value.id === 3 && componentTypeControl.value.id === 1) // pumpType \"VS\" and componentType \"Wear Ring\"\n      {\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .05 mm Over Bearing Clearance (Or OEM Standard)\";\n        }\n        else {\n          // default inch unit is considered\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .002 inch Over Bearing Clearance(Or OEM Standard)\";\n        }\n      }\n      else if (componentTypeControl.value.id === 2) // componentType \"Bushing\"\n      {\n        error.detail = bushing;\n      }\n      else if (componentTypeControl.value.id === 3) // componentType Bearing\"\n      {\n        error.detail = bearing;\n      }\n      else {\n        return null;\n      }\n      return error;\n    }\n    else {\n      return null;\n    }\n  }\n}\n","// core imports\nimport { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { AsyncValidatorFn, FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../models/calculator.model\";\nimport { FormControlModel } from '../../models/form-control.model';\nimport { BaseModel } from '../../models/base.model';\nimport { FormColumnModel } from '../../models/form-column.model';\nimport { ErrorModel } from '../../models/error.model';\nimport { ArWrCalcService } from \"../ar-wr-calc.service\";\nimport { AuthService } from \"../../shared/services/auth.service\";\nimport { ControlType, ControlSubType, Units, Temperature, WrArCalc_PressIn_Validators } from '../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\nimport { PrintService } from \"../../shared/services/print.service\";\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\nimport { ArWrPressInValidationService } from \"./ar-wr-press-in-validation.service\";\nimport { ArWrPressInService } from \"./ar-wr-press-in.service\";\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { HelperService } from \"../../shared/services/helper.service\";\nimport { TwoColumnFormModel } from '../../models/two_column_form.model';\nimport { FormRowModel } from '../../models/form-row.model';\n\n@Component({\n  selector: 'app-ar-wr-press-in',\n  templateUrl: './ar-wr-press-in.component.html',\n  styleUrls: ['./ar-wr-press-in.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ArWrPressInComponent implements OnInit, OnDestroy {\n\n  calculatorConfig: CalculatorModel;\n  arwrPessInForm: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted = false;\n  payLoad = '';\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  notes = [\n    `(*1) If the estimated interface pressure becomes lower than the differential pressure on the part, then the\n    composite and housing could lose contact, and the interface pressure is overcome. In such case, please\n    secure the composite mechanically. In order to increase the interference pressure, changing the composite\n    material, increasing interference fit etc. can be considered. Please contact Greene Tweed engineering for\n    help or advice if required.`,\n    `(*2) If the estimated collapse pressure becomes lower than the differential pressure on the part, direct\n    contact between the dynamic surfaces could occur and an alternate design or material is required. Please\n    contact Greene Tweed engineering for help or advice if required.`,\n    `(3) Material selection for the application is subject to media compatibility and design \n    solution reliant on verification by GT engineering.`\n  ];\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  arWrDataSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n\n  // constructor\n  constructor(\n    private readonly controlBaseService: ControlBaseService,\n    private readonly authService: AuthService,\n    private readonly arWrCalcService: ArWrCalcService,\n    private readonly dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private readonly printService: PrintService,\n    private readonly unitButtonService: UnitButtonService,\n    private readonly temperatureButtonService: TemperatureButtonService,\n    private readonly helperService: HelperService,\n    private readonly arWrPressInService: ArWrPressInService,\n    private readonly arWrPressInValidationService: ArWrPressInValidationService\n  ) {\n    // o-ring calculator config subscription\n    this.arWrDataSubscription = this.arWrCalcService.arWrConfig$.subscribe((x: BaseModel) => {\n      if (x) {\n        // calculator - internal vacuum only\n        this.calculatorConfig = x.calculators[0];\n        // send calculator to dynamic form service\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[0]);\n        // create form\n        this.createForm();\n      }\n    });\n\n    // unit change\n    this.onUnitChange();\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.arwrPessInForm && this.arwrPessInForm.controls[fieldName]) {\n      return this.arwrPessInForm.controls[fieldName].value;\n    }\n    else {\n      return \"\";\n    }\n  }\n\n  // onInit\n  ngOnInit(): void {\n    this.onReset();\n    this.isSubmitted = false;\n    this.CalculatedData = {};\n  }\n\n  // unit change perform operations\n  onUnitChange() {\n    // reset \n    this.resetFormAndCalculation();\n\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        // reset \n        this.resetFormAndCalculation();\n\n        // set temperature\n        this.setTemperature();\n\n        if (this.CalculatedData) {\n          // calculated change detection when by changing the object\n          this.CalculatedData = Object.assign({}, this.CalculatedData);\n        }\n\n        // get rotor and stator cte dropdown controls\n        const selectedCustomRotatingMaterialControl = this.arwrPessInForm?.controls[\"customRotatingMaterial\"];\n        const selectedCustomStationaryMaterialControl = this.arwrPessInForm?.controls[\"customStationaryMaterial\"];\n\n        // clear rotor CTE custom input values\n        if (selectedCustomRotatingMaterialControl) {\n          selectedCustomRotatingMaterialControl.setValue(\"\");\n        }\n\n        // clear stator CTE custom input values\n        if (selectedCustomStationaryMaterialControl) {\n          selectedCustomStationaryMaterialControl.setValue(\"\");\n        }\n\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet(\n          (this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null),\n          this.arwrPessInForm, x\n        );\n\n        // rotating material dropdown selected and not custom selected\n        const selectedRotatingMaterialControl = this.arwrPessInForm?.controls[\"rotatingMaterial\"];\n        const selectedStationaryMaterialControl = this.arwrPessInForm?.controls[\"stationaryMaterial\"];\n        // convert 10 power -6 to XX.XX\n        if (selectedRotatingMaterialControl && selectedRotatingMaterialControl.value && selectedRotatingMaterialControl.value.value > 0) {\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, \"rotatingMaterial\", \"customRotatingMaterial\", selectedRotatingMaterialControl.value);\n        }\n\n        // stationary material dropdown selected and not custom selected\n        // convert 10 power -6 to XX.XX\n        if (selectedStationaryMaterialControl && selectedStationaryMaterialControl.value && selectedStationaryMaterialControl.value.value > 0) {\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, \"stationaryMaterial\", \"customStationaryMaterial\", selectedStationaryMaterialControl.value);\n        }\n\n        if (this.calculatorConfig && this.calculatorConfig.form) {\n          // reset the temperature range label value\n          this.helperService.resetLabel(this.calculatorConfig.form.left_column.form_layout_row, \"compositeTemperatureRage\");\n          this.getSetCompositeMaterialData(); // set the temperature range again\n        }\n\n        if (convertedForm) {\n          this.arwrPessInForm = convertedForm;\n        }\n      }\n    });\n  }\n\n  // set temperature\n  setTemperature() {\n    const currentUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n    const currentTemp: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n\n    if (currentUnit && currentUnit.id > 0\n      && currentUnit.id === Units.INCH\n      && currentTemp && currentTemp.id > 0\n      && currentTemp.id !== Temperature.FAHRENHEIT) {\n      this.helperService.setAndSendTemperatureManually(Temperature.FAHRENHEIT);\n    }\n\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.MILLI_METER\n      && currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.CELCIUS) {\n      this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\n    }\n  }\n\n  // calculate button click handler / form submit handler\n  performCalculation() {\n    this.isSubmitted = true;\n    this.onSubmit();\n  }\n\n  onSubmit() {\n    if (!this.isSubmitted) {\n      return;\n    }\n\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n\n    if (!this.arwrPessInForm || !this.arwrPessInForm.value) {\n      return;\n    }\n\n    this.payLoad = this.arwrPessInForm.value;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandWidth validation\n    if (this.calculatorConfig.form.form_validation.includes(WrArCalc_PressIn_Validators.CLEARANCE_VALIDATION)) {\n      const clearanceBasedOnPumpAndComponentTypeError = this.arWrPressInValidationService.clearanceValidationBasedOnPumpAndComponentType(this.arwrPessInForm);\n      if (clearanceBasedOnPumpAndComponentTypeError) {\n        this.addClientErrors(clearanceBasedOnPumpAndComponentTypeError);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (!this.arwrPessInForm || this.arwrPessInForm.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.arWrPressInService.pressInCalculation(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe(\n      (resp: any) => {\n        // response\n        if (resp.data) {\n          // set CalculatedData\n          // this will set the graph data also\n          this.CalculatedData = Object.assign({}, resp.data);\n\n          if (resp.data.error && resp.data.error.length > 0) {\n            this.serverErrors = resp.data.error.slice();\n          }\n\n          if (resp.data.warning && resp.data.warning.length > 0) {\n            this.serverWarnings = resp.data.warning;\n          }\n\n          const responseDataKeys = Object.keys(resp.data);\n\n          // Bind output form data\n          // loop through each output\n          for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n            // loop through rows\n            for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n              // loop through columns\n              for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n                // loop through controls\n                for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                  // get form control of JSON\n                  const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                  // get fields key from resp data\n                  // const responseDataKeys = Object.keys(resp.data);\n                  for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                    if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                      // set JSON output label\n                      // bind calculated result to output label\n                      if (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"pressureInfoRT\").toLocaleLowerCase()\n                        || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatedInterfacePressureAtHighestTemperature\").toLocaleLowerCase()\n                        || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatedCollapsePressureatHighestTemperature\").toLocaleLowerCase()\n                      ) {\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label =\n                          `${(resp.data[responseDataKeys[keyIndex]]\n                            && resp.data[responseDataKeys[keyIndex]] !== null\n                            && resp.data[responseDataKeys[keyIndex]] !== undefined\n                            && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : ((resp.data[responseDataKeys[keyIndex]] == null || resp.data[responseDataKeys[keyIndex]] == undefined) ? \"NA\" : resp.data[responseDataKeys[keyIndex]])}`;\n                      }\n                      else if (\n                        this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER &&\n                        (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"machineCompositeODTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"finishMachineCompositeIDAfterInstallationInchTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"machineCompositeOALTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatingIDAfterInstallationTol\").toLocaleLowerCase())\n                      ) {\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label =\n                          `${(resp.data[responseDataKeys[keyIndex]]\n                            && resp.data[responseDataKeys[keyIndex]] !== null\n                            && resp.data[responseDataKeys[keyIndex]] !== undefined\n                            && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(2) : ((resp.data[responseDataKeys[keyIndex]] == null || resp.data[responseDataKeys[keyIndex]] == undefined) ? \"NA\" : resp.data[responseDataKeys[keyIndex]])}`;\n                      }\n                      else if (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"thermalFitTemp\").toLocaleLowerCase()) {\n                        // show or Hide output \"For Thermal Fitting, Heat Carrier to a Minimum\"\n                        if (resp.data[responseDataKeys[keyIndex]]) {\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].show = true;\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed();\n                        }\n                        else {\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].show = false;\n                        }\n                      }\n                      else {\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label =\n                          `${(resp.data[responseDataKeys[keyIndex]]\n                            && resp.data[responseDataKeys[keyIndex]] !== null\n                            && resp.data[responseDataKeys[keyIndex]] !== undefined\n                            && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(3) : ((resp.data[responseDataKeys[keyIndex]] == null || resp.data[responseDataKeys[keyIndex]] == undefined) ? \"NA\" : resp.data[responseDataKeys[keyIndex]])}`;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          // reset auth token \n          this.setAuth();\n        }\n      }, (error: any) => {\n        // reset auth token \n        this.setAuth();\n        // TODO: show error if any\n        console.log(error);\n      });\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.arwrPessInForm) {\n            const fc = this.arwrPessInForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.arwrPessInForm) {\n            const fc = this.arwrPessInForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.arwrPessInForm = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    const asyncValidations: AsyncValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_MIN:\n          validations.push(this.arWrPressInValidationService.serviceStorageTemperatureMinValidation());\n          break;\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_MAX:\n          validations.push(this.arWrPressInValidationService.serviceStorageTemperatureMaxValidation());\n          break;\n        case WrArCalc_PressIn_Validators.STATIONARY_ELEMENT_ID_MAX:\n          validations.push(this.arWrCalcService.stationaryElementIDMaxValidation());\n          break;\n        case WrArCalc_PressIn_Validators.ROTATING_ELEMENT_OD_MAX:\n          validations.push(this.arWrCalcService.rotatingElementODMaxValidation());\n          break;\n        case WrArCalc_PressIn_Validators.STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MIN:\n          validations.push(this.arWrCalcService.stationaryMinLessThanRotatingMinValidation());\n          break;\n        case WrArCalc_PressIn_Validators.STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MAX:\n          validations.push(this.arWrCalcService.stationaryMaxLessThanRotatingMaxValidation());\n          break;\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_ALLOWED_MIN:\n          asyncValidations.push(this.arWrCalcService.asyncServiceStorageTemperatureMinValidation());\n          break;\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_ALLOWED_MAX:\n          asyncValidations.push(this.arWrCalcService.asyncServiceStorageTemperatureMaxValidation());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.arwrPessInForm.setValidators(validations);\n    // set async alidators\n    this.arwrPessInForm.setAsyncValidators(asyncValidations);\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.resetErroAndWarnings();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = (outputIndex === 0 ? '' : ``);\n            }\n          }\n        }\n      }\n    }\n\n    // reset calculated data received after calculation\n    this.CalculatedData = null;\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.arwrPessInForm) {\n      return;\n    }\n    // get form controls key\n    const formControlKeys = Object.keys(this.arwrPessInForm.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.arwrPessInForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.arwrPessInForm.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"WrArPressIn\");\n  }\n\n  // component destroy\n  ngOnDestroy(): void {\n    if (this.arWrDataSubscription) {\n      this.arWrDataSubscription.unsubscribe();\n    }\n\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n  }\n\n  // dropdown change event handler of the dynamic form\n  dropdownSelectionChange(event: any) {\n    this.calculateAndSetInterference();\n    this.calculateAndSetClearanceTarget();\n\n    // get and set rotating material change when custom no selected\n    if (event.formControl.key === \"rotatingMaterial\" && event.value.value > 0) {\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, event.formControl.key, \"customRotatingMaterial\", event.value);\n    }\n\n    // get and set stationary material change when custom no selected\n    if (event.formControl.key === \"stationaryMaterial\" && event.value.value > 0) {\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, event.formControl.key, \"customStationaryMaterial\", event.value);\n    }\n\n    // get temperature ranges for the selected Composite Material\n    // get and set stationary material change when custom no selected\n    if (event.formControl.key === \"composite\" && event.value.value > 0) {\n      this.getSetCompositeMaterialData();\n    }\n\n    // when component type eliminate the “AR-1” in the composite list\n    if (event.formControl.key === \"componentType\" && event.value.value > 0) {\n      const calculatorForm: TwoColumnFormModel = { ...this.calculatorConfig.form };\n      let calculatorLeftColumnRows: FormRowModel[] = [];\n      // when component type \"Wearing(1)\" is selected\n      calculatorLeftColumnRows = this.helperService.showOrHideFormControlByControlKey(calculatorForm.left_column.form_layout_row, \"composite\", 0, true, (event.value.value === 1 ? false : true));\n      const updatedCalculatorForm: TwoColumnFormModel = { ...calculatorForm, left_column: { form_layout_row: calculatorLeftColumnRows } };\n      // update updatedCalculatorForm object         \n      this.calculatorConfig = { ...this.calculatorConfig, form: updatedCalculatorForm };\n    }\n  }\n\n  // get and set composite material\n  private getSetCompositeMaterialData() {\n    if (!this.calculatorConfig && !this.calculatorConfig.form) {\n      return;\n    }\n    this.arWrCalcService.getSetCompositeMaterialData(this.calculatorConfig.form, this.arwrPessInForm, \"compositeTemperatureRage\");\n  }\n\n  // numeric input value change event handler of the dynamic form\n  numericInputValueChange(event: any) {\n    // Interference\n    if (event.key.toLowerCase() === (\"stationaryElementIDMax\").toLowerCase()) {\n      this.calculateAndSetInterference();\n    }\n\n    // clearanceCLR\n    if (event.key.toLowerCase() === (\"rotatingElementODMax\").toLowerCase()) {\n      this.calculateAndSetClearanceTarget();\n    }\n  }\n\n  // form value changed \n  // formValueChanged() {\n  //   // perform calculation again\n  //   this.onSubmit();\n  // }\n\n  // focus lost on form controls \n  lostFocus(event: any) {\n    // perform calculation again\n    this.onSubmit();\n  }\n\n  // calculate Interference based on the \"stationaryElementIDMax\"\n  private calculateAndSetInterference() {\n    // inferference dropdown selected value\n    const customInterferenceTargetDDLFC = this.arwrPessInForm.controls[\"interferenceTarget\"];\n    // standard interference    \n    if (customInterferenceTargetDDLFC && customInterferenceTargetDDLFC.value.value > 0) {\n      const customInterferenceTargetFC = this.arwrPessInForm.controls[\"customInterferenceTarget\"];\n      this.arWrCalcService.getInterference(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((x: any) => {\n        // standard option selected\n        if (x && x.TargetValue && customInterferenceTargetFC && (customInterferenceTargetFC.value != x.TargetValue)) {\n          customInterferenceTargetFC.setValue(x.TargetValue.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\n        }\n      });\n    }\n  }\n\n  // calculate clearanceCLR based on the \"rotatingElementODMax\"\n  private calculateAndSetClearanceTarget() {\n    // clearance dropdown selected value\n    const customClearanceTargetDDLFC = this.arwrPessInForm.controls[\"clearanceTarget\"];\n    // stabdard clearance\n    if (customClearanceTargetDDLFC && customClearanceTargetDDLFC.value.value > 0) {\n      const customClearanceTargetFC = this.arwrPessInForm.controls[\"customClearanceTarget\"];\n      // standard option selected\n      this.arWrCalcService.getClearance(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((x: any) => {\n        if (x && customClearanceTargetFC && (customClearanceTargetFC.value != x)) {\n          customClearanceTargetFC.setValue(x.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\n        }\n      });\n    }\n  }\n}\n","<div class=\"row wr-ar-pressin\">\n    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n        <form *ngIf=\"calculatorConfig && arwrPessInForm\" (ngSubmit)=\"performCalculation()\" [formGroup]=\"arwrPessInForm\"\n            novalidate class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4 ignorePdf\">\n                    <p class=\"info-tab pt-0\">IMPORTANT: <span class=\"required\">&nbsp;*&nbsp;</span> Are required fields.\n                    </p>\n                </div>\n                <div class=\"col-8 col-sm-8 col-md-8 col-lg-8 col-xl-8 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\" [form]=\"arwrPessInForm\"\n                        [isSubmitted]=\"isSubmitted\" (reset)=\"onReset()\" (print)=\"onPrint()\">\n                    </calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                    <dynamic-form-two-column-layout [form]=\"arwrPessInForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [isShowNotes]=\"true\" [decimalPoint]=\"3\"\n                        [isUpdateDecimalPointOnUnitChange]=\"false\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\" [isWrAr]=\"true\" [notes]=\"notes\"\n                        (dropdownSelectionChange)=\"dropdownSelectionChange($event)\"\n                        (numericInputValueChange)=\"numericInputValueChange($event)\" (focusOut)=\"lostFocus($event)\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { ArWrPressInRoutingModule } from \"./ar-wr-press-in-routing.module\";\nimport { ArWrPressInComponent } from './ar-wr-press-in.component';\nimport { ArWrPressInService } from \"./ar-wr-press-in.service\";\nimport { ArWrPressInValidationService } from \"./ar-wr-press-in-validation.service\";\n\n@NgModule({\n  declarations: [ArWrPressInComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArWrPressInRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ArWrPressInService,\n    ArWrPressInValidationService\n  ]\n})\nexport class ArWrPressInModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { FormGroup } from '@angular/forms';\nimport { PressInDTO } from '../../models/pressInDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrPressInService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  public pressInCalculation(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    // body.calculationType = calculationType.GLAND_SIZING;\n\n    return this._http.post(`${this.baseUrl}wrar/pressInCalculation`, body);\n  }\n}\n"],"sourceRoot":"webpack:///"}