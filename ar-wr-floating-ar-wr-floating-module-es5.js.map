{"version":3,"sources":["webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating-routing.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating-validation.service.ts","webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.component.ts","webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.component.html","webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.service.ts"],"names":["routes","path","component","pathMatch","ArWrFloatingRoutingModule","forChild","imports","exports","ArWrFloatingValidationService","helperService","unitButtonService","control","serviceStorageTemperatureAmbient75FMinControl","get","currentSelectedUnit","getCurrentUnitValue","error","value","serviceStorageTemperatureAmbient75FMinError","oringCrossSectionNominalLargerThanRangeError","id","INCH","MILLI_METER","setValidationErrorToFormControl","serviceStorageTemperatureAmbient75FMaxControl","serviceStorageTemperatureAmbient75FMaxError","pumpTypeControl","componentTypeControl","field","type","Warning","bushing","bearing","detail","providedIn","ArWrFloatingComponent","controlBaseService","authService","arWrCalcService","dynamicFormTwoColumnLayoutService","printService","temperatureButtonService","arWrFloatingService","arWrFloatingValidationService","flattenedFormControls","controlType","isSubmitted","payLoad","clientErrors","clientWarnings","serverErrors","serverWarnings","arWrDataSubscription","arWrConfig$","subscribe","x","calculatorConfig","calculators","sendCalculator","createForm","onUnitChange","fieldName","arwrFloatingForm","controls","onReset","CalculatedData","resetFormAndCalculation","unitChangeSubscription","unit$","setTemperature","Object","assign","selectedCustomRotatingMaterialControl","selectedCustomStationaryMaterialControl","setValue","convertedForm","convertFormUnitControlValuesAndSet","form","selectedRotatingMaterialControl","selectedStationaryMaterialControl","getAndSetMaterialCTE","currentUnit","currentTemp","getCurrentTemperatureValue","FAHRENHEIT","setAndSendTemperatureManually","CELCIUS","resetErroAndWarnings","resetCalculatedLabelValue","form_validation","includes","CLEARANCE_VALIDATION","clearanceBasedOnPumpAndComponentTypeError","clearanceValidationBasedOnPumpAndComponentType","addClientErrors","invalid","floatingCalculation","resp","data","length","slice","warning","responseDataKeys","keys","outputIndex","form_output","rowIndex","row","columnIndex","form_layout_columns","controlIndex","form_controls","formControl","keyIndex","sub_type","calculated_label","key","outMachineCompositeODInch","outFinishMachineCompositeIDAfterInstallationInch","crosssectionThickness","crossSectionThicknessError","Error","label","undefined","isNaN","parseFloat","toFixed","setAuth","console","log","leftFormControls","left_column","form_layout_row","map","column","formControls","index","fc","show","push","rightFormControls","right_column","toolbarOption","flatten","filteredControls","filter","button","toFormGroup","validations","jsonConfigValidationsArray","validationFuncKey","SERVICE_STORAGE_TEMPERATURE_MIN","serviceStorageTemperatureMinValidation","SERVICE_STORAGE_TEMPERATURE_MAX","serviceStorageTemperatureMaxValidation","setValidators","authenticate","pipe","r","formControlKeys","formControlDefaultValue","getDefaultControlValueFromCalculatorJSONConfig","generatePdf","event","calculateAndSetClearanceTarget","toLowerCase","customClearanceTargetDDLFC","customClearanceTargetFC","getClearance","WrArFloating","unsubscribe","calculatedData","val","selector","templateUrl","styleUrls","encapsulation","None","ArWrFloatingModule","declarations","providers","ArWrFloatingService","_http","baseUrl","settings","env","api","unit","unitTemp","body","toString","post"],"mappings":"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","file":"ar-wr-floating-ar-wr-floating-module-es5.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { ArWrFloatingComponent } from \"./ar-wr-floating.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ArWrFloatingComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ArWrFloatingRoutingModule { }\r\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { ErrorModel } from '../../models/error.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrFloatingValidationService {\n\n  constructor(\n    private readonly helperService: HelperService,\n    private readonly unitButtonService: UnitButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // Function serviceStorageTemperature min validation\n  serviceStorageTemperatureMinValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMinControl = control.get('serviceStorageTemperatureAmbient75FMin');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMinControl\n        && serviceStorageTemperatureAmbient75FMinControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMinError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 75°F or less\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 24°C or less\");\n        }\n\n        if (serviceStorageTemperatureAmbient75FMinError) {\n          error = serviceStorageTemperatureAmbient75FMinError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMinControl, error, \"serviceStorageTemperatureAmbientMin\");\n      return error;\n    };\n  }\n\n  // Function serviceStorageTemperature max validation\n  serviceStorageTemperatureMaxValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMaxControl = control.get('serviceStorageTemperatureAmbient75FMax');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMaxControl\n        && serviceStorageTemperatureAmbient75FMaxControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMaxError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 75°F or more\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 24°C or more\");\n        }\n\n\n        if (serviceStorageTemperatureAmbient75FMaxError) {\n          error = serviceStorageTemperatureAmbient75FMaxError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMaxControl, error, \"serviceStorageTemperatureAmbientMax\");\n      return error;\n    };\n  }\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** Doen't prevent the form submission*****************/\n  /********************************************************************/\n  // gland width validation\n  clearanceValidationBasedOnPumpAndComponentType(control: FormGroup): ErrorModel {\n    const pumpTypeControl = control.get('pumpType');\n    const componentTypeControl = control.get('componentType');\n\n    if (pumpTypeControl && pumpTypeControl.value && componentTypeControl && componentTypeControl.value) {\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      // const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const error = new ErrorModel();\n      error.field = '';\n      error.type = ErrorTypes.Warning;\n\n      const bushing = \"Follow OEM Bushing Clearance if Available\";\n      const bearing = \"Follow OEM Bearing Clearance if Available\";\n\n      if (pumpTypeControl.value.id === 3 && componentTypeControl.value.id === 1) // pumpType \"VS\" and componentType \"Wear Ring\"\n      {\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .05 mm Over Bearing Clearance (Or OEM Standard)\";\n        }\n        else {\n          // default inch unit is considered\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .002 inch Over Bearing Clearance(Or OEM Standard)\";\n        }\n      }\n      else if (componentTypeControl.value.id === 2) // componentType \"Bushing\"\n      {\n        error.detail = bushing;\n      }\n      else if (componentTypeControl.value.id === 3) // componentType Bearing\"\n      {\n        error.detail = bearing;\n      }\n      else {\n        return null;\n      }\n      return error;\n    }\n    else {\n      return null;\n    }\n  }\n}\n","// core imports\r\nimport { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n// third party imports\r\nimport { first } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// application imports\r\nimport { DynamicFormTwoColumnLayoutService } from \"../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\r\nimport { CalculatorModel } from \"../../models/calculator.model\";\r\nimport { FormControlModel } from '../../models/form-control.model';\r\nimport { BaseModel } from '../../models/base.model';\r\nimport { FormColumnModel } from '../../models/form-column.model';\r\nimport { ErrorModel } from '../../models/error.model';\r\nimport { ArWrCalcService } from \"../ar-wr-calc.service\";\r\nimport { AuthService } from \"../../shared/services/auth.service\";\r\nimport { ControlType, ControlSubType, Units, Temperature, WrArCalc_FloatingIn_Validators, ErrorTypes, CalculatorTypes } from '../../shared/helpers/constants';\r\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\r\nimport { PrintService } from \"../../shared/services/print.service\";\r\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\r\nimport { ArWrFloatingService } from \"./ar-wr-floating.service\";\r\nimport { ArWrFloatingValidationService } from \"./ar-wr-floating-validation.service\";\r\nimport { SwitchButtonModel } from '../../models/switch-button.model';\r\nimport { HelperService } from \"../../shared/services/helper.service\";\r\nimport { WrArMaterial } from '../../models/wrArMaterial.model';\r\n\r\n@Component({\r\n  selector: 'app-ar-wr-floating',\r\n  templateUrl: './ar-wr-floating.component.html',\r\n  styleUrls: ['./ar-wr-floating.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArWrFloatingComponent implements OnInit, OnDestroy {\r\n  calculatorConfig: CalculatorModel;\r\n  arwrFloatingForm: FormGroup;\r\n  flattenedFormControls: FormControlModel[] = [];\r\n  controlType = ControlType;\r\n  isSubmitted = false;\r\n  payLoad = '';\r\n  clientErrors: ErrorModel[] = [];\r\n  clientWarnings: ErrorModel[] = [];\r\n  serverErrors: ErrorModel[] = [];\r\n  serverWarnings: ErrorModel[] = [];\r\n\r\n  // calculated data\r\n  private calculatedData: any;\r\n\r\n  get CalculatedData(): any {\r\n    return this.calculatedData;\r\n  }\r\n\r\n  set CalculatedData(val: any) {\r\n    this.calculatedData = val;\r\n  }\r\n\r\n  // subscription\r\n  arWrDataSubscription: Subscription;\r\n  unitChangeSubscription: Subscription;\r\n\r\n  // constructor\r\n  constructor(\r\n    private readonly controlBaseService: ControlBaseService,\r\n    private readonly authService: AuthService,\r\n    private readonly arWrCalcService: ArWrCalcService,\r\n    private readonly dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\r\n    private readonly printService: PrintService,\r\n    private readonly unitButtonService: UnitButtonService,\r\n    private readonly temperatureButtonService: TemperatureButtonService,\r\n    private readonly helperService: HelperService,\r\n    private readonly arWrFloatingService: ArWrFloatingService,\r\n    private readonly arWrFloatingValidationService: ArWrFloatingValidationService,\r\n  ) {\r\n    // o-ring calculator config subscription\r\n    this.arWrDataSubscription = this.arWrCalcService.arWrConfig$.subscribe((x: BaseModel) => {\r\n      if (x) {\r\n        // calculator - Wr/Ar Floating\r\n        this.calculatorConfig = x.calculators[1];\r\n        // send calculator to dynamic form service\r\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[1]);\r\n        // create form\r\n        this.createForm();\r\n      }\r\n    });\r\n\r\n    // unit change\r\n    this.onUnitChange();\r\n  }\r\n\r\n  // form control changes subcription and update the graph data\r\n  getControlValue(fieldName: string) {\r\n    if (this.arwrFloatingForm && this.arwrFloatingForm.controls[fieldName]) {\r\n      return this.arwrFloatingForm.controls[fieldName].value;\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // onInit\r\n  ngOnInit(): void {\r\n    this.onReset();\r\n    this.isSubmitted = false;\r\n    this.CalculatedData = {};\r\n  }\r\n\r\n  // unit change perform operations\r\n  onUnitChange() {\r\n    // reset \r\n    this.resetFormAndCalculation();\r\n\r\n    // unit switch button click/change subscription\r\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\r\n      if (x) {\r\n        // reset \r\n        this.resetFormAndCalculation();\r\n\r\n        // set temperature\r\n        this.setTemperature();\r\n\r\n        if (this.CalculatedData) {\r\n          // calculated change detection when by changing the object\r\n          this.CalculatedData = Object.assign({}, this.CalculatedData);\r\n        }\r\n\r\n        // get rotor and stator cte dropdown controls\r\n        const selectedCustomRotatingMaterialControl = this.arwrFloatingForm?.controls[\"customRotatingMaterial\"];\r\n        const selectedCustomStationaryMaterialControl = this.arwrFloatingForm?.controls[\"customStationaryMaterial\"];\r\n\r\n        // clear rotor CTE custom input values\r\n        if (selectedCustomRotatingMaterialControl) {\r\n          selectedCustomRotatingMaterialControl.setValue(\"\");\r\n        }\r\n\r\n        // clear stator CTE custom input values\r\n        if (selectedCustomStationaryMaterialControl) {\r\n          selectedCustomStationaryMaterialControl.setValue(\"\");\r\n        }\r\n\r\n        // convert the form data\r\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.arwrFloatingForm, x);\r\n\r\n        // rotating material dropdown selected and not custom selected\r\n        const selectedRotatingMaterialControl = this.arwrFloatingForm?.controls[\"rotatingMaterial\"];\r\n        const selectedStationaryMaterialControl = this.arwrFloatingForm?.controls[\"stationaryMaterial\"];\r\n\r\n        // rotating material dropdown selected and not custom selected\r\n        // convert 10 power -6 to XX.XX\r\n        if (selectedRotatingMaterialControl && selectedRotatingMaterialControl.value && selectedRotatingMaterialControl.value.value > 0) {\r\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, \"rotatingMaterial\", \"customRotatingMaterial\", selectedRotatingMaterialControl.value);\r\n        }\r\n\r\n        // stationary material dropdown selected and not custom selected\r\n        // convert 10 power -6 to XX.XX\r\n        if (selectedStationaryMaterialControl && selectedStationaryMaterialControl.value && selectedStationaryMaterialControl.value.value > 0) {\r\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, \"stationaryMaterial\", \"customStationaryMaterial\", selectedStationaryMaterialControl.value);\r\n        }\r\n\r\n        if (convertedForm) {\r\n          this.arwrFloatingForm = convertedForm;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // set temperature\r\n  setTemperature() {\r\n    let currentUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n    let currentTemp: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\r\n\r\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.INCH) {\r\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.FAHRENHEIT) {\r\n        this.helperService.setAndSendTemperatureManually(Temperature.FAHRENHEIT);\r\n      }\r\n    }\r\n\r\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.MILLI_METER) {\r\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.CELCIUS) {\r\n        this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.CalculatedData = {};\r\n    // reset error, warnings\r\n    this.resetErroAndWarnings();\r\n    // reset calculated output\r\n    this.resetCalculatedLabelValue();\r\n\r\n    if (!this.calculatorConfig) {\r\n      return;\r\n    }\r\n\r\n\r\n    if (!this.arwrFloatingForm || !this.arwrFloatingForm.value) {\r\n      return;\r\n    }\r\n\r\n    this.payLoad = this.arwrFloatingForm.value;\r\n    this.isSubmitted = true;\r\n\r\n    // client errors that doesnot prevent to submit forms/calculation\r\n    // glandWidth validation\r\n    if (this.calculatorConfig.form.form_validation.includes(WrArCalc_FloatingIn_Validators.CLEARANCE_VALIDATION)) {\r\n      const clearanceBasedOnPumpAndComponentTypeError = this.arWrFloatingValidationService.clearanceValidationBasedOnPumpAndComponentType(this.arwrFloatingForm);\r\n      if (clearanceBasedOnPumpAndComponentTypeError) {\r\n        this.addClientErrors(clearanceBasedOnPumpAndComponentTypeError);\r\n      }\r\n    }\r\n\r\n    // stop here if form is invalid/Not_valid\r\n    if (!this.arwrFloatingForm || this.arwrFloatingForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // perform calculation\r\n    this.arWrFloatingService.floatingCalculation(this.arwrFloatingForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe(\r\n      (resp: any) => {\r\n        // response\r\n        if (resp.data) {\r\n          // set CalculatedData\r\n          // this will set the graph data also\r\n          this.CalculatedData = Object.assign({}, resp.data);\r\n\r\n          if (resp.data.error && resp.data.error.length > 0) {\r\n            this.serverErrors = resp.data.error.slice();\r\n          }\r\n\r\n          if (resp.data.warning && resp.data.warning.length > 0) {\r\n            this.serverWarnings = resp.data.warning;\r\n          }\r\n\r\n          const responseDataKeys = Object.keys(resp.data);\r\n\r\n          // Bind output form data\r\n          // loop through each output\r\n          for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n            // loop through rows\r\n            for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n              // loop through columns\r\n              for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n                // loop through controls\r\n                for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n                  // get form control of JSON\r\n                  const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n                  // get fields key from resp data\r\n                  // const responseDataKeys = Object.keys(resp.data);\r\n                  for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\r\n                    if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\r\n                      // output values validation\r\n                      // Check cross section thickness validation\r\n                      const outMachineCompositeODInch = resp.data['machineCompositeODInch'];\r\n                      const outFinishMachineCompositeIDAfterInstallationInch = resp.data['finishMachineCompositeIDAfterInstallationInch'];\r\n                      let crosssectionThickness = 0.236;\r\n                      if (this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER) {\r\n                        crosssectionThickness = 0.6;\r\n                      }\r\n                      if (!((outMachineCompositeODInch - outFinishMachineCompositeIDAfterInstallationInch) > crosssectionThickness)) {\r\n                        const crossSectionThicknessError = new ErrorModel();\r\n                        crossSectionThicknessError.field = '';\r\n                        crossSectionThicknessError.type = ErrorTypes.Error;\r\n                        crossSectionThicknessError.detail = \"Check cross section thickness.\";\r\n                        this.addClientErrors(crossSectionThicknessError);\r\n                      }\r\n\r\n                      // set JSON output label\r\n                      // bind calculated result to output label\r\n                      this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)) : resp.data[responseDataKeys[keyIndex]]}`;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // reset auth token \r\n          this.setAuth();\r\n        }\r\n      }, (error: any) => {\r\n        // reset auth token \r\n        this.setAuth();\r\n        // TODO: show error if any\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // create form group\r\n  createForm() {\r\n    // get form controls nested array\r\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\r\n      row.form_layout_columns.map((column: FormColumnModel) => {\r\n        let formControls: FormControlModel[] = [];\r\n        for (let index = 0; index < column.form_controls.length; index++) {\r\n          // get existing inputted values of form \r\n          if (this.arwrFloatingForm) {\r\n            const fc = this.arwrFloatingForm.get(column.form_controls[index].key);\r\n            if (fc) {\r\n              column.form_controls[index].value = fc.value;\r\n            }\r\n          }\r\n          // create reactive form of only those control which are show = true\r\n          if (column.form_controls[index].show) {\r\n            formControls.push(column.form_controls[index]);\r\n          }\r\n        }\r\n        return formControls;\r\n      }));\r\n\r\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\r\n      row.form_layout_columns.map((column: FormColumnModel) => {\r\n        let formControls: FormControlModel[] = [];\r\n        for (let index = 0; index < column.form_controls.length; index++) {\r\n          // get existing inputted values of form \r\n          if (this.arwrFloatingForm) {\r\n            const fc = this.arwrFloatingForm.get(column.form_controls[index].key);\r\n            if (fc) {\r\n              column.form_controls[index].value = fc.value;\r\n            }\r\n          }\r\n          // createreaxctive form of only those control which are show = true\r\n          if (column.form_controls[index].show) {\r\n            formControls.push(column.form_controls[index]);\r\n          }\r\n        }\r\n        return formControls;\r\n      }));\r\n\r\n    // make form control flatten array\r\n    this.flattenedFormControls = [];\r\n    // add calculator toolbar option\r\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\r\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\r\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\r\n    // exclude formcontrol which is type of label\r\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\r\n      // exclude labels and buttons from formgroup\r\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\r\n        return fc;\r\n      }\r\n    });\r\n\r\n    this.arwrFloatingForm = this.controlBaseService.toFormGroup(filteredControls);\r\n    // get and set validations\r\n    const validations: ValidatorFn[] = [];\r\n    // get validation key from json config object\r\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\r\n\r\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\r\n      const validationFuncKey = jsonConfigValidationsArray[index];\r\n      switch (validationFuncKey) {\r\n        case WrArCalc_FloatingIn_Validators.SERVICE_STORAGE_TEMPERATURE_MIN:\r\n          validations.push(this.arWrFloatingValidationService.serviceStorageTemperatureMinValidation());\r\n          break;\r\n        case WrArCalc_FloatingIn_Validators.SERVICE_STORAGE_TEMPERATURE_MAX:\r\n          validations.push(this.arWrFloatingValidationService.serviceStorageTemperatureMaxValidation());\r\n          break;\r\n      }\r\n    }\r\n    // set custom validations with params\r\n    this.arwrFloatingForm.setValidators(validations);\r\n  }\r\n\r\n  // reset auth token\r\n  setAuth() {\r\n    this.authService.authenticate().pipe(first())\r\n      .subscribe(r => r);\r\n  }\r\n\r\n  // add client errors\r\n  addClientErrors(error: ErrorModel) {\r\n    if (this.clientErrors.length > 0) {\r\n      for (let index = 0; index < this.clientErrors.length; index++) {\r\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\r\n          this.clientErrors.push(error);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.clientErrors.push(error);\r\n    }\r\n\r\n    this.clientErrors = this.clientErrors.slice();\r\n  }\r\n\r\n  // add client warnings\r\n  addClientWarnings(warning: ErrorModel) {\r\n    if (this.clientWarnings.length > 0) {\r\n      for (let index = 0; index < this.clientWarnings.length; index++) {\r\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\r\n          this.clientWarnings.push(warning);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.clientWarnings.push(warning);\r\n    }\r\n\r\n    this.clientWarnings = this.clientWarnings.slice();\r\n  }\r\n\r\n  // reset error, warnings of client and server\r\n  resetErroAndWarnings() {\r\n    this.clientErrors = [];\r\n    this.clientWarnings = [];\r\n    this.serverErrors = [];\r\n    this.serverWarnings = [];\r\n  }\r\n\r\n  // reset calculated label or output value in JSOn config\r\n  resetCalculatedLabelValue() {\r\n    this.CalculatedData = {};\r\n    // reset left form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // reset calculated result to output label\r\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset right form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset output form data\r\n    // loop through each output\r\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n      // loop through rows\r\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n        // loop through columns\r\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n          // loop through controls\r\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n            // get form control of JSON\r\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n            if (formControl.sub_type === ControlSubType.calculated_label) {\r\n              // set JSON output label\r\n              // bind calculated result to output label\r\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetFormAndCalculation() {\r\n    // reset form submitted status to false \r\n    this.isSubmitted = false;\r\n\r\n    // reset client errors and warnings\r\n    this.clientErrors = [];\r\n    this.clientWarnings = [];\r\n    this.serverErrors = [];\r\n    this.serverWarnings = [];\r\n\r\n    if (!this.calculatorConfig) {\r\n      return;\r\n    }\r\n\r\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\r\n    // reset left form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset right form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset output form data\r\n    // loop through each output\r\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n      // loop through rows\r\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n        // loop through columns\r\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n          // loop through controls\r\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n            // get form control of JSON\r\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n            // get fields key from resp data\r\n            if (formControl.sub_type === ControlSubType.calculated_label) {\r\n              // set JSON output label\r\n              // bind calculated result to output label\r\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = ``;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset calculated data received after calculation\r\n    this.CalculatedData = null;\r\n  }\r\n\r\n  // on reset button handler\r\n  onReset() {\r\n    if (!this.arwrFloatingForm) {\r\n      return;\r\n    }\r\n\r\n    // get form controls key\r\n    const formControlKeys = Object.keys(this.arwrFloatingForm.controls);\r\n    // loop through the reactive form/formgroup controls \r\n    for (let index = 0; index < formControlKeys.length; index++) {\r\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\r\n      if (formControlDefaultValue) {\r\n        this.arwrFloatingForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\r\n      }\r\n      else {\r\n        this.arwrFloatingForm.controls[formControlKeys[index]].setValue('');\r\n      }\r\n    }\r\n\r\n    this.resetFormAndCalculation();\r\n  }\r\n\r\n  // print button event handler\r\n  onPrint() {\r\n    this.printService.generatePdf(\"WrArFloating\");\r\n  }\r\n\r\n  // dropdown change event handler of the dynamic form\r\n  dropdownSelectionChange(event: any) {\r\n    // clearance dropdown selected value\r\n    this.calculateAndSetClearanceTarget();\r\n\r\n    // get and set rotating material change when custom no selected\r\n    if (event.formControl.key === \"rotatingMaterial\" && event.value.value > 0) {\r\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, event.formControl.key, \"customRotatingMaterial\", event.value);\r\n    }\r\n\r\n    // get and set stationary material change when custom no selected\r\n    if (event.formControl.key === \"stationaryMaterial\" && event.value.value > 0) {\r\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, event.formControl.key, \"customStationaryMaterial\", event.value);\r\n    }\r\n  }\r\n\r\n  // numeric input value change event handler of the dynamic form\r\n  numericInputValueChange(event: any) {\r\n    if (event.key.toLowerCase() === (\"rotatingElementODMax\").toLowerCase()) {\r\n      this.calculateAndSetClearanceTarget();\r\n    }\r\n  }\r\n\r\n  // calculate clearanceCLR based on the \"rotatingElementODMax\"\r\n  private calculateAndSetClearanceTarget() {\r\n    // clearance dropdown selected value\r\n    const customClearanceTargetDDLFC = this.arwrFloatingForm.controls[\"clearanceTarget\"];\r\n    // stabdard clearance\r\n    if (customClearanceTargetDDLFC && customClearanceTargetDDLFC.value.value > 0) {\r\n      const customClearanceTargetFC = this.arwrFloatingForm.controls[\"customClearanceTarget\"];\r\n      // standard option selected\r\n      this.arWrCalcService.getClearance(this.arwrFloatingForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue, CalculatorTypes.WrArFloating).subscribe((x: any) => {\r\n        if (x && customClearanceTargetFC && (customClearanceTargetFC.value != x)) {\r\n          customClearanceTargetFC.setValue(x.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // component destroy\r\n  ngOnDestroy(): void {\r\n    if (this.arWrDataSubscription) {\r\n      this.arWrDataSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"row wr-ar-pressin\">\n    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n        <form *ngIf=\"calculatorConfig && arwrFloatingForm\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"arwrFloatingForm\"\n            novalidate class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\" [form]=\"arwrFloatingForm\"\n                        [isSubmitted]=\"isSubmitted\" (reset)=\"onReset()\" (print)=\"onPrint()\">\n                    </calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                    <dynamic-form-two-column-layout [form]=\"arwrFloatingForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [isShowNotes]=\"true\" [decimalPoint]=\"3\"\n                        [isUpdateDecimalPointOnUnitChange]=\"false\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\" [isWrAr]=\"true\"\n                        (dropdownSelectionChange)=\"dropdownSelectionChange($event)\"\n                        (numericInputValueChange)=\"numericInputValueChange($event)\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { ArWrFloatingRoutingModule } from \"./ar-wr-floating-routing.module\";\nimport { ArWrFloatingService } from \"./ar-wr-floating.service\";\nimport { ArWrFloatingValidationService } from \"./ar-wr-floating-validation.service\";\nimport { ArWrFloatingComponent } from './ar-wr-floating.component';\n\n\n\n@NgModule({\n  declarations: [ArWrFloatingComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArWrFloatingRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ArWrFloatingService,\n    ArWrFloatingValidationService\n  ]\n})\nexport class ArWrFloatingModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { FormGroup } from '@angular/forms';\nimport { PressInDTO } from 'client/app/models/pressInDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrFloatingService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  public floatingCalculation(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n\n    return this._http.post(`${this.baseUrl}wrar/floatingCalculation`, body);\n  }\n}\n"]}