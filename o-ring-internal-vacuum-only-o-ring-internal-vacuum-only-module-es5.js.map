{"version":3,"sources":["webpack:///client/app/models/oring-rectangular-gland-internal-vacuum-only-maxvalues.ts","webpack:///client/app/models/oring-rectangular-gland-internal-vacuum-only-minvalues.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only-routing.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only-validation.service.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.component.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.component.html","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.service.ts"],"names":["ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel","options","glandIdMax","ORingRectangularGlandInternalVacuumOnlyMinvaluesModel","glandIdMin","routes","path","component","pathMatch","ORingInternalVacuumOnlyRoutingModule","forChild","imports","exports","glandWidthNoReliableWarningTitle","glandWidthNoReliableWarningMessage","ORingInternalVacuumOnlyValidationService","helperService","unitButtonService","temperatureButtonService","control","bottomRadiiNominalControl","get","bottomRadiiMinControl","bottomRadiiMaxControl","glandWidthNominalControl","glandDepthNominalControl","error","bottomRadiiNominalError1","value","bottomRadiiNominalError2","setValidationErrorToFormControl","bottomRadiiMinError1","bottomRadiiMinError2","bottomRadiiMaxError1","bottomRadiiMaxError2","materialCteNominalControl","operatingTemperatureNominalControl","operatingTemperatureMinControl","operatingTemperatureMaxControl","currentSelectedTemperature","getCurrentTemperatureValue","materialCteNominalValue","maxtemp","message","FAHRENHEIT","id","mintempF","maxtempF","mname","mintemp","operatingTemperatureNominalInCelcius","convertFahrenheitToCelcius","toFixed","operatingTemperatureNominalLessThanMaxTempError","operatingTemperatureNominalLargerThanMinTempError","setErrors","operatingTemperatureMinInCelcius","operatingTemperatureMinLessThanMaxTempError","operatingTemperatureMinLargerThanMinTempError","operatingTemperatureMaxInCelcius","operatingTemperatureMaxLessThanMaxTempError","operatingTemperatureMaxLargerThanMinTempError","oringCrossSectionNominalControl","currentSelectedUnit","getCurrentUnitValue","oringCrossSectionNominalLessThanRangeError","oringCrossSectionNominalLargerThanRangeError","INCH","MILLI_METER","warning","oringIdNominalControl","parseFloat","field","title","detail","type","Warning","maxOringIdValue","toString","display_Short_title","toolbarOptionkey","formControlKeys","Object","keys","controls","index","length","fc","msg","glandWidthToleranceControl","glandDepthToleranceControl","bottomRadiiToleranceControl","gapToleranceControl","gapNominalControl","glandIdToleranceControl","glandIdNominalControl","form","oringCrossSectionNominalControlValue","option","glandWidthMinControlValue","WithTolerance","minValues","generateMinValues","glandWidthMin","glandWidthMaxControlValue","maxValues","generateMaxValues","glandWidthMax","bottomRadiiMinLimit","oringCrossSectionNominalLessThanError","errors","glandDepthMinControlValue","bottomRadiiMinControlValue","gapMinControlValue","glandIdMinControlValue","glandDepthMin","bottomRadiiMin","gapMin","error1","push","error2","error3","error4","error5","glandDepthMaxControlValue","bottomRadiiMaxControlValue","gapMaxControlValue","glandIdMaxControlValue","glandDepthMax","bottomRadiiMax","gapMax","minValue","maxValue","providedIn","ORingInternalVacuumOnlyComponent","controlBaseService","authService","rectangularORingCalcService","dynamicFormTwoColumnLayoutService","printService","oRingInternalVacuumOnlyValidationService","oRingInternalVacuumOnlyService","calculatorToolbarService","flattenedFormControls","controlType","isSubmitted","payLoad","clientErrors","clientWarnings","serverErrors","serverWarnings","isShowPasteBtn","oRingDataSubscription","oRingConfig$","subscribe","x","calculatorConfig","calculators","sendCalculator","onOptionChange","toolbarOption","setShowPasteBtnFlag","onTemperatureChangeUpdateCalculator","paste","d","onPaste","onUnitChange","fieldName","oringform","onReset","CalculatedData","resetFormAndCalculation","unitChangeSubscription","unit$","convertedForm","convertFormUnitControlValuesAndSet","onSubmit","temperatureChangeSubscription","temperature$","resetErroAndWarnings","resetCalculatedLabelValue","form_validation","includes","GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION","glandWidthShouldBeLargerThanORingCrossSectionError","glandWidthShouldBeLargerThanORingCrossSection","addClientErrors","O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION","oringCrossSectionNominalLessThanValidation","BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT","bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError","bottomRadiiShouldBeLargerThanBottomRadiiMinLimit","Nominal","MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","minValueErrors","minValueValidation","MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","maxValueErrors","maxValueValidation","glandWidthNominalWarning","addClientWarnings","glandWidthMinWarning","glandWidthMaxWarning","invalid","createORing","resp","data","assign","slice","responseDataKeys","rowIndex","left_column","form_layout_row","columnIndex","form_layout_columns","controlIndex","form_controls","formControl","keyIndex","sub_type","calculated_label","key","label","right_column","outputIndex","form_output","temperatureCode","HEXA_DECIMAL_CODE","operatingTemperatureMin","operatingTemperatureNominal","operatingTemperatureMax","show","display_output_title","row","undefined","isNaN","setAuth","console","log","selectedOption","showOrHideControlsBasedOnOption","createForm","formControlDefaultValue","getDefaultControlValueFromCalculatorJSONConfig","setValue","generatePdf","leftFormControls","map","column","formControls","rightFormControls","flatten","filteredControls","filter","button","toFormGroup","validations","jsonConfigValidationsArray","validationFuncKey","BOTTOM_RADII_NOMINAL_VALIDATION","bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth","OPERATING_TEMPERATURE_VALIDATION","operatingTemperatureValidation","O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION","oringCrossSectionNominalValidation","LESS_THAN_ZERO_VALIDATION","formLessThanZeroValidation","TOLERANCE_VALIDATION","toleranceValidation","ORING_ID_AS568A_STANDARD_WARNING","oRingIDAS568AStandardsWarning","O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION","oringIDNominalLargerThanMaxOringIDValidation","setValidators","authenticate","pipe","r","unsubscribe","calculatedData","patchValue","cte","getMaterialChoiceList","i","findIndex","c","isCalculatedDataExist","val","selector","templateUrl","styleUrls","ORingInternalVacuumOnlyModule","declarations","providers","ORingInternalVacuumOnlyService","_http","baseUrl","settings","env","api","oRingInternalVacuumCalculatorSubject","oRingInternalVacuumCalculator$","asObservable","oRingInternalVacuumCalculator","inputOption","unit","unitTemp","body","post","getValue","next"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QACaA,qD;;;;;AAGT,uEAMQ;AAAA;;AAAA,YANIC,OAMJ,uEAAJ,EAAI;;AAAA;;AACJ,kCAAMA,OAAN;AACA,cAAKC,UAAL,GAAkBD,OAAO,CAACC,UAA1B;AAFI;AAGP;;;MAZsE,oE;;;;;;;;;;;;;;;;;ACD3E;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QACaC,qD;;;;;AAGT,uEAMQ;AAAA;;AAAA,YANIF,OAMJ,uEAAJ,EAAI;;AAAA;;AACJ,oCAAMA,OAAN;AACA,eAAKG,UAAL,GAAkBH,OAAO,CAACG,UAA1B;AAFI;AAGP;;;MAZsE,oE;;;;;;;;;;;;;;;;;ACD3E;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACnB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,uGAAvB;AAAyDC,eAAS,EAAE;AAApE,KADmB,CAAvB;;QAUaC,oC;;;;;YAAAA;;;;yBAAAA,oC;AAAoC,O;AAAA,gBALpC,CACL,6DAAaC,QAAb,CAAsBL,MAAtB,CADK,CAKoC,EAFnC,4DAEmC;;;;0HAApCI,oC,EAAoC;AAAA;AAAA,kBAFnC,4DAEmC;AAAA,O;AAFvB,K;;;;;sEAEbA,oC,EAAoC;cANhD,sDAMgD;eANvC;AACNE,iBAAO,EAAE,CACL,6DAAaD,QAAb,CAAsBL,MAAtB,CADK,CADH;AAINO,iBAAO,EAAE,CAAC,4DAAD;AAJH,S;AAMuC,Q;;;;;;;;;;;;;;;;;;ACfjD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uF,CAAA;AAIA;;;AAYA,QAAMC,gCAAgC,GAAG,aAAzC;AACA,QAAMC,kCAAkC,GAAG,kHAA3C;;QAKaC,wC;AAEX,wDACUC,aADV,EAEUC,iBAFV,EAGUC,wBAHV,EAG4D;AAAA;;AAFlD,aAAAF,aAAA,GAAAA,aAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,wBAAA,GAAAA,wBAAA;AACL;AAEL;;AACA;;AACA;;AACA;AAEA;AACA;;;;;4EACiD;AAAA;;AAC/C,iBAAO,UAACC,OAAD,EAAiD;AACtD,gBAAMC,yBAAyB,GAAGD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMC,qBAAqB,GAAGH,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAME,qBAAqB,GAAGJ,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAMG,wBAAwB,GAAGL,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAIK,KAAK,GAAQ,IAAjB,CANsD,CAOtD;;AACA,gBAAIN,yBAAJ,EAA+B;AAC7B,kBAAMO,wBAAwB,GAAG,mIAAqBP,yBAAyB,CAACQ,KAA/C,EAAsDH,wBAAwB,CAACG,KAA/E,EAAsF,oBAAtF,EAA4G,cAA5G,EAA4H,yEAA5H,CAAjC;AACA,kBAAMC,wBAAwB,GAAG,+HAAiBT,yBAAyB,CAACQ,KAA3C,EAAkDJ,wBAAwB,CAACI,KAA3E,EAAkF,oBAAlF,EAAwG,cAAxG,EAAwH,yEAAxH,CAAjC;;AACA,kBAAID,wBAAJ,EAA8B;AAC5BD,qBAAK,GAAGC,wBAAR;AACD,eAFD,MAGK,IAAIE,wBAAJ,EAA8B;AACjCH,qBAAK,GAAGG,wBAAR;AACD;;AAED,oBAAI,CAACb,aAAL,CAAmBc,+BAAnB,CAAmDV,yBAAnD,EAA8EM,KAA9E,EAAqF,mDAArF;AACD,aAnBqD,CAqBtD;;;AACA,gBAAIJ,qBAAJ,EAA2B;AACzB,kBAAMS,oBAAoB,GAAG,mIAAqBT,qBAAqB,CAACM,KAA3C,EAAkDH,wBAAwB,CAACG,KAA3E,EAAkF,gBAAlF,EAAoG,cAApG,EAAoH,yEAApH,CAA7B;AACA,kBAAMI,oBAAoB,GAAG,+HAAiBV,qBAAqB,CAACM,KAAvC,EAA8CJ,wBAAwB,CAACI,KAAvE,EAA8E,gBAA9E,EAAgG,cAAhG,EAAgH,yEAAhH,CAA7B;;AACA,kBAAIG,oBAAJ,EAA0B;AACxBL,qBAAK,GAAGK,oBAAR;AACD,eAFD,MAGK,IAAIC,oBAAJ,EAA0B;AAC7BN,qBAAK,GAAGM,oBAAR;AACD;;AACD,oBAAI,CAAChB,aAAL,CAAmBc,+BAAnB,CAAmDR,qBAAnD,EAA0EI,KAA1E,EAAiF,mDAAjF;AACD,aAhCqD,CAkCtD;;;AACA,gBAAIH,qBAAJ,EAA2B;AACzB,kBAAMU,oBAAoB,GAAG,mIAAqBV,qBAAqB,CAACK,KAA3C,EAAkDH,wBAAwB,CAACG,KAA3E,EAAkF,gBAAlF,EAAoG,cAApG,EAAoH,yEAApH,CAA7B;AACA,kBAAMM,oBAAoB,GAAG,+HAAiBX,qBAAqB,CAACK,KAAvC,EAA8CJ,wBAAwB,CAACI,KAAvE,EAA8E,gBAA9E,EAAgG,cAAhG,EAAgH,yEAAhH,CAA7B;;AACA,kBAAIK,oBAAJ,EAA0B;AACxBP,qBAAK,GAAGO,oBAAR;AACD,eAFD,MAGK,IAAIC,oBAAJ,EAA0B;AAC7BR,qBAAK,GAAGQ,oBAAR;AACD;;AAED,oBAAI,CAAClB,aAAL,CAAmBc,+BAAnB,CAAmDP,qBAAnD,EAA0EG,KAA1E,EAAiF,mDAAjF;AACD;;AACD,mBAAOA,KAAP;AACD,WAhDD;AAiDD,S,CAED;;;;yDAC8B;AAAA;;AAC5B,iBAAO,UAACP,OAAD,EAAiD;AACtD,gBAAMgB,yBAAyB,GAAGhB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMe,kCAAkC,GAAGjB,OAAO,CAACE,GAAR,CAAY,6BAAZ,CAA3C;AACA,gBAAMgB,8BAA8B,GAAGlB,OAAO,CAACE,GAAR,CAAY,yBAAZ,CAAvC;AACA,gBAAMiB,8BAA8B,GAAGnB,OAAO,CAACE,GAAR,CAAY,yBAAZ,CAAvC;AACA,gBAAMkB,0BAA0B,GAAsB,MAAI,CAACrB,wBAAL,CAA8BsB,0BAApF;AACA,gBAAIC,uBAAuB,GAAGN,yBAAyB,CAACP,KAAxD;AACA,gBAAIF,KAAK,GAAG,IAAZ;;AACA,gBAAIe,uBAAuB,IAAIA,uBAAuB,CAACC,OAAvD,EAAgE;AAE9D;AACA,kBAAIC,OAAO,GAAG,EAAd;;AACA,kBAAI,sEAAYC,UAAZ,KAA2B,CAAEL,0BAA0B,CAACM,EAA5D,EAAiE;AAC/DF,uBAAO,GAAG,0DAA0DF,uBAAuB,CAACK,QAAlF,GAA6F,MAA7F,GAAsGL,uBAAuB,CAACM,QAA9H,GAAyI,qCAAzI,GAAiLN,uBAAuB,CAACO,KAAzM,GAAiN,gFAA3N;AACD,eAFD,MAGK;AACH;AACAL,uBAAO,GAAG,0DAA0DF,uBAAuB,CAACQ,OAAlF,GAA4F,MAA5F,GAAqGR,uBAAuB,CAACC,OAA7H,GAAuI,qCAAvI,GAA+KD,uBAAuB,CAACO,KAAvM,GAA+M,gFAAzN;AACD,eAV6D,CAY9D;;;AACA,kBAAIZ,kCAAkC,CAACR,KAAvC,EAA8C;AAC5C,oBAAIsB,oCAAoC,GAAGd,kCAAkC,CAACR,KAA9E;;AACA,oBAAK,CAACW,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/DM,sDAAoC,GAAG,MAAI,CAAClC,aAAL,CAAmBmC,0BAAnB,CAA8Cf,kCAAkC,CAACR,KAAjF,EAAwFwB,OAAxF,CAAgG,CAAhG,CAAvC;AACD,iBAJ2C,CAM5C;;;AACA,oBAAMC,+CAA+C,GAAG,iIAAmBZ,uBAAuB,CAACC,OAA3C,EAAoDQ,oCAApD,EAA0F,6BAA1F,EAAyH,uBAAzH,EAAkJP,OAAlJ,CAAxD;AACA,oBAAMW,iDAAiD,GAAG,mIAAqBb,uBAAuB,CAACQ,OAA7C,EAAsDC,oCAAtD,EAA4F,6BAA5F,EAA2H,uBAA3H,EAAoJP,OAApJ,CAA1D;;AACA,oBAAIU,+CAA+C,IAAIC,iDAAvD,EAA0G;AACxG5B,uBAAK,GAAG2B,+CAA+C,IAAIC,iDAA3D;AACD;;AACDlB,kDAAkC,CAACmB,SAAnC,CAA6C7B,KAA7C;AACD,eA1B6D,CA4B9D;;;AACA,kBAAIW,8BAA8B,CAACT,KAAnC,EAA0C;AACxC,oBAAI4B,gCAAgC,GAAGnB,8BAA8B,CAACT,KAAtE;;AACA,oBAAK,CAACW,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/DY,kDAAgC,GAAG,MAAI,CAACxC,aAAL,CAAmBmC,0BAAnB,CAA8Cd,8BAA8B,CAACT,KAA7E,EAAoFwB,OAApF,CAA4F,CAA5F,CAAnC;AACD,iBAJuC,CAMxC;;;AACA,oBAAMK,2CAA2C,GAAG,iIAAmBhB,uBAAuB,CAACC,OAA3C,EAAoDc,gCAApD,EAAsF,yBAAtF,EAAiH,uBAAjH,EAA0Ib,OAA1I,CAApD;AACA,oBAAMe,6CAA6C,GAAG,mIAAqBjB,uBAAuB,CAACQ,OAA7C,EAAsDO,gCAAtD,EAAwF,yBAAxF,EAAmH,uBAAnH,EAA4Ib,OAA5I,CAAtD;;AACA,oBAAIc,2CAA2C,IAAIC,6CAAnD,EAAkG;AAChGhC,uBAAK,GAAG+B,2CAA2C,IAAIC,6CAAvD;AACD;;AACDrB,8CAA8B,CAACkB,SAA/B,CAAyC7B,KAAzC;AACD,eA1C6D,CA4C9D;;;AACA,kBAAIY,8BAA8B,CAACV,KAAnC,EAA0C;AACxC,oBAAI+B,gCAAgC,GAAGrB,8BAA8B,CAACV,KAAtE;;AACA,oBAAK,CAACW,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/De,kDAAgC,GAAG,MAAI,CAAC3C,aAAL,CAAmBmC,0BAAnB,CAA8Cb,8BAA8B,CAACV,KAA7E,EAAoFwB,OAApF,CAA4F,CAA5F,CAAnC;AACD,iBAJuC,CAMxC;;;AACA,oBAAMQ,2CAA2C,GAAG,iIAAmBnB,uBAAuB,CAACC,OAA3C,EAAoDiB,gCAApD,EAAsF,yBAAtF,EAAiH,uBAAjH,EAA0IhB,OAA1I,CAApD;AACA,oBAAMkB,6CAA6C,GAAG,mIAAqBpB,uBAAuB,CAACQ,OAA7C,EAAsDU,gCAAtD,EAAwF,yBAAxF,EAAmH,uBAAnH,EAA4IhB,OAA5I,CAAtD;;AACA,oBAAIiB,2CAA2C,IAAIC,6CAAnD,EAAkG;AAChGnC,uBAAK,GAAGkC,2CAA2C,IAAIC,6CAAvD;AACD;;AACDvB,8CAA8B,CAACiB,SAA/B,CAAyC7B,KAAzC;AACD;AACF;;AAED,mBAAOA,KAAP;AACD,WAtED;AAuED,S,CAED;;;;6DACkC;AAAA;;AAChC,iBAAO,UAACP,OAAD,EAAiD;AACtD,gBAAM2C,+BAA+B,GAAG3C,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,gBAAM0C,mBAAmB,GAAsB,MAAI,CAAC9C,iBAAL,CAAuB+C,mBAAtE;AACA,gBAAItC,KAAK,GAAG,IAAZ;;AACA,gBAAIoC,+BAA+B,IAC9BA,+BAA+B,CAAClC,KADrC,EAEE;AACA;AACA,kBAAIqC,0CAAJ;AACA,kBAAIC,4CAAJ;;AAEA,kBAAK,CAACH,mBAAmB,CAAClB,EAAtB,KAA8B,gEAAMsB,IAAxC,EAA8C;AAC5CF,0DAA0C,GAAG,iIAAmBH,+BAA+B,CAAClC,KAAnD,EAA0D,OAA1D,EAAmE,0BAAnE,EAA+F,sBAA/F,EAAuH,iHAAvH,CAA7C;AACAsC,4DAA4C,GAAG,mIAAqBJ,+BAA+B,CAAClC,KAArD,EAA4D,OAA5D,EAAqE,0BAArE,EAAiG,sBAAjG,EAAyH,oHAAzH,CAA/C;AACD;;AAED,kBAAK,CAACmC,mBAAmB,CAAClB,EAAtB,KAA8B,gEAAMuB,WAAxC,EAAqD;AACnDH,0DAA0C,GAAG,iIAAmBH,+BAA+B,CAAClC,KAAnD,EAA0D,MAA1D,EAAkE,0BAAlE,EAA8F,sBAA9F,EAAsH,iHAAtH,CAA7C;AACAsC,4DAA4C,GAAG,mIAAqBJ,+BAA+B,CAAClC,KAArD,EAA4D,MAA5D,EAAoE,0BAApE,EAAgG,sBAAhG,EAAwH,oHAAxH,CAA/C;AACD;;AAGD,kBAAIqC,0CAA0C,IAAIC,4CAAlD,EAAgG;AAC9FxC,qBAAK,GAAGuC,0CAA0C,IAAIC,4CAAtD;AACD;AACF;;AAED,kBAAI,CAAClD,aAAL,CAAmBc,+BAAnB,CAAmDgC,+BAAnD,EAAoFpC,KAApF,EAA2F,6BAA3F;;AACA,mBAAOA,KAAP;AACD,WA7BD;AA8BD,S,CAED;;;;wDAC6B;AAAA;;AAC3B,iBAAO,UAACP,OAAD,EAAiD;AACtD,gBAAIkD,OAAO,GAAe,IAA1B;AACA,gBAAMP,+BAA+B,GAAG3C,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,gBAAMiD,qBAAqB,GAAGnD,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAM0C,mBAAmB,GAAsB,MAAI,CAAC9C,iBAAL,CAAuB+C,mBAAtE;;AAEA,gBAAK,CAACD,mBAAmB,CAAClB,EAAtB,KAA8B,gEAAMsB,IAAxC,EAA8C;AAC5C,kBAAKI,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAArD,IAA8D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAAnH,KAA6H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA1C,IAAmD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA1N,CAAD,IACD2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAArD,IAA8D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAAnH,KAA6H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA1C,IAAmD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA1N,CADC,IAED2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAArD,IAA8D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAAnH,KAA6H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA3N,CAFC,IAGD2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAArD,IAA8D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAAnH,KAA6H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA3N,CAHC,IAID2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAArD,IAA8D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,KAAnH,KAA6H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAA3N,CAJH,EAKEyC,OAAO,GAAG,IAAI,8DAAJ,CAAe;AAAEG,qBAAK,EAAE,gBAAT;AAA2BC,qBAAK,EAAE,wBAAlC;AAA4DC,sBAAM,EAAE,oHAApE;AAA0LC,oBAAI,EAAE,qEAAWC;AAA3M,eAAf,CAAV;AACH;;AACD,gBAAK,CAACb,mBAAmB,CAAClB,EAAtB,KAA8B,gEAAMuB,WAAxC,EAAqD;AACnD,kBAAKG,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAArD,IAA6D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAAlH,KAA2H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,IAAzN,CAAD,IACD2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAArD,IAA6D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAAlH,KAA2H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,IAAzN,CADC,IAED2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,GAArD,IAA4D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAAjH,KAA0H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,IAAxN,CAFC,IAGD2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAArD,IAA6D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAAlH,KAA2H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,KAAzN,CAHC,IAID2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAArD,IAA6D2C,UAAU,CAACT,+BAA+B,CAAClC,KAAjC,CAAV,IAAqD,IAAlH,KAA2H2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAA1C,IAAoD2C,UAAU,CAACD,qBAAqB,CAAC1C,KAAvB,CAAV,GAA0C,MAAzN,CAJH,EAKEyC,OAAO,GAAG,IAAI,8DAAJ,CAAe;AAAEG,qBAAK,EAAE,gBAAT;AAA2BC,qBAAK,EAAE,wBAAlC;AAA4DC,sBAAM,EAAE,oHAApE;AAA0LC,oBAAI,EAAE,qEAAWC;AAA3M,eAAf,CAAV;AACH;;AAED,kBAAI,CAAC5D,aAAL,CAAmBc,+BAAnB,CAAmDwC,qBAAnD,EAA0ED,OAA1E,EAAmF,wBAAnF;;AACA,mBAAOA,OAAP;AACD,WAzBD;AA0BD,S,CAED;;;;uEAC4C;AAAA;;AAC1C,iBAAO,UAAClD,OAAD,EAAiD;AACtD,gBAAMmD,qBAAqB,GAAGnD,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAM0C,mBAAmB,GAAsB,MAAI,CAAC9C,iBAAL,CAAuB+C,mBAAtE;;AACA,gBAAMa,eAAe,GAAG,MAAI,CAAC7D,aAAL,CAAmB6D,eAAnB,CAAmCd,mBAAnC,CAAxB;;AACA,gBAAIrC,KAAK,GAAG,IAAZ;;AACA,gBAAI4C,qBAAqB,IAAIA,qBAAqB,CAAC1C,KAAnD,EAA0D;AACxDF,mBAAK,GAAG,mIAAqB4C,qBAAqB,CAAC1C,KAA3C,EAAkDiD,eAAe,CAACC,QAAhB,EAAlD,EAA8E,gBAA9E,EAAgG,WAAhG,mEAAuKD,eAAvK,cAA0Ld,mBAAmB,CAACgB,mBAA9M,EAAR;;AAEA,oBAAI,CAAC/D,aAAL,CAAmBc,+BAAnB,CAAmDwC,qBAAnD,EAA0E5C,KAA1E,EAAiF,oCAAjF;AACD;;AAED,mBAAOA,KAAP;AACD,WAZD;AAaD,S,CAED;;;;mDAC2BsD,gB,EAAqB;AAAA;;AAC9C,iBAAO,UAAC7D,OAAD,EAAiD;AACtD,gBAAIO,KAAK,GAAG,IAAZ,CADsD,CAEtD;;AACA,gBAAMuD,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYhE,OAAO,CAACiE,QAApB,CAAxB,CAHsD,CAItD;;AACA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,eAAe,CAACK,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;AAC3D;AACA,kBAAIL,gBAAgB,KAAKC,eAAe,CAACI,KAAD,CAAxC,EAAiD;AAC/C;AACD,eAJ0D,CAM3D;;;AACA,kBAAIJ,eAAe,CAACI,KAAD,CAAf,KAA2B,YAA3B,IAA2CJ,eAAe,CAACI,KAAD,CAAf,KAA2B,cAAtE,IACCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,QAD5B,IACwCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,QADnE,IAECJ,eAAe,CAACI,KAAD,CAAf,KAA2B,yBAF5B,IAGCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,6BAH5B,IAICJ,eAAe,CAACI,KAAD,CAAf,KAA2B,yBAJhC,EAI2D;AACzD;AACD,eAb0D,CAe3D;;;AACA,kBAAM3D,MAAK,GAAG,sIAAwBP,OAAO,CAACiE,QAAR,CAAiBH,eAAe,CAACI,KAAD,CAAhC,EAAyCzD,KAAjE,EAAwE,GAAxE,EAA6EqD,eAAe,CAACI,KAAD,CAA5F,EAAqG,EAArG,EAAyG,oFAAzG,CAAd,CAhB2D,CAkB3D;;;AACA,kBAAME,EAAE,GAAGpE,OAAO,CAACE,GAAR,CAAY4D,eAAe,CAACI,KAAD,CAA3B,CAAX;;AACA,oBAAI,CAACrE,aAAL,CAAmBc,+BAAnB,CAAmDyD,EAAnD,EAAuD7D,MAAvD,EAA8D,wBAA9D;AACD;;AACD,mBAAOA,KAAP;AACD,WA5BD;AA6BD,S,CAED;;;;8CACmB;AAAA;;AACjB,iBAAO,UAACP,OAAD,EAAiD;AACtD,gBAAIO,KAAK,GAAe,IAAxB;AACA,gBAAM8D,GAAG,GAAG,0EAAZ;AACA,gBAAMC,0BAA0B,GAAGtE,OAAO,CAACE,GAAR,CAAY,qBAAZ,CAAnC;AACA,gBAAMG,wBAAwB,GAAGL,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMqE,0BAA0B,GAAGvE,OAAO,CAACE,GAAR,CAAY,qBAAZ,CAAnC;AACA,gBAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMsE,2BAA2B,GAAGxE,OAAO,CAACE,GAAR,CAAY,sBAAZ,CAApC;AACA,gBAAMD,yBAAyB,GAAGD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMuE,mBAAmB,GAAGzE,OAAO,CAACE,GAAR,CAAY,cAAZ,CAA5B;AACA,gBAAMwE,iBAAiB,GAAG1E,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AACA,gBAAMyE,uBAAuB,GAAG3E,OAAO,CAACE,GAAR,CAAY,kBAAZ,CAAhC;AACA,gBAAM0E,qBAAqB,GAAG5E,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;;AAEA,gBAAIoE,0BAA0B,CAAC7D,KAA/B,EAAsC;AACpCF,mBAAK,GAAG,wIAA0B+D,0BAA0B,CAAC7D,KAArD,EAA4DJ,wBAAwB,CAACI,KAArF,EAA4F,qBAA5F,EAAmH,EAAnH,EAAuH4D,GAAvH,CAAR,CADoC,CAEpC;;AACA,oBAAI,CAACxE,aAAL,CAAmBc,+BAAnB,CAAmD2D,0BAAnD,EAA+E/D,KAA/E,EAAsF,kDAAtF;AACD;;AAED,gBAAIgE,0BAA0B,CAAC9D,KAA/B,EAAsC;AACpCF,mBAAK,GAAG,wIAA0BgE,0BAA0B,CAAC9D,KAArD,EAA4DH,wBAAwB,CAACG,KAArF,EAA4F,qBAA5F,EAAmH,EAAnH,EAAuH4D,GAAvH,CAAR;;AACA,oBAAI,CAACxE,aAAL,CAAmBc,+BAAnB,CAAmD4D,0BAAnD,EAA+EhE,KAA/E,EAAsF,kDAAtF;AACD;;AAED,gBAAIiE,2BAA2B,CAAC/D,KAAhC,EAAuC;AACrCF,mBAAK,GAAG,wIAA0BiE,2BAA2B,CAAC/D,KAAtD,EAA6DR,yBAAyB,CAACQ,KAAvF,EAA8F,sBAA9F,EAAsH,EAAtH,EAA0H4D,GAA1H,CAAR;;AACA,oBAAI,CAACxE,aAAL,CAAmBc,+BAAnB,CAAmD6D,2BAAnD,EAAgFjE,KAAhF,EAAuF,kDAAvF;AACD;;AAED,gBAAIoE,uBAAuB,CAAClE,KAA5B,EAAmC;AACjCF,mBAAK,GAAG,wIAA0BoE,uBAAuB,CAAClE,KAAlD,EAAyDmE,qBAAqB,CAACnE,KAA/E,EAAsF,kBAAtF,EAA0G,EAA1G,EAA8G4D,GAA9G,CAAR;;AACA,oBAAI,CAACxE,aAAL,CAAmBc,+BAAnB,CAAmDgE,uBAAnD,EAA4EpE,KAA5E,EAAmF,kDAAnF;AACD;;AAED,gBAAIkE,mBAAmB,CAAChE,KAApB,IAA6BgE,mBAAmB,CAAChE,KAApB,IAA6B,CAA9D,EAAiE;AAC/DF,mBAAK,GAAG,wIAA0BkE,mBAAmB,CAAChE,KAA9C,EAAqDiE,iBAAiB,CAACjE,KAAvE,EAA8E,cAA9E,EAA8F,EAA9F,EAAkG4D,GAAlG,CAAR;;AACA,oBAAI,CAACxE,aAAL,CAAmBc,+BAAnB,CAAmD8D,mBAAnD,EAAwElE,KAAxE,EAA+E,kDAA/E;AACD;;AACD,mBAAOA,KAAP;AACD,WAxCD;AAyCD;AAED;;AACA;;AACA;;AACA;AAEA;;;;sEAC8CP,O,EAAkB;AAC9D;AACA,cAAMK,wBAAwB,GAAGL,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMyC,+BAA+B,GAAG3C,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,cAAMK,KAAK,GAAG,sIAAwBF,wBAAwB,CAACI,KAAjD,EAAwDkC,+BAA+B,CAAClC,KAAxF,EAA+F,mBAA/F,EAAoH,aAApH,EAAmI,mHAAnI,CAAd;AACA,iBAAOF,KAAP;AACD,S,CAED;;;;iDACyBsE,I,EAAe;AACtC,cAAItE,KAAK,GAAe,IAAxB;AACA,cAAMF,wBAAwB,GAAGwE,IAAI,CAAC3E,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMyC,+BAA+B,GAAGkC,IAAI,CAAC3E,GAAL,CAAS,0BAAT,CAAxC;AACA,cAAM4E,oCAAoC,GAAG,CAAC,MAAO,CAACnC,+BAA+B,CAAClC,KAAzC,EAAiDkD,QAAjD,EAA7C;;AACA,cAAItD,wBAAwB,IAAIA,wBAAwB,CAACI,KAArD,IAA8DkC,+BAA9D,IAAiGA,+BAA+B,CAAClC,KAArI,EAA4I;AAC1IF,iBAAK,GAAG,mIAAqBF,wBAAwB,CAACI,KAA9C,EAAqDqE,oCAArD,EAA2F,mBAA3F,EAAgHpF,gCAAhH,EAAkJC,kCAAlJ,EAAsL,qEAAW8D,OAAjM,CAAR;AACD;;AACD,iBAAOlD,KAAP;AACD,S,CAED;;;;6CACqBsE,I,EAAiBE,M,EAAc;AAClD,cAAI7B,OAAO,GAAe,IAA1B;AACA,cAAI8B,yBAAJ;;AAGA,cAAK,CAACD,MAAF,KAAc,2EAAiBE,aAAnC,EAAkD;AAChD;AACA,gBAAMC,SAAS,GAA0D,KAAKC,iBAAL,CAAuBN,IAAvB,CAAzE;AACAG,qCAAyB,GAAGE,SAAS,CAACE,aAAtC;AACD,WAJD,MAKK;AACHJ,qCAAyB,GAAGH,IAAI,CAAC3E,GAAL,CAAS,eAAT,EAA0BO,KAA1B,GAAkCoE,IAAI,CAAC3E,GAAL,CAAS,eAAT,EAA0BO,KAA5D,GAAoE,IAAhG;AACD;;AAED,cAAIuE,yBAAJ,EAA+B;AAC7B,gBAAMrC,+BAA+B,GAAGkC,IAAI,CAAC3E,GAAL,CAAS,0BAAT,CAAxC;AACA,gBAAM4E,oCAAoC,GAAG,CAAC,MAAM,CAAEnC,+BAA+B,CAAClC,KAAzC,EAAiDkD,QAAjD,EAA7C;AACAT,mBAAO,GAAG,mIAAqB8B,yBAAyB,CAACrB,QAA1B,EAArB,EAA2DmB,oCAA3D,EAAoG,CAACC,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAA3K,EAA6LvF,gCAA7L,EAA+NC,kCAA/N,EAAmQ,qEAAW8D,OAA9Q,CAAV;AACD;;AACD,iBAAOP,OAAP;AACD,S,CAED;;;;6CACqB2B,I,EAAiBE,M,EAAc;AAClD,cAAI7B,OAAO,GAAe,IAA1B;AACA,cAAImC,yBAAJ;;AAEA,cAAK,CAACN,MAAF,KAAc,2EAAiBE,aAAnC,EAAkD;AAChD;AACA,gBAAMK,SAAS,GAA0D,KAAKC,iBAAL,CAAuBV,IAAvB,CAAzE;AACAQ,qCAAyB,GAAGC,SAAS,CAACE,aAAtC;AACD,WAJD,MAKK;AACHH,qCAAyB,GAAGR,IAAI,CAAC3E,GAAL,CAAS,eAAT,EAA0BO,KAA1B,GAAmC,CAACoE,IAAI,CAAC3E,GAAL,CAAS,eAAT,EAA0BO,KAA9D,GAAuE,IAAnG;AACD;;AACD,cAAI4E,yBAAJ,EAA+B;AAC7B,gBAAM1C,+BAA+B,GAAGkC,IAAI,CAAC3E,GAAL,CAAS,0BAAT,CAAxC;AACA,gBAAM4E,oCAAoC,GAAG,CAAC,MAAM,CAAEnC,+BAA+B,CAAClC,KAAzC,EAAiDkD,QAAjD,EAA7C;AACAT,mBAAO,GAAG,mIAAqBmC,yBAAyB,CAAC1B,QAA1B,EAArB,EAA2DmB,oCAA3D,EAAoG,CAACC,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAA3K,EAA6LvF,gCAA7L,EAA+NC,kCAA/N,EAAmQ,qEAAW8D,OAA9Q,CAAV;AACD;;AACD,iBAAOP,OAAP;AACD,S,CAED;;;;yEACiDlD,O,EAAkB;AACjE,cAAMC,yBAAyB,GAAGD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAM0C,mBAAmB,GAAsB,KAAK9C,iBAAL,CAAuB+C,mBAAtE;AACA,cAAM4C,mBAAmB,GAAG,KAAK5F,aAAL,CAAmB4F,mBAAnB,CAAuC7C,mBAAvC,CAA5B;AACA,cAAMrC,KAAK,GAAG,iIAAmBN,yBAAyB,CAACQ,KAA7C,EAAoDgF,mBAAmB,CAAC9B,QAApB,EAApD,EAAoF,oBAApF,EAA0G,cAA1G,6BAA8I8B,mBAA9I,0CAAd;AACA,iBAAOlF,KAAP;AACD,S,CAED;;;;mEAC2CP,O,EAAkB;AAC3D,cAAM2C,+BAA+B,GAAG3C,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAIK,KAAK,GAAG,IAAZ;;AACA,cAAIoC,+BAA+B,IAAIrC,wBAAnC,IAA+DqC,+BAA+B,CAAClC,KAA/F,IAAwGH,wBAAwB,CAACG,KAArI,EAA4I;AAC1I,gBAAMiF,qCAAqC,GAAG,iIAAmB/C,+BAA+B,CAAClC,KAAnD,EAA0DH,wBAAwB,CAACG,KAAnF,EAA0F,0BAA1F,EAAsH,sBAAtH,EAA8I,mEAA9I,CAA9C;AACAF,iBAAK,GAAGmF,qCAAR;AACD;;AACD,iBAAOnF,KAAP;AACD;;;2CAEkBP,O,EAAoB+E,M,EAAc;AACnD,cAAIY,MAAM,GAAiB,EAA3B;AACA,cAAMtB,GAAG,GAAG,sDAAZ;AAEA,cAAMhE,wBAAwB,GAAGL,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMD,yBAAyB,GAAGD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAM0E,qBAAqB,GAAG5E,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,cAAMwE,iBAAiB,GAAG1E,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AAEA,cAAI8E,yBAAJ;AACA,cAAIY,yBAAJ;AACA,cAAIC,0BAAJ;AACA,cAAIC,kBAAJ;AACA,cAAIC,sBAAJ;;AAEA,cAAK,CAAChB,MAAF,KAAc,2EAAiBE,aAAnC,EAAkD;AAChD;AACA,gBAAMC,SAAS,GAA0D,KAAKC,iBAAL,CAAuBnF,OAAvB,CAAzE;AACAgF,qCAAyB,GAAGE,SAAS,CAACE,aAAtC;AACAQ,qCAAyB,GAAGV,SAAS,CAACc,aAAtC;AACAH,sCAA0B,GAAGX,SAAS,CAACe,cAAvC;AACAH,8BAAkB,GAAGZ,SAAS,CAACgB,MAA/B;AACAH,kCAAsB,GAAGb,SAAS,CAACjG,UAAnC;AACD,WARD,MASK;AACH+F,qCAAyB,GAAGhF,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAA7B,GAAsC,CAACT,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAApE,GAA6E,IAAzG;AACAmF,qCAAyB,GAAG5F,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAA7B,GAAsC,CAACT,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAApE,GAA6E,IAAzG;AACAoF,sCAA0B,GAAG7F,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BO,KAA9B,GAAuC,CAACT,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BO,KAAtE,GAA+E,IAA5G;AACAqF,8BAAkB,GAAG9F,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBO,KAAtB,GAA+B,CAACT,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBO,KAAtD,GAA+D,IAApF;AACAsF,kCAAsB,GAAG/F,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BO,KAA1B,GAAmC,CAACT,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BO,KAA9D,GAAuE,IAAhG;AACD,WA/BkD,CAiCnD;;;AACA,cAAIuE,yBAAJ,EAA+B;AAC7B,gBAAMmB,MAAM,GAAG,mIAAqBnB,yBAAyB,CAACrB,QAA1B,EAArB,EAA2DtD,wBAAwB,CAACI,KAApF,EAA8F,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAArK,EAAuL,EAAvL,EAA2LZ,GAA3L,CAAf;;AACA,gBAAI8B,MAAJ,EAAY;AACVR,oBAAM,CAACS,IAAP,CAAYD,MAAZ;AACD;AACF;;AAED,cAAIP,yBAAJ,EAA+B;AAC7B,gBAAMS,MAAM,GAAG,mIAAqBT,yBAAyB,CAACjC,QAA1B,EAArB,EAA2DrD,wBAAwB,CAACG,KAApF,EAA8F,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAArK,EAAuL,EAAvL,EAA2LZ,GAA3L,CAAf;;AACA,gBAAIgC,MAAJ,EAAY;AACVV,oBAAM,CAACS,IAAP,CAAYC,MAAZ;AACD;AACF;;AAED,cAAIR,0BAAJ,EAAgC;AAC9B,gBAAMS,MAAM,GAAG,mIAAqBT,0BAA0B,CAAClC,QAA3B,EAArB,EAA4D1D,yBAAyB,CAACQ,KAAtF,EAAgG,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,sBAAjD,GAA0E,gBAAxK,EAA2L,EAA3L,EAA+LZ,GAA/L,CAAf;;AACA,gBAAIiC,MAAJ,EAAY;AACVX,oBAAM,CAACS,IAAP,CAAYE,MAAZ;AACD;AACF;;AAED,cAAIR,kBAAJ,EAAwB;AACtB,gBAAMS,MAAM,GAAG,mIAAqBT,kBAAkB,CAACnC,QAAnB,EAArB,EAAoDe,iBAAiB,CAACjE,KAAtE,EAAgF,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,cAAjD,GAAkE,QAAhJ,EAA2J,EAA3J,EAA+JZ,GAA/J,CAAf;;AACA,gBAAIkC,MAAJ,EAAY;AACVZ,oBAAM,CAACS,IAAP,CAAYG,MAAZ;AACD;AACF;;AAED,cAAIR,sBAAJ,EAA4B;AAC1B,gBAAMS,MAAM,GAAG,mIAAqBT,sBAAsB,CAACpC,QAAvB,EAArB,EAAwDiB,qBAAqB,CAACnE,KAA9E,EAAwF,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,kBAAjD,GAAsE,YAA5J,EAA2K,EAA3K,EAA+KZ,GAA/K,CAAf;;AACA,gBAAImC,MAAJ,EAAY;AACVb,oBAAM,CAACS,IAAP,CAAYI,MAAZ;AACD;AACF;;AACD,iBAAOb,MAAP;AACD;;;2CAEkB3F,O,EAAoB+E,M,EAAc;AACnD,cAAIY,MAAM,GAAiB,EAA3B;AACA,cAAMtB,GAAG,GAAG,wDAAZ;AAEA,cAAMhE,wBAAwB,GAAGL,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMD,yBAAyB,GAAGD,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAMwE,iBAAiB,GAAG1E,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AACA,cAAM0E,qBAAqB,GAAG5E,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AAEA,cAAImF,yBAAJ;AACA,cAAIoB,yBAAJ;AACA,cAAIC,0BAAJ;AACA,cAAIC,kBAAJ;AACA,cAAIC,sBAAJ;;AAEA,cAAK,CAAC7B,MAAF,KAAc,2EAAiBE,aAAnC,EAAkD;AAChD;AACA,gBAAMK,SAAS,GAA0D,KAAKC,iBAAL,CAAuBvF,OAAvB,CAAzE;AACAqF,qCAAyB,GAAGC,SAAS,CAACE,aAAtC;AACAiB,qCAAyB,GAAGnB,SAAS,CAACuB,aAAtC;AACAH,sCAA0B,GAAGpB,SAAS,CAACwB,cAAvC;AACAH,8BAAkB,GAAGrB,SAAS,CAACyB,MAA/B;AACAH,kCAAsB,GAAGtB,SAAS,CAACvG,UAAnC;AACD,WARD,MASK;AACHsG,qCAAyB,GAAGrF,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAA7B,GAAsC,CAACT,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAApE,GAA6E,IAAzG;AACAgG,qCAAyB,GAAGzG,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAA7B,GAAsC,CAACT,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BO,KAApE,GAA6E,IAAzG;AACAiG,sCAA0B,GAAG1G,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BO,KAA9B,GAAuC,CAACT,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BO,KAAtE,GAA+E,IAA5G;AACAkG,8BAAkB,GAAG3G,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBO,KAAtB,GAA+B,CAACT,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBO,KAAtD,GAA+D,IAApF;AACAmG,kCAAsB,GAAG5G,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BO,KAA1B,GAAmC,CAACT,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BO,KAA9D,GAAuE,IAAhG;AACD,WA/BkD,CAiCnD;;;AACA,cAAI4E,yBAAJ,EAA+B;AAC7B,gBAAMc,MAAM,GAAG,iIAAmBd,yBAAyB,CAAC1B,QAA1B,EAAnB,EAAyDtD,wBAAwB,CAACI,KAAlF,EAA4F,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAAnK,EAAqL,EAArL,EAAyLZ,GAAzL,CAAf;;AACA,gBAAI8B,MAAJ,EAAY;AACVR,oBAAM,CAACS,IAAP,CAAYD,MAAZ;AACD;AACF;;AAED,cAAIM,yBAAJ,EAA+B;AAC7B,gBAAMJ,MAAM,GAAG,iIAAmBI,yBAAyB,CAAC9C,QAA1B,EAAnB,EAAyDrD,wBAAwB,CAACG,KAAlF,EAA4F,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,qBAAjD,GAAyE,eAAnK,EAAqL,EAArL,EAAyLZ,GAAzL,CAAf;;AACA,gBAAIgC,MAAJ,EAAY;AACVV,oBAAM,CAACS,IAAP,CAAYC,MAAZ;AACD;AACF;;AAED,cAAIK,0BAAJ,EAAgC;AAC9B,gBAAMJ,MAAM,GAAG,iIAAmBI,0BAA0B,CAAC/C,QAA3B,EAAnB,EAA0D1D,yBAAyB,CAACQ,KAApF,EAA8F,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,sBAAjD,GAA0E,gBAAtK,EAAyL,EAAzL,EAA6LZ,GAA7L,CAAf;;AACA,gBAAIiC,MAAJ,EAAY;AACVX,oBAAM,CAACS,IAAP,CAAYE,MAAZ;AACD;AACF;;AAED,cAAIK,kBAAJ,EAAwB;AACtB,gBAAMJ,MAAM,GAAG,iIAAmBI,kBAAkB,CAAChD,QAAnB,EAAnB,EAAkDe,iBAAiB,CAACjE,KAApE,EAA8E,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,cAAjD,GAAkE,QAA9I,EAAyJ,EAAzJ,EAA6JZ,GAA7J,CAAf;;AACA,gBAAIkC,MAAJ,EAAY;AACVZ,oBAAM,CAACS,IAAP,CAAYG,MAAZ;AACD;AACF;;AAED,cAAIK,sBAAJ,EAA4B;AAC1B,gBAAMJ,MAAM,GAAG,iIAAmBI,sBAAsB,CAACjD,QAAvB,EAAnB,EAAsDiB,qBAAqB,CAACnE,KAA5E,EAAsF,CAACsE,MAAF,KAAc,2EAAiBE,aAAhC,GAAiD,kBAAjD,GAAsE,YAA1J,EAAyK,EAAzK,EAA6KZ,GAA7K,CAAf;;AACA,gBAAImC,MAAJ,EAAY;AACVb,oBAAM,CAACS,IAAP,CAAYI,MAAZ;AACD;AACF;;AACD,iBAAOb,MAAP;AACD,S,CAED;AAEA;;;;0CACkBd,I,EAAe;AAC/B,cAAImC,QAAQ,GAA0D,IAAI,oJAAJ,EAAtE;AACA,cAAM3G,wBAAwB,GAAGwE,IAAI,CAAC3E,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMoE,0BAA0B,GAAGO,IAAI,CAAC3E,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMI,wBAAwB,GAAGuE,IAAI,CAAC3E,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMqE,0BAA0B,GAAGM,IAAI,CAAC3E,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMsE,2BAA2B,GAAGK,IAAI,CAAC3E,GAAL,CAAS,sBAAT,CAApC;AACA,cAAMwE,iBAAiB,GAAGG,IAAI,CAAC3E,GAAL,CAAS,YAAT,CAA1B;AACA,cAAMuE,mBAAmB,GAAGI,IAAI,CAAC3E,GAAL,CAAS,cAAT,CAA5B;AACA,cAAMD,yBAAyB,GAAG4E,IAAI,CAAC3E,GAAL,CAAS,oBAAT,CAAlC;AACA,cAAM0E,qBAAqB,GAAGC,IAAI,CAAC3E,GAAL,CAAS,gBAAT,CAA9B;AACA,cAAMyE,uBAAuB,GAAGE,IAAI,CAAC3E,GAAL,CAAS,kBAAT,CAAhC;AAEA8G,kBAAQ,CAAC5B,aAAT,GAA0BhC,UAAU,CAAC/C,wBAAwB,CAACI,KAAzB,GAAiCJ,wBAAwB,CAACI,KAA1D,GAAkE,GAAnE,CAAV,GAAoF2C,UAAU,CAACkB,0BAA0B,CAAC7D,KAA3B,GAAmC6D,0BAA0B,CAAC7D,KAA9D,GAAsE,GAAvE,CAAxH;AACAuG,kBAAQ,CAAChB,aAAT,GAA0B5C,UAAU,CAAC9C,wBAAwB,CAACG,KAAzB,GAAiCH,wBAAwB,CAACG,KAA1D,GAAkE,GAAnE,CAAV,GAAoF2C,UAAU,CAACmB,0BAA0B,CAAC9D,KAA3B,GAAmC8D,0BAA0B,CAAC9D,KAA9D,GAAsE,GAAvE,CAAxH;AACAuG,kBAAQ,CAACf,cAAT,GAA2B7C,UAAU,CAACnD,yBAAyB,CAACQ,KAA1B,GAAkCR,yBAAyB,CAACQ,KAA5D,GAAoE,GAArE,CAAV,GAAsF2C,UAAU,CAACoB,2BAA2B,CAAC/D,KAA5B,GAAoC+D,2BAA2B,CAAC/D,KAAhE,GAAwE,GAAzE,CAA3H;AACAuG,kBAAQ,CAACd,MAAT,GAAmB9C,UAAU,CAACsB,iBAAiB,CAACjE,KAAlB,GAA0BiE,iBAAiB,CAACjE,KAA5C,GAAoD,GAArD,CAAV,GAAsE2C,UAAU,CAACqB,mBAAmB,CAAChE,KAApB,GAA4BgE,mBAAmB,CAAChE,KAAhD,GAAwD,GAAzD,CAAnG;AACAuG,kBAAQ,CAAC/H,UAAT,GAAuBmE,UAAU,CAACwB,qBAAqB,CAACnE,KAAtB,GAA8BmE,qBAAqB,CAACnE,KAApD,GAA4D,GAA7D,CAAV,GAA8E2C,UAAU,CAACuB,uBAAuB,CAAClE,KAAxB,GAAgCkE,uBAAuB,CAAClE,KAAxD,GAAgE,GAAjE,CAA/G;AACA,iBAAOuG,QAAP;AACD,S,CAED;;;;0CACkBnC,I,EAAe;AAC/B,cAAIoC,QAAQ,GAA0D,IAAI,oJAAJ,EAAtE;AACA,cAAM5G,wBAAwB,GAAGwE,IAAI,CAAC3E,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMoE,0BAA0B,GAAGO,IAAI,CAAC3E,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMI,wBAAwB,GAAGuE,IAAI,CAAC3E,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMqE,0BAA0B,GAAGM,IAAI,CAAC3E,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMsE,2BAA2B,GAAGK,IAAI,CAAC3E,GAAL,CAAS,sBAAT,CAApC;AACA,cAAMwE,iBAAiB,GAAGG,IAAI,CAAC3E,GAAL,CAAS,YAAT,CAA1B;AACA,cAAMuE,mBAAmB,GAAGI,IAAI,CAAC3E,GAAL,CAAS,cAAT,CAA5B;AACA,cAAMD,yBAAyB,GAAG4E,IAAI,CAAC3E,GAAL,CAAS,oBAAT,CAAlC;AACA,cAAM0E,qBAAqB,GAAGC,IAAI,CAAC3E,GAAL,CAAS,gBAAT,CAA9B;AACA,cAAMyE,uBAAuB,GAAGE,IAAI,CAAC3E,GAAL,CAAS,kBAAT,CAAhC;AAEA+G,kBAAQ,CAACzB,aAAT,GAA0BpC,UAAU,CAAC/C,wBAAwB,CAACI,KAAzB,GAAiCJ,wBAAwB,CAACI,KAA1D,GAAkE,GAAnE,CAAV,GAAoF2C,UAAU,CAACkB,0BAA0B,CAAC7D,KAA3B,GAAmC6D,0BAA0B,CAAC7D,KAA9D,GAAsE,GAAvE,CAAxH;AACAwG,kBAAQ,CAACJ,aAAT,GAA0BzD,UAAU,CAAC9C,wBAAwB,CAACG,KAAzB,GAAiCH,wBAAwB,CAACG,KAA1D,GAAkE,GAAnE,CAAV,GAAoF2C,UAAU,CAACmB,0BAA0B,CAAC9D,KAA3B,GAAmC8D,0BAA0B,CAAC9D,KAA9D,GAAsE,GAAvE,CAAxH;AACAwG,kBAAQ,CAACH,cAAT,GAA2B1D,UAAU,CAACnD,yBAAyB,CAACQ,KAA1B,GAAkCR,yBAAyB,CAACQ,KAA5D,GAAoE,GAArE,CAAV,GAAsF2C,UAAU,CAACoB,2BAA2B,CAAC/D,KAA5B,GAAoC+D,2BAA2B,CAAC/D,KAAhE,GAAwE,GAAzE,CAA3H;AACAwG,kBAAQ,CAACF,MAAT,GAAmB3D,UAAU,CAACsB,iBAAiB,CAACjE,KAAlB,GAA0BiE,iBAAiB,CAACjE,KAA5C,GAAoD,GAArD,CAAV,GAAsE2C,UAAU,CAACqB,mBAAmB,CAAChE,KAApB,GAA4BgE,mBAAmB,CAAChE,KAAhD,GAAwD,GAAzD,CAAnG;AACAwG,kBAAQ,CAAClI,UAAT,GAAuBqE,UAAU,CAACwB,qBAAqB,CAACnE,KAAtB,GAA8BmE,qBAAqB,CAACnE,KAApD,GAA4D,GAA7D,CAAV,GAA8E2C,UAAU,CAACuB,uBAAuB,CAAClE,KAAxB,GAAgCkE,uBAAuB,CAAClE,KAAxD,GAAgE,GAAjE,CAA/G;AACA,iBAAOwG,QAAP;AACD;;;;;;;uBAlkBUrH,wC,EAAwC,qI,EAAA,4J,EAAA,iL;AAAA,K;;;aAAxCA,wC;AAAwC,eAAxCA,wCAAwC,K;AAAA,kBAFvC;;;;;sEAEDA,wC,EAAwC;cAHpD,wDAGoD;eAHzC;AACVsH,oBAAU,EAAE;AADF,S;AAGyC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBrD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,4G,CAAA;AAIA;;;;;;;ACFQ;;AAA4C;AAAA;;AAAA;;AAAA,iCAAqB,IAArB;AAAyB,SAAzB;;AAExC;;AACI;;AACI;;AAGsC;AAAA;;AAAA;;AAAA;AAAA,WAAuC,OAAvC,EAAuC;AAAA;;AAAA;;AAAA;AAAA,SAAvC,EAAuC,OAAvC,EAAuC;AAAA;;AAAA;;AAAA;AAAA,SAAvC;;AACd;;AAC5B;;AACA;;AACI;;AAKJ;;AACJ;;AACJ;;;;;;AAjBI;;AADoE;;AAIxC;;AAAA,8GAAqC,eAArC,EAAqC,oDAArC,EAAqC,MAArC,EAAqC,gBAArC,EAAqC,SAArC,EAAqC,qCAArC,EAAqC,aAArC,EAAqC,kBAArC,EAAqC,gBAArC,EAAqC,qBAArC;;AAOY;;AAAA,2FAAkB,aAAlB,EAAkB,kBAAlB,EAAkB,gBAAlB,EAAkB,uBAAlB,EAAkB,cAAlB,EAAkB,mBAAlB,EAAkB,gBAAlB,EAAkB,qBAAlB,EAAkB,cAAlB,EAAkB,mBAAlB,EAAkB,gBAAlB,EAAkB,qBAAlB;;;;QDqBvCC,gC;AA6BX;AACA,gDACUC,kBADV,EAEUC,WAFV,EAGUC,2BAHV,EAIUC,iCAJV,EAKUC,YALV,EAMU1H,iBANV,EAOUC,wBAPV,EAQU0H,wCARV,EASUC,8BATV,EAUU7H,aAVV,EAWU8H,wBAXV,EAW4D;AAAA;;AAAA;;AAVlD,aAAAP,kBAAA,GAAAA,kBAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,2BAAA,GAAAA,2BAAA;AACA,aAAAC,iCAAA,GAAAA,iCAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAA1H,iBAAA,GAAAA,iBAAA;AACA,aAAAC,wBAAA,GAAAA,wBAAA;AACA,aAAA0H,wCAAA,GAAAA,wCAAA;AACA,aAAAC,8BAAA,GAAAA,8BAAA;AACA,aAAA7H,aAAA,GAAAA,aAAA;AACA,aAAA8H,wBAAA,GAAAA,wBAAA;AAtCV,aAAAC,qBAAA,GAA4C,EAA5C;AACA,aAAAC,WAAA,GAAc,qEAAd;AACA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,YAAA,GAA6B,EAA7B;AACA,aAAAC,cAAA,GAA+B,EAA/B;AACA,aAAAC,YAAA,GAA6B,EAA7B;AACA,aAAAC,cAAA,GAA+B,EAA/B;AACA,aAAAC,cAAA,GAA0B,KAA1B,CA8B4D,CAE1D;;AACA,aAAKC,qBAAL,GAA6B,KAAKf,2BAAL,CAAiCgB,YAAjC,CAA8CC,SAA9C,CAAwD,UAACC,CAAD,EAAkB;AACrG,cAAIA,CAAJ,EAAO;AACL;AACA,mBAAI,CAACC,gBAAL,GAAwBD,CAAC,CAACE,WAAF,CAAc,CAAd,CAAxB,CAFK,CAGL;;AACA,mBAAI,CAACnB,iCAAL,CAAuCoB,cAAvC,CAAsDH,CAAC,CAACE,WAAF,CAAc,CAAd,CAAtD,EAJK,CAKL;AACA;AACA;;;AACA,mBAAI,CAACE,cAAL,CAAoB,CAAC,OAAI,CAACH,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAzD;;AACA,mBAAI,CAACqI,mBAAL;AACD;AACF,SAZ4B,CAA7B,CAH0D,CAgB1D;;AACA,aAAKC,mCAAL,GAjB0D,CAmB1D;;AACA,aAAKpB,wBAAL,CAA8BqB,KAA9B,CAAoCT,SAApC,CAA8C,UAACU,CAAD,EAAY;AACxD,cAAIA,CAAJ,EAAO;AACL,mBAAI,CAACC,OAAL,CAAaD,CAAb;AACD;AACF,SAJD,EApB0D,CA0B1D;;AACA,aAAKE,YAAL;AACD;;;;AAED;wCACgBC,S,EAAmB;AACjC,cAAI,KAAKC,SAAL,IACC,KAAKA,SAAL,CAAepF,QAAf,CAAwBmF,SAAxB,CADD,IAEC,KAAKC,SAAL,CAAepF,QAAf,CAAwBmF,SAAxB,EAAmC3I,KAFxC,EAE+C;AAC7C,mBAAO,CAAC,CAAC,KAAK4I,SAAL,CAAepF,QAAf,CAAwBmF,SAAxB,EAAmC3I,KAArC,EAA4CwB,OAA5C,CAAoD,KAAKnC,iBAAL,CAAuB+C,mBAAvB,CAA2CnB,EAA3C,KAAkD,gEAAMuB,WAAxD,GAAsE,CAAtE,GAA0E,CAA9H,CAAP;AACD;AACF,S,CAED;;;;mCACQ;AACN,eAAKqG,OAAL;AACA,eAAKxB,WAAL,GAAmB,KAAnB;AACA,eAAKyB,cAAL,GAAsB,EAAtB;AACA,eAAKT,mBAAL;AACD,S,CAED;;;;uCACe;AAAA;;AACb;AACA,eAAKU,uBAAL,GAFa,CAGb;;AACA,eAAKC,sBAAL,GAA8B,KAAK3J,iBAAL,CAAuB4J,KAAvB,CAA6BnB,SAA7B,CAAuC,UAACC,CAAD,EAA0B;AAC7F,gBAAIA,CAAJ,EAAO;AACL;AACA,kBAAMmB,aAAa,GAAG,OAAI,CAAC9J,aAAL,CAAmB+J,kCAAnB,CAAuD,OAAI,CAACnB,gBAAL,IAAyB,OAAI,CAACA,gBAAL,CAAsB5D,IAA/C,GAAsD,OAAI,CAAC4D,gBAAL,CAAsB5D,IAA5E,GAAmF,IAA1I,EAAiJ,OAAI,CAACwE,SAAtJ,EAAiKb,CAAjK,CAAtB;;AACA,kBAAImB,aAAJ,EAAmB;AACjB,uBAAI,CAACN,SAAL,GAAiBM,aAAjB;AACD,eALI,CAOL;;;AACA,qBAAI,CAACE,QAAL;AACD;AACF,WAX6B,CAA9B;AAYD,S,CAED;;;;8DACsC;AAAA;;AACpC;AACA,eAAKC,6BAAL,GAAqC,KAAK/J,wBAAL,CAA8BgK,YAA9B,CAA2CxB,SAA3C,CAAqD,UAACC,CAAD,EAA0B;AAClH,gBAAIA,CAAJ,EAAO;AACL,qBAAI,CAACgB,uBAAL;AACD;AACF,WAJoC,CAArC;AAKD,S,CAED;;;;mCAC8B;AAAA;;AAAA,cAArB1B,WAAqB,uEAAP,KAAO;AAC5B,eAAKyB,cAAL,GAAsB,EAAtB,CAD4B,CAE5B;;AACA,eAAKS,oBAAL,GAH4B,CAI5B;;AACA,eAAKC,yBAAL;;AAEA,cAAI,CAAC,KAAKxB,gBAAV,EAA4B;AAC1B;AACD,WAT2B,CAW5B;;;AACA,eAAKX,WAAL,GAAmBA,WAAnB,CAZ4B,CAc5B;AACA;;AACA,cAAI,KAAKW,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAA3B,CAA2CC,QAA3C,CAAoD,kGAAwCC,4CAA5F,CAAJ,EAA+I;AAC7I,gBAAMC,kDAAkD,GAAG,KAAK5C,wCAAL,CAA8C6C,6CAA9C,CAA4F,KAAKjB,SAAjG,CAA3D;;AACA,gBAAIgB,kDAAJ,EAAwD;AACtD,mBAAKE,eAAL,CAAqBF,kDAArB;AACD;AACF,WArB2B,CAuB5B;;;AACA,cAAI,KAAK5B,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAA3B,CAA2CC,QAA3C,CAAoD,kGAAwCK,6DAA5F,CAAJ,EAAgK;AAC9J,gBAAM9E,qCAAqC,GAAG,KAAK+B,wCAAL,CAA8CgD,0CAA9C,CAAyF,KAAKpB,SAA9F,CAA9C;;AACA,gBAAI3D,qCAAJ,EAA2C;AACzC,mBAAK6E,eAAL,CAAqB7E,qCAArB;AACD;AACF,WA7B2B,CA+B5B;;;AACA,cAAI,KAAK+C,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAA3B,CAA2CC,QAA3C,CAAoD,kGAAwCO,uDAA5F,CAAJ,EAA0J;AACxJ,gBAAMC,qDAAqD,GAAG,KAAKlD,wCAAL,CAA8CmD,gDAA9C,CAA+F,KAAKvB,SAApG,CAA9D;;AACA,gBAAIsB,qDAAJ,EAA2D;AACzD,mBAAKJ,eAAL,CAAqBI,qDAArB;AACD;AACF,WArC2B,CAuC5B;;;AACA,cAAK,CAAC,KAAKlC,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAtC,KAAiD,2EAAiBoK,OAAlE,IAA6E,KAAKpC,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAA3B,CAA2CC,QAA3C,CAAoD,kGAAwCW,6CAA5F,CAAjF,EAA6N;AAC3N;AACA,gBAAMC,cAAc,GAAiB,KAAKtD,wCAAL,CAA8CuD,kBAA9C,CAAiE,KAAK3B,SAAtE,EAAiF,KAAKZ,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAArH,CAArC;;AACA,gBAAIsK,cAAc,CAAC5G,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,mBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6G,cAAc,CAAC5G,MAA3C,EAAmDD,KAAK,EAAxD,EAA4D;AAC1D,qBAAKqG,eAAL,CAAqBQ,cAAc,CAAC7G,KAAD,CAAnC;AACD;AACF;AACF,WAhD2B,CAkD5B;;;AACA,cAAK,CAAC,KAAKuE,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAtC,KAAiD,2EAAiBoK,OAAlE,IAA6E,KAAKpC,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAA3B,CAA2CC,QAA3C,CAAoD,kGAAwCc,6CAA5F,CAAjF,EAA6N;AAC3N;AACA,gBAAMC,cAAc,GAAiB,KAAKzD,wCAAL,CAA8C0D,kBAA9C,CAAiE,KAAK9B,SAAtE,EAAiF,KAAKZ,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAArH,CAArC;;AACA,gBAAIyK,cAAc,CAAC/G,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,mBAAK,IAAID,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAGgH,cAAc,CAAC/G,MAA3C,EAAmDD,MAAK,EAAxD,EAA4D;AAC1D,qBAAKqG,eAAL,CAAqBW,cAAc,CAAChH,MAAD,CAAnC;AACD;AACF;AACF,WA3D2B,CA6D5B;;;AACA,cAAMkH,wBAAwB,GAAG,KAAK3D,wCAAL,CAA8C2D,wBAA9C,CAAuE,KAAK/B,SAA5E,CAAjC;;AACA,cAAI+B,wBAAJ,EAA8B;AAC5B,iBAAKC,iBAAL,CAAuBD,wBAAvB;AACD;;AAED,cAAK,CAAC,KAAK3C,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAtC,KAAiD,2EAAiBoK,OAAtE,EAA+E;AAC7E,gBAAMS,oBAAoB,GAAG,KAAK7D,wCAAL,CAA8C6D,oBAA9C,CAAmE,KAAKjC,SAAxE,EAAmF,KAAKZ,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAvH,CAA7B;AACA,gBAAM8K,oBAAoB,GAAG,KAAK9D,wCAAL,CAA8C8D,oBAA9C,CAAmE,KAAKlC,SAAxE,EAAmF,KAAKZ,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAvH,CAA7B;;AACA,gBAAI6K,oBAAJ,EAA0B;AACxB,mBAAKD,iBAAL,CAAuBC,oBAAvB;AACD;;AACD,gBAAIC,oBAAJ,EAA0B;AACxB,mBAAKF,iBAAL,CAAuBE,oBAAvB;AACD;AACF,WA5E2B,CA8E5B;;;AACA,cAAI,KAAKlC,SAAL,CAAemC,OAAnB,EAA4B;AAC1B;AACD,WAjF2B,CAmF5B;;;AACA,eAAK9D,8BAAL,CAAoC+D,WAApC,CAAgD,KAAKpC,SAArD,EAAgE,KAAKZ,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAApG,EAA2G,KAAKX,iBAAL,CAAuB+C,mBAAlI,EAAuJ,KAAK9C,wBAAL,CAA8BsB,0BAArL,EAAiNkH,SAAjN,CAA2N,UAACmD,IAAD,EAAmD;AAC5Q,gBAAIA,IAAI,CAACC,IAAT,EAAe;AACb;AACA;AACA,qBAAI,CAACpC,cAAL,GAAsBxF,MAAM,CAAC6H,MAAP,CAAc,EAAd,EAAkBF,IAAI,CAACC,IAAvB,CAAtB;;AAEA,kBAAID,IAAI,CAACC,IAAL,CAAUpL,KAAV,IAAmBmL,IAAI,CAACC,IAAL,CAAUpL,KAAV,CAAgB4D,MAAhB,GAAyB,CAAhD,EAAmD;AACjD,uBAAI,CAAC+D,YAAL,GAAoBwD,IAAI,CAACC,IAAL,CAAUpL,KAAV,CAAgBsL,KAAhB,EAApB;AACD;;AAED,kBAAIH,IAAI,CAACC,IAAL,CAAUzI,OAAV,IAAqBwI,IAAI,CAACC,IAAL,CAAUzI,OAAV,CAAkBiB,MAAlB,GAA2B,CAApD,EAAuD;AACrD,uBAAI,CAACgE,cAAL,GAAsBuD,IAAI,CAACC,IAAL,CAAUzI,OAAhC;AACD;;AAED,kBAAM4I,gBAAgB,GAAG/H,MAAM,CAACC,IAAP,CAAY0H,IAAI,CAACC,IAAjB,CAAzB,CAba,CAeb;;AACA,kBAAI,2EAAiBd,OAAjB,KAA6B,CAAE,OAAI,CAACpC,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAvE,EAA+E;AAE7E;AACA;AACA,qBAAK,IAAIsL,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,OAAI,CAACtD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuD9H,MAAzF,EAAiG4H,QAAQ,EAAzG,EAA6G;AAC3G;AACA,uBAAK,IAAIG,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,OAAI,CAACzD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFhI,MAA7H,EAAqI+H,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,yBAAK,IAAIE,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,OAAI,CAAC3D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHlI,MAA1J,EAAkKiI,YAAY,EAA9K,EAAkL;AAChL;AACA,0BAAME,WAAW,GAAG,OAAI,CAAC7D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,CAApB,CAFgL,CAGhL;AACA;;AACA,2BAAK,IAAIG,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGT,gBAAgB,CAAC3H,MAAnD,EAA2DoI,QAAQ,EAAnE,EAAuE;AACrE,4BAAID,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DX,gBAAgB,CAACS,QAAD,CAAhB,KAA+BD,WAAW,CAACI,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAACjE,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,EAA8HO,KAA9H,GAAsIjB,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,QAAD,CAA1B,IAAwCb,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,QAAD,CAA1B,EAAsCtK,OAAtC,CAA+C,OAAI,CAACnC,iBAAL,CAAuB+C,mBAAvB,CAA2CnB,EAA3C,KAAkD,gEAAMsB,IAAzD,GAAiE,CAAjE,GAAqE,CAAnH,CAAxC,GAAgK0I,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,QAAD,CAA1B,CAAtS;AACD;AACF;AACF;AACF;AACF,iBAtB4E,CAwB7E;AACA;;;AACA,qBAAK,IAAIR,SAAQ,GAAG,CAApB,EAAuBA,SAAQ,GAAG,OAAI,CAACtD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwD9H,MAA1F,EAAkG4H,SAAQ,EAA1G,EAA8G;AAC5G;AACA,uBAAK,IAAIG,YAAW,GAAG,CAAvB,EAA0BA,YAAW,GAAG,OAAI,CAACzD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,SAAxD,EAAkEI,mBAAlE,CAAsFhI,MAA9H,EAAsI+H,YAAW,EAAjJ,EAAqJ;AACnJ;AACA,yBAAK,IAAIE,aAAY,GAAG,CAAxB,EAA2BA,aAAY,GAAG,OAAI,CAAC3D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,SAAxD,EAAkEI,mBAAlE,CAAsFD,YAAtF,EAAmGG,aAAnG,CAAiHlI,MAA3J,EAAmKiI,aAAY,EAA/K,EAAmL;AACjL;AACA,0BAAME,YAAW,GAAG,OAAI,CAAC7D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,SAAxD,EAAkEI,mBAAlE,CAAsFD,YAAtF,EAAmGG,aAAnG,CAAiHD,aAAjH,CAApB,CAFiL,CAGjL;AACA;;AACA,2BAAK,IAAIG,SAAQ,GAAG,CAApB,EAAuBA,SAAQ,GAAGT,gBAAgB,CAAC3H,MAAnD,EAA2DoI,SAAQ,EAAnE,EAAuE;AACrE,4BAAID,YAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DX,gBAAgB,CAACS,SAAD,CAAhB,KAA+BD,YAAW,CAACI,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAACjE,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,SAAxD,EAAkEI,mBAAlE,CAAsFD,YAAtF,EAAmGG,aAAnG,CAAiHD,aAAjH,EAA+HO,KAA/H,GAAuIjB,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,SAAD,CAA1B,IAAwCb,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,SAAD,CAA1B,EAAsCtK,OAAtC,CAA+C,OAAI,CAACnC,iBAAL,CAAuB+C,mBAAvB,CAA2CnB,EAA3C,KAAkD,gEAAMsB,IAAzD,GAAiE,CAAjE,GAAqE,CAAnH,CAAxC,GAAgK0I,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,SAAD,CAA1B,CAAvS;AACD;AACF;AACF;AACF;AACF;AACF,eA7DY,CA+Db;AACA;;;AACA,mBAAK,IAAIM,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,OAAI,CAACpE,gBAAL,CAAsBqE,WAAtB,CAAkC3I,MAA1E,EAAkF0I,WAAW,EAA7F,EAAiG;AAE/F;AACA,oBAAIA,WAAW,GAAG,CAAlB,EAAqB;AACnB,sBAAME,eAAe,GAAK,CAAC,OAAI,CAAChN,wBAAL,CAA8BsB,0BAA9B,CAAyDK,EAA3D,KAAmE,sEAAYD,UAAhF,GAA8F,oFAA0BuL,iBAAxH,GAA4I,iFAAuBA,iBAA3L;AAEA,sBAAMC,uBAAuB,GAAG,OAAI,CAAC5D,SAAL,CAAepF,QAAf,CAAwB,yBAAxB,CAAhC;AACA,sBAAMiJ,2BAA2B,GAAG,OAAI,CAAC7D,SAAL,CAAepF,QAAf,CAAwB,6BAAxB,CAApC;AACA,sBAAMkJ,uBAAuB,GAAG,OAAI,CAAC9D,SAAL,CAAepF,QAAf,CAAwB,yBAAxB,CAAhC,CALmB,CAOnB;;AACA,sBAAI4I,WAAW,KAAK,CAAhB,IAAqBI,uBAArB,IAAgDA,uBAAuB,CAACxM,KAA5E,EAAmF;AACjF,2BAAI,CAACgI,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3E,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CQ,oBAA/C,aAAyEJ,uBAAuB,CAACxM,KAAjG,SAAyGsM,eAAzG;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAACpE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,KAAtD;AACD,mBAdkB,CAgBnB;;;AACA,sBAAIP,WAAW,KAAK,CAAhB,IAAqBK,2BAArB,IAAoDA,2BAA2B,CAACzM,KAApF,EAA2F;AACzF,2BAAI,CAACgI,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3E,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CQ,oBAA/C,aAAyEH,2BAA2B,CAACzM,KAArG,SAA6GsM,eAA7G;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAACpE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,KAAtD;AACD,mBAvBkB,CAyBnB;;;AACA,sBAAIP,WAAW,KAAK,CAAhB,IAAqBM,uBAArB,IAAgDA,uBAAuB,CAAC1M,KAA5E,EAAmF;AACjF,2BAAI,CAACgI,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3E,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CQ,oBAA/C,aAAyEF,uBAAuB,CAAC1M,KAAjG,SAAyGsM,eAAzG;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAACpE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CO,IAA/C,GAAsD,KAAtD;AACD;AACF,iBApC8F,CAuC/F;;;AACA,qBAAK,IAAIrB,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,OAAI,CAACtD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDnJ,MAArF,EAA6F4H,UAAQ,EAArG,EAAyG;AACvG;AACA,uBAAK,IAAIG,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,OAAI,CAACzD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFhI,MAAzH,EAAiI+H,aAAW,EAA5I,EAAgJ;AAC9I;AACA,yBAAK,IAAIE,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,OAAI,CAAC3D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GlI,MAAtJ,EAA8JiI,cAAY,EAA1K,EAA8K;AAC5K;AACA,0BAAME,aAAW,GAAG,OAAI,CAAC7D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,CAApB,CAF4K,CAG5K;AACA;;AACA,2BAAK,IAAIG,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAGT,gBAAgB,CAAC3H,MAAnD,EAA2DoI,UAAQ,EAAnE,EAAuE;AACrE,4BAAID,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DX,gBAAgB,CAACS,UAAD,CAAhB,KAA+BD,aAAW,CAACI,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAACjE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,EAA0HO,KAA1H,aAAsIjB,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,UAAD,CAA1B,MAA0C,IAA1C,IAAkDb,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,UAAD,CAA1B,MAA0CgB,SAA5F,IAAyG,CAACC,KAAK,CAAE,CAAC9B,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,UAAD,CAA1B,CAAH,CAAhH,GAA8JnJ,UAAU,CAACsI,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,UAAD,CAA1B,CAAD,CAAV,CAAkDtK,OAAlD,CAA0D,CAA1D,CAA9J,GAA6NyJ,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACS,UAAD,CAA1B,CAAlW;AACD;AACF;AACF;AACF;AACF;AACF,eA5HY,CA8Hb;;;AACA,qBAAI,CAACkB,OAAL;AACD;AACF,WAlID,EAkIG,UAAClN,KAAD,EAAgB;AACjB;AACA,mBAAI,CAACkN,OAAL,GAFiB,CAGjB;;;AACAC,mBAAO,CAACC,GAAR,CAAYpN,KAAZ;AACD,WAvID;AAwID,S,CAED;;;;uCACeqN,c,EAAwB;AACrC;AACA,eAAKrG,iCAAL,CAAuCsG,+BAAvC,CAAuED,cAAvE,EAFqC,CAGrC;;AACA,eAAK9F,WAAL,GAAmB,KAAnB,CAJqC,CAKrC;;AACA,eAAKkC,oBAAL,GANqC,CAOrC;;AACA,eAAKC,yBAAL,GARqC,CASrC;;AACA,eAAK6D,UAAL;AACA,eAAKhF,mBAAL;AACD,S,CAED;;;;kCACU;AACR,cAAI,CAAC,KAAKO,SAAV,EAAqB;AACnB;AACD,WAHO,CAKR;;;AACA,cAAMvF,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKqF,SAAL,CAAepF,QAA3B,CAAxB,CANQ,CAOR;;AACA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,eAAe,CAACK,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;AAC3D;AACA,gBAAI,KAAKuE,gBAAL,CAAsBI,aAAtB,CAAoC6D,GAApC,KAA4C5I,eAAe,CAACI,KAAD,CAA/D,EAAwE;AACtE;AACD,aAJ0D,CAM3D;;;AACA,gBAAM6J,uBAAuB,GAAG,KAAKxG,iCAAL,CAAuCyG,8CAAvC,CAAsFlK,eAAe,CAACI,KAAD,CAArG,CAAhC;;AACA,gBAAI6J,uBAAJ,EAA6B;AAC3B,mBAAK1E,SAAL,CAAepF,QAAf,CAAwBH,eAAe,CAACI,KAAD,CAAvC,EAAgD+J,QAAhD,CAAyDF,uBAAzD;AACD,aAFD,MAGK;AACH,mBAAK1E,SAAL,CAAepF,QAAf,CAAwBH,eAAe,CAACI,KAAD,CAAvC,EAAgD+J,QAAhD,CAAyD,EAAzD;AACD;AACF;;AAED,eAAKzE,uBAAL;AACD,S,CAED;AACA;;;;kDAC0B;AACxB;AACA,eAAK1B,WAAL,GAAmB,KAAnB,CAFwB,CAIxB;;AACA,eAAKE,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;;AAEA,cAAI,CAAC,KAAKM,gBAAV,EAA4B;AAC1B;AACD,WAZuB,CAcxB;AACA;;;AACA,eAAK,IAAIsD,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,KAAKtD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuD9H,MAAzF,EAAiG4H,QAAQ,EAAzG,EAA6G;AAC3G;AACA,iBAAK,IAAIG,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKzD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFhI,MAA7H,EAAqI+H,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,mBAAK,IAAIE,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,KAAK3D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHlI,MAA1J,EAAkKiI,YAAY,EAA9K,EAAkL;AAChL;AACA,oBAAME,WAAW,GAAG,KAAK7D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,CAApB;;AACA,oBAAIE,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAKhE,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,EAA8HO,KAA9H,GAAsI,EAAtI;AACD;AACF;AACF;AACF,WA9BuB,CAgCxB;AACA;;;AACA,eAAK,IAAIZ,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKtD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwD9H,MAA1F,EAAkG4H,UAAQ,EAA1G,EAA8G;AAC5G;AACA,iBAAK,IAAIG,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFhI,MAA9H,EAAsI+H,aAAW,EAAjJ,EAAqJ;AACnJ;AACA,mBAAK,IAAIE,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK3D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHlI,MAA3J,EAAmKiI,cAAY,EAA/K,EAAmL;AACjL;AACA,oBAAME,aAAW,GAAG,KAAK7D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHD,cAAjH,CAApB;;AACA,oBAAIE,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAKhE,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHD,cAAjH,EAA+HO,KAA/H,GAAuI,EAAvI;AACD;AACF;AACF;AACF,WAhDuB,CAkDxB;AACA;;;AACA,eAAK,IAAIE,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKpE,gBAAL,CAAsBqE,WAAtB,CAAkC3I,MAA1E,EAAkF0I,WAAW,EAA7F,EAAiG;AAC/F;AACA,iBAAK,IAAId,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKtD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDnJ,MAArF,EAA6F4H,UAAQ,EAArG,EAAyG;AACvG;AACA,mBAAK,IAAIG,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFhI,MAAzH,EAAiI+H,aAAW,EAA5I,EAAgJ;AAC9I;AACA,qBAAK,IAAIE,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK3D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GlI,MAAtJ,EAA8JiI,cAAY,EAA1K,EAA8K;AAC5K;AACA,sBAAME,aAAW,GAAG,KAAK7D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,CAApB,CAF4K,CAG5K;;AACA,sBAAIE,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,yBAAKhE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,EAA0HO,KAA1H;AACD;AACF;AACF;AACF;AACF,WAtEuB,CAwExB;;;AACA,eAAKpD,cAAL,GAAsB,EAAtB;AACD,S,CAED;;;;kCACU;AACR,eAAK/B,YAAL,CAAkB0G,WAAlB,CAA8B,gBAA9B;AACD,S,CAED;;;;qCACa;AAAA;;AACX;AACA,cAAMC,gBAAgB,GAAG,KAAK1F,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDmC,GAAvD,CAA2D,UAAAd,GAAG;AAAA,mBACrFA,GAAG,CAACnB,mBAAJ,CAAwBiC,GAAxB,CAA4B,UAACC,MAAD,EAA6B;AACvD,kBAAIC,YAAY,GAAuB,EAAvC;;AACA,mBAAK,IAAIpK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmK,MAAM,CAAChC,aAAP,CAAqBlI,MAAjD,EAAyDD,KAAK,EAA9D,EAAkE;AAChE;AACA,oBAAI,OAAI,CAACmF,SAAT,EAAoB;AAClB,sBAAMjF,EAAE,GAAG,OAAI,CAACiF,SAAL,CAAenJ,GAAf,CAAmBmO,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BwI,GAA/C,CAAX;;AACA,sBAAItI,EAAJ,EAAQ;AACNiK,0BAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BzD,KAA5B,GAAoC2D,EAAE,CAAC3D,KAAvC;AACD;AACF,iBAP+D,CAQhE;;;AACA,oBAAI4N,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BkJ,IAAhC,EAAsC;AACpCkB,8BAAY,CAAClI,IAAb,CAAkBiI,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,CAAlB;AACD;AACF;;AACD,qBAAOoK,YAAP;AACD,aAhBD,CADqF;AAAA,WAA9D,CAAzB;AAmBA,cAAMC,iBAAiB,GAAG,KAAK9F,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDmC,GAAxD,CAA4D,UAAAd,GAAG;AAAA,mBACvFA,GAAG,CAACnB,mBAAJ,CAAwBiC,GAAxB,CAA4B,UAACC,MAAD,EAA6B;AACvD,kBAAIC,YAAY,GAAuB,EAAvC;;AACA,mBAAK,IAAIpK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmK,MAAM,CAAChC,aAAP,CAAqBlI,MAAjD,EAAyDD,KAAK,EAA9D,EAAkE;AAChE;AACA,oBAAI,OAAI,CAACmF,SAAT,EAAoB;AAClB,sBAAMjF,EAAE,GAAG,OAAI,CAACiF,SAAL,CAAenJ,GAAf,CAAmBmO,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BwI,GAA/C,CAAX;;AACA,sBAAItI,EAAJ,EAAQ;AACNiK,0BAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BzD,KAA5B,GAAoC2D,EAAE,CAAC3D,KAAvC;AACD;AACF,iBAP+D,CAQhE;;;AACA,oBAAI4N,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,EAA4BkJ,IAAhC,EAAsC;AACpCkB,8BAAY,CAAClI,IAAb,CAAkBiI,MAAM,CAAChC,aAAP,CAAqBnI,KAArB,CAAlB;AACD;AACF;;AACD,qBAAOoK,YAAP;AACD,aAhBD,CADuF;AAAA,WAA/D,CAA1B,CArBW,CAwCX;;AACA,eAAK1G,qBAAL,GAA6B,EAA7B,CAzCW,CA0CX;;AACA,eAAKA,qBAAL,CAA2BxB,IAA3B,CAAgC,KAAKqC,gBAAL,CAAsBI,aAAtD;AACA,eAAKjB,qBAAL,gCAAiC,KAAKA,qBAAtC,sBAAgE,KAAKR,kBAAL,CAAwBoH,OAAxB,CAAgCL,gBAAhC,CAAhE;AACA,eAAKvG,qBAAL,gCAAiC,KAAKA,qBAAtC,sBAAgE,KAAKR,kBAAL,CAAwBoH,OAAxB,CAAgCD,iBAAhC,CAAhE,GA7CW,CA8CX;;AACA,cAAME,gBAAgB,GAAuB,KAAK7G,qBAAL,CAA2B8G,MAA3B,CAAkC,UAAAtK,EAAE,EAAI;AACnF;AACA,gBAAIA,EAAE,IAAIA,EAAE,CAACZ,IAAH,KAAY,OAAI,CAACqE,WAAL,CAAiB8E,KAAnC,IAA4CvI,EAAE,CAACZ,IAAH,KAAY,OAAI,CAACqE,WAAL,CAAiB8G,MAA7E,EAAqF;AACnF,qBAAOvK,EAAP;AACD;AACF,WAL4C,CAA7C;AAOA,eAAKiF,SAAL,GAAiB,KAAKjC,kBAAL,CAAwBwH,WAAxB,CAAoCH,gBAApC,CAAjB,CAtDW,CAuDX;;AACA,cAAMI,WAAW,GAAkB,EAAnC,CAxDW,CAyDX;;AACA,cAAIC,0BAA0B,GAAa,KAAKrG,gBAAL,CAAsB5D,IAAtB,CAA2BqF,eAAtE;;AAEA,eAAK,IAAIhG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4K,0BAA0B,CAAC3K,MAAvD,EAA+DD,KAAK,EAApE,EAAwE;AACtE,gBAAM6K,iBAAiB,GAAGD,0BAA0B,CAAC5K,KAAD,CAApD;;AACA,oBAAQ6K,iBAAR;AACE,mBAAK,kGAAwCC,+BAA7C;AACEH,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8CwH,iDAA9C,EAAjB;AACA;;AACF,mBAAK,kGAAwCC,gCAA7C;AACEL,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8C0H,8BAA9C,EAAjB;AACA;;AACF,mBAAK,kGAAwCC,uDAA7C;AACEP,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8C4H,kCAA9C,EAAjB;AACA;;AACF,mBAAK,kGAAwCC,yBAA7C;AACET,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8C8H,0BAA9C,CAAyE,KAAK9G,gBAAL,CAAsBI,aAAtB,CAAoC6D,GAA7G,CAAjB;AACA;;AACF,mBAAK,kGAAwC8C,oBAA7C;AACE;AACA,oBAAK,CAAC,KAAK/G,gBAAL,CAAsBI,aAAtB,CAAoCpI,KAAtC,KAAiD,2EAAiBwE,aAAtE,EAAqF;AACnF4J,6BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8CgI,mBAA9C,EAAjB;AACD;;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,mBAAK,kGAAwCC,gCAA7C;AACEb,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8CkI,6BAA9C,EAAjB;AACA;;AACF,mBAAK,kGAAwCC,mEAA7C;AACEf,2BAAW,CAACzI,IAAZ,CAAiB,KAAKqB,wCAAL,CAA8CoI,4CAA9C,EAAjB;AACA;AApCJ;AAsCD,WApGU,CAqGX;;;AACA,eAAKxG,SAAL,CAAeyG,aAAf,CAA6BjB,WAA7B;AACD,S,CAED;;;;kCACU;AACR,eAAKxH,WAAL,CAAiB0I,YAAjB,GAAgCC,IAAhC,CAAqC,8DAArC,EACGzH,SADH,CACa,UAAA0H,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WADd;AAED,S,CAED;;;;wCACgB1P,K,EAAmB;AACjC,cAAI,KAAKyH,YAAL,CAAkB7D,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,iBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK8D,YAAL,CAAkB7D,MAA9C,EAAsDD,KAAK,EAA3D,EAA+D;AAC7D,kBAAI,KAAK8D,YAAL,CAAkB9D,KAAlB,EAAyBb,KAAzB,IAAkC,KAAK2E,YAAL,CAAkB9D,KAAlB,EAAyBb,KAAzB,KAAmC9C,KAAK,CAAC8C,KAA/E,EAAsF;AACpF,qBAAK2E,YAAL,CAAkB5B,IAAlB,CAAuB7F,KAAvB;AACD;AACF;AACF,WAND,MAOK;AACH,iBAAKyH,YAAL,CAAkB5B,IAAlB,CAAuB7F,KAAvB;AACD;;AAED,eAAKyH,YAAL,GAAoB,KAAKA,YAAL,CAAkB6D,KAAlB,EAApB;AACD,S,CAED;;;;0CACkB3I,O,EAAqB;AACrC,cAAI,KAAK+E,cAAL,CAAoB9D,MAApB,GAA6B,CAAjC,EAAoC;AAClC,iBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK+D,cAAL,CAAoB9D,MAAhD,EAAwDD,KAAK,EAA7D,EAAiE;AAC/D,kBAAI,KAAK+D,cAAL,CAAoB/D,KAApB,KAA8B,KAAK+D,cAAL,CAAoB/D,KAApB,EAA2Bb,KAA3B,KAAqCH,OAAO,CAACG,KAA/E,EAAsF;AACpF,qBAAK4E,cAAL,CAAoB7B,IAApB,CAAyBlD,OAAzB;AACD;AACF;AACF,WAND,MAOK;AACH,iBAAK+E,cAAL,CAAoB7B,IAApB,CAAyBlD,OAAzB;AACD;;AAED,eAAK+E,cAAL,GAAsB,KAAKA,cAAL,CAAoB4D,KAApB,EAAtB;AACD,S,CAED;;;;+CACuB;AACrB,eAAK7D,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACD,S,CAED;;;;oDAC4B;AAC1B,eAAKoB,cAAL,GAAsB,EAAtB;;AAEA,cAAI,CAAC,KAAKd,gBAAV,EAA4B;AAC1B;AACD,WALyB,CAO1B;AACA;;;AACA,eAAK,IAAIsD,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,KAAKtD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuD9H,MAAzF,EAAiG4H,QAAQ,EAAzG,EAA6G;AAC3G;AACA,iBAAK,IAAIG,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKzD,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFhI,MAA7H,EAAqI+H,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,mBAAK,IAAIE,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,KAAK3D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHlI,MAA1J,EAAkKiI,YAAY,EAA9K,EAAkL;AAChL;AACA,oBAAME,WAAW,GAAG,KAAK7D,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,CAApB;;AACA,oBAAIE,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAKhE,gBAAL,CAAsB5D,IAAtB,CAA2BmH,WAA3B,CAAuCC,eAAvC,CAAuDF,QAAvD,EAAiEI,mBAAjE,CAAqFD,WAArF,EAAkGG,aAAlG,CAAgHD,YAAhH,EAA8HO,KAA9H,GAAsI,EAAtI;AACD;AACF;AACF;AACF,WAvByB,CAyB1B;AACA;;;AACA,eAAK,IAAIZ,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKtD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwD9H,MAA1F,EAAkG4H,UAAQ,EAA1G,EAA8G;AAC5G;AACA,iBAAK,IAAIG,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzD,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFhI,MAA9H,EAAsI+H,aAAW,EAAjJ,EAAqJ;AACnJ;AACA,mBAAK,IAAIE,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK3D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHlI,MAA3J,EAAmKiI,cAAY,EAA/K,EAAmL;AACjL;AACA,oBAAME,aAAW,GAAG,KAAK7D,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHD,cAAjH,CAApB;;AACA,oBAAIE,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAKhE,gBAAL,CAAsB5D,IAAtB,CAA2B+H,YAA3B,CAAwCX,eAAxC,CAAwDF,UAAxD,EAAkEI,mBAAlE,CAAsFD,aAAtF,EAAmGG,aAAnG,CAAiHD,cAAjH,EAA+HO,KAA/H,GAAuI,EAAvI;AACD;AACF;AACF;AACF,WAzCyB,CA2C1B;AACA;;;AACA,eAAK,IAAIE,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKpE,gBAAL,CAAsBqE,WAAtB,CAAkC3I,MAA1E,EAAkF0I,WAAW,EAA7F,EAAiG;AAC/F;AACA,iBAAK,IAAId,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKtD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDnJ,MAArF,EAA6F4H,UAAQ,EAArG,EAAyG;AACvG;AACA,mBAAK,IAAIG,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzD,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFhI,MAAzH,EAAiI+H,aAAW,EAA5I,EAAgJ;AAC9I;AACA,qBAAK,IAAIE,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK3D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GlI,MAAtJ,EAA8JiI,cAAY,EAA1K,EAA8K;AAC5K;AACA,sBAAME,aAAW,GAAG,KAAK7D,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,CAApB;;AACA,sBAAIE,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,yBAAKhE,gBAAL,CAAsBqE,WAAtB,CAAkCD,WAAlC,EAA+CS,GAA/C,CAAmDvB,UAAnD,EAA6DI,mBAA7D,CAAiFD,aAAjF,EAA8FG,aAA9F,CAA4GD,cAA5G,EAA0HO,KAA1H,GAAkI,IAAlI;AACD;AACF;AACF;AACF;AACF;AACF,S,CAED;;;;sCACW;AACT,cAAI,KAAKtE,qBAAT,EAAgC;AAC9B,iBAAKA,qBAAL,CAA2B6H,WAA3B;AACD;;AAED,cAAI,KAAKpG,6BAAT,EAAwC;AACtC,iBAAKA,6BAAL,CAAmCoG,WAAnC;AACD;;AAED,cAAI,KAAKzG,sBAAT,EAAiC;AAC/B,iBAAKA,sBAAL,CAA4ByG,WAA5B;AACD;AACF,S,CAED;;;;gCACQC,c,EAAqB;AAC3B,cAAIA,cAAJ,EAAoB;AAClB,iBAAK9G,SAAL,CAAe+G,UAAf,CAA0BD,cAA1B,EADkB,CAElB;;AACA,gBAAME,GAAG,GAAG,KAAKxQ,aAAL,CAAmByQ,qBAAnB,CAAyC,oBAAzC,CAAZ;AACA,gBAAMC,CAAC,GAAGF,GAAG,CAACG,SAAJ,CAAc,UAACC,CAAD,EAAO;AAC7B,qBAAOA,CAAC,CAAChQ,KAAF,CAAQiB,EAAR,KAAeyO,cAAc,CAAC,oBAAD,CAAd,CAAqCzO,EAA3D;AACD,aAFS,CAAV;;AAGA,gBAAI6O,CAAC,GAAG,CAAC,CAAT,EAAY;AACV,mBAAKlH,SAAL,CAAenJ,GAAf,CAAmB,oBAAnB,EAAyC+N,QAAzC,CAAkDoC,GAAG,CAACE,CAAD,CAAH,CAAO9P,KAAzD;AACD;AACF;AACF,S,CAED;;;;8CACsB;AACpB,cAAI,KAAKgI,gBAAL,IAAyB,KAAKA,gBAAL,CAAsB/G,EAAnD,EAAuD;AACrD,iBAAK0G,cAAL,GAAuB,KAAKvI,aAAL,CAAmB6Q,qBAAnB,CAAyC,CAAC,KAAKjI,gBAAL,CAAsB/G,EAAhE,CAAD,GAAwE,IAAxE,GAA+E,KAArG;AACD,WAFD,MAGK;AACH,iBAAK0G,cAAL,GAAsB,KAAtB;AACD;AACF;;;4BAlsBiB;AAChB,iBAAO,KAAK+H,cAAZ;AACD,S;0BAEkBQ,G,EAAU;AAC3B,eAAKR,cAAL,GAAsBQ,GAAtB;AACD;;;;;;;uBAtBUxJ,gC,EAAgC,yJ,EAAA,0I,EAAA,6J,EAAA,sN,EAAA,4I,EAAA,qK,EAAA,0L,EAAA,0L,EAAA,qK,EAAA,+I,EAAA,2L;AAAA,K;;;YAAhCA,gC;AAAgC,+C;AAAA,e;AAAA,a;AAAA,o/B;AAAA;AAAA;AClC7C;;AACI;;AACI;;AAmBJ;;AACA;;AACI;;AACI;;AAEI;;AACI;;AAAI;;AAAiB;;AACrB;;AACI;;AAAoB;;AAAU;;AAAI;;AAAQ;;AAAqC;;AAAS;;AACxF;;AAAuB;;AAAa;;AAAQ;;AAAwC;;AACpF;;AACA;;AAAuB;;AACnB;;AAAI;;AAAQ;;AAAwC;;AACxD;;AACA;;AAAuB;;AAAU;;AACjC;;AAA0B;;AACtB;;AAAQ;;AAAyC;;AACrD;;AACA;;AAAoC;;AAAK;;AAAQ;;AAAiC;;AAC9E;;AAAI;;AACR;;AACA;;AAA+B;;AAAQ;;AAAI;;AAAS;;AACxD;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAjDc;;AAAA;;AA2BoD;;AAAA;;AACE;;AAAA;;AAG5B;;AAAA;;AAIJ;;AAAA;;AAEqC;;AAAA;;;;;;;;;sEDL5DA,gC,EAAgC;cAL5C,uDAK4C;eALlC;AACTyJ,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,8CAFJ;AAGTC,mBAAS,EAAE,CAAC,6CAAD;AAHF,S;AAKkC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElC7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,+I,CAAA;AAKA;;;QAuBaC,6B;;;;;YAAAA;;;;yBAAAA,6B;AAA6B,O;AAAA,iBAL7B,CACT,mGADS,EAET,wHAFS,C;AAGV,gBAXQ,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,gHAJO,EAKP,kEALO,EAMP,mFANO,CAWR;;;;0HAEUA,6B,EAA6B;AAAA,uBAdzB,uGAcyB;AAdO,kBAE7C,4DAF6C,EAG7C,0DAH6C,EAI7C,kEAJ6C,EAK7C,gHAL6C,EAM7C,kEAN6C,EAO7C,mFAP6C;AAcP,O;AAPrB,K;;;;;sEAORA,6B,EAA6B;cAfzC,sDAeyC;eAfhC;AACRC,sBAAY,EAAE,CAAC,uGAAD,CADN;AAERxR,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,gHAJO,EAKP,kEALO,EAMP,mFANO,CAFD;AAURyR,mBAAS,EAAE,CACT,mGADS,EAET,wHAFS;AAVH,S;AAegC,Q;;;;;;;;;;;;;;;;;;AC5B1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,+I,CAAA;AAIA;AAGA;;;QAcaC,8B;AAKX,8CACUC,KADV,EAEU1J,wCAFV,EAE4F;AAAA;;AADlF,aAAA0J,KAAA,GAAAA,KAAA;AACA,aAAA1J,wCAAA,GAAAA,wCAAA;AANF,aAAA2J,OAAA,GAAU,8DAAUC,QAAV,CAAmBC,GAAnB,CAAuBC,GAAjC;AACS,aAAAC,oCAAA,GAAyE,IAAI,oDAAJ,CAAqC,IAArC,CAAzE;AACR,aAAAC,8BAAA,GAAiC,KAAKD,oCAAL,CAA0CE,YAA1C,EAAjC;AAKJ;;;;yDAcmCf,G,EAAsB;AAC5D,eAAKgB,6BAAL,GAAqC,MAAH,OAAG,CAAH,EAAG,EAAKhB,GAAL,CAArC;AACD;;;oCAEkB9L,I,EAAiB+M,W,EAAqBC,I,EAAyBC,Q,EAA6B;AAC7G,cAAIC,IAAI,GAA+B,IAAI,6FAAJ,CAA+BlN,IAAI,CAACpE,KAApC,CAAvC;AACAsR,cAAI,CAACF,IAAL,GAAYA,IAAI,CAACnQ,EAAL,CAAQiC,QAAR,EAAZ;AACAoO,cAAI,CAACD,QAAL,GAAgBA,QAAQ,CAACpQ,EAAT,CAAYiC,QAAZ,EAAhB;AACAoO,cAAI,CAACH,WAAL,GAAmBA,WAAnB,CAJ6G,CAK7G;;AAEA,cAAI,2EAAiB3M,aAAjB,KAAmC,CAAE2M,WAAzC,EAAuD;AACrD,gBAAM5K,QAAQ,GAA0D,KAAKS,wCAAL,CAA8CtC,iBAA9C,CAAgEN,IAAhE,CAAxE;AACAkN,gBAAI,CAAC3M,aAAL,GAAqB4B,QAAQ,CAAC5B,aAAT,GAAyB4B,QAAQ,CAAC5B,aAAlC,GAAkD,CAAvE;AACA2M,gBAAI,CAAC/L,aAAL,GAAqBgB,QAAQ,CAAChB,aAAT,GAAyBgB,QAAQ,CAAChB,aAAlC,GAAkD,CAAvE;AACA+L,gBAAI,CAAC9L,cAAL,GAAsBe,QAAQ,CAACf,cAAT,GAA0Be,QAAQ,CAACf,cAAnC,GAAoD,CAA1E;AACA8L,gBAAI,CAAC7L,MAAL,GAAcc,QAAQ,CAACd,MAAT,GAAkBc,QAAQ,CAACd,MAA3B,GAAoC,CAAlD;AACA6L,gBAAI,CAAC9S,UAAL,GAAkB+H,QAAQ,CAAC/H,UAAT,GAAsB+H,QAAQ,CAAC/H,UAA/B,GAA4C,CAA9D;AACA,gBAAMgI,QAAQ,GAA0D,KAAKQ,wCAAL,CAA8ClC,iBAA9C,CAAgEV,IAAhE,CAAxE;AACAkN,gBAAI,CAACvM,aAAL,GAAqByB,QAAQ,CAACzB,aAAT,GAAyByB,QAAQ,CAACzB,aAAlC,GAAkD,CAAvE;AACAuM,gBAAI,CAAClL,aAAL,GAAqBI,QAAQ,CAACJ,aAAT,GAAyBI,QAAQ,CAACJ,aAAlC,GAAkD,CAAvE;AACAkL,gBAAI,CAACjL,cAAL,GAAsBG,QAAQ,CAACH,cAAT,GAA0BG,QAAQ,CAACH,cAAnC,GAAoD,CAA1E;AACAiL,gBAAI,CAAChL,MAAL,GAAcE,QAAQ,CAACF,MAAT,GAAkBE,QAAQ,CAACF,MAA3B,GAAoC,CAAlD;AACAgL,gBAAI,CAAChT,UAAL,GAAkBkI,QAAQ,CAAClI,UAAT,GAAsBkI,QAAQ,CAAClI,UAA/B,GAA4C,CAA9D;AACD;;AAED,iBAAO,KAAKoS,KAAL,CAAWa,IAAX,WAAmB,KAAKZ,OAAxB,yCAAqEW,IAArE,CAAP;AACD;;;4BAvCwC;AACvC,iBAAO,KAAKP,oCAAL,CAA0CS,QAA1C,EAAP;AACD,S;0BAEyCtB,G,EAAsB;AAC9D,eAAKa,oCAAL,CAA0CU,IAA1C,CAA+CvB,GAA/C;AACD;;;4BAE4B;AAC3B,iBAAO,KAAKgB,6BAAZ;AACD;;;;;;;uBApBUT,8B,EAA8B,uH,EAAA,gL;AAAA,K;;;aAA9BA,8B;AAA8B,eAA9BA,8BAA8B,K;AAAA,kBAF7B;;;;;sEAEDA,8B,EAA8B;cAH1C,wDAG0C;eAH/B;AACVhK,oBAAU,EAAE;AADF,S;AAG+B,Q","file":"o-ring-internal-vacuum-only-o-ring-internal-vacuum-only-module-es5.js","sourcesContent":["import { ORingMaxValuesModel } from \"./oring-maxvalues\";\r\nexport class ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel extends ORingMaxValuesModel {\r\n    glandIdMax: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMax?: number,\r\n        glandDepthMax?: number,\r\n        bottomRadiiMax?: number,\r\n        gapMax?: number,\r\n        glandIdMax?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandIdMax = options.glandIdMax;\r\n    }\r\n}","import { ORingMinValuesModel } from \"./oring-minvalues\";\r\nexport class ORingRectangularGlandInternalVacuumOnlyMinvaluesModel extends ORingMinValuesModel {\r\n    glandIdMin: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMin?: number,\r\n        glandDepthMin?: number,\r\n        bottomRadiiMin?: number,\r\n        gapMin?: number,\r\n        glandIdMin?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandIdMin = options.glandIdMin;\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ORingInternalVacuumOnlyComponent } from \"./o-ring-internal-vacuum-only.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ORingInternalVacuumOnlyComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ORingInternalVacuumOnlyRoutingModule { }","// core imports\r\nimport { Injectable } from '@angular/core';\r\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\r\n\r\n// application imports\r\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../../shared/directives/custom-validations/comparison-validation.directive\";\r\nimport { MaterialChoiceModel } from '../../../models/material-choice.model';\r\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\r\nimport { Temperature, Units, ErrorTypes, CalculatorOption } from '../../../shared/helpers/constants';\r\nimport { ErrorModel } from '../../../models/error.model';\r\nimport { HelperService } from \"../../../shared/services/helper.service\";\r\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\r\nimport { ORingRectangularGlandInternalVacuumOnlyMinvaluesModel } from '../../../models/oring-rectangular-gland-internal-vacuum-only-minvalues';\r\nimport { ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel } from '../../../models/oring-rectangular-gland-internal-vacuum-only-maxvalues';\r\n\r\nconst glandWidthNoReliableWarningTitle = \"Gland Width\";\r\nconst glandWidthNoReliableWarningMessage = \"The gland fill calculations will be considered not reliable as the o-ring could not expand fully into the gland.\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ORingInternalVacuumOnlyValidationService {\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private unitButtonService: UnitButtonService,\r\n    private temperatureButtonService: TemperatureButtonService\r\n  ) { }\r\n\r\n  /********************************************************************/\r\n  /*********************** Client Side Validation *********************/\r\n  /******************** Prevent the form submission********************/\r\n  /********************************************************************/\r\n\r\n  // bottom radii should not be larger than half(1/2) of glandWidthNominal\r\n  // bottom radii should not be larger than glandDepthNominal\r\n  bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n      const bottomRadiiMinControl = control.get('bottomRadiiMin');\r\n      const bottomRadiiMaxControl = control.get('bottomRadiiMax');\r\n      const glandWidthNominalControl = control.get('glandWidthNominal');\r\n      const glandDepthNominalControl = control.get('glandDepthNominal');\r\n      let error: any = null;\r\n      // bottomRadii Nominal\r\n      if (bottomRadiiNominalControl) {\r\n        const bottomRadiiNominalError1 = largerThanValidation(bottomRadiiNominalControl.value, glandDepthNominalControl.value, \"bottomRadiiNominal\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiNominalError2 = noLargerThanHalf(bottomRadiiNominalControl.value, glandWidthNominalControl.value, \"bottomRadiiNominal\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiNominalError1) {\r\n          error = bottomRadiiNominalError1;\r\n        }\r\n        else if (bottomRadiiNominalError2) {\r\n          error = bottomRadiiNominalError2;\r\n        }\r\n\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n\r\n      // bottomRadiiMin\r\n      if (bottomRadiiMinControl) {\r\n        const bottomRadiiMinError1 = largerThanValidation(bottomRadiiMinControl.value, glandDepthNominalControl.value, \"bottomRadiiMin\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiMinError2 = noLargerThanHalf(bottomRadiiMinControl.value, glandWidthNominalControl.value, \"bottomRadiiMin\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiMinError1) {\r\n          error = bottomRadiiMinError1;\r\n        }\r\n        else if (bottomRadiiMinError2) {\r\n          error = bottomRadiiMinError2;\r\n        }\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMinControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n\r\n      // bottomRadiiMax\r\n      if (bottomRadiiMaxControl) {\r\n        const bottomRadiiMaxError1 = largerThanValidation(bottomRadiiMaxControl.value, glandDepthNominalControl.value, \"bottomRadiiMax\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiMaxError2 = noLargerThanHalf(bottomRadiiMaxControl.value, glandWidthNominalControl.value, \"bottomRadiiMax\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiMaxError1) {\r\n          error = bottomRadiiMaxError1;\r\n        }\r\n        else if (bottomRadiiMaxError2) {\r\n          error = bottomRadiiMaxError2;\r\n        }\r\n\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMaxControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // operating temperture nominal validation\r\n  operatingTemperatureValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const materialCteNominalControl = control.get('materialCteNominal');\r\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\r\n      const operatingTemperatureMinControl = control.get('operatingTemperatureMin');\r\n      const operatingTemperatureMaxControl = control.get('operatingTemperatureMax');\r\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\r\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\r\n      let error = null;\r\n      if (materialCteNominalValue && materialCteNominalValue.maxtemp) {\r\n\r\n        // message\r\n        let message = \"\";\r\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\r\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\r\n        }\r\n        else {\r\n          // default CELCIUS\r\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\r\n        }\r\n\r\n        // Nominal temperature min and max validation\r\n        if (operatingTemperatureNominalControl.value) {\r\n          let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\r\n          }\r\n\r\n          // Nominal temperature min and max validation\r\n          const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\r\n          const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError) {\r\n            error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureNominalControl.setErrors(error);\r\n        }\r\n\r\n        // Min temperature min and max validation\r\n        if (operatingTemperatureMinControl.value) {\r\n          let operatingTemperatureMinInCelcius = operatingTemperatureMinControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureMinInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMinControl.value).toFixed(2);\r\n          }\r\n\r\n          // Temperature min and max validation\r\n          const operatingTemperatureMinLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\r\n          const operatingTemperatureMinLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError) {\r\n            error = operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureMinControl.setErrors(error);\r\n        }\r\n\r\n        // Max Temperature min and max validation\r\n        if (operatingTemperatureMaxControl.value) {\r\n          let operatingTemperatureMaxInCelcius = operatingTemperatureMaxControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureMaxInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMaxControl.value).toFixed(2);\r\n          }\r\n\r\n          // Nominal temperature min and max validation\r\n          const operatingTemperatureMaxLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\r\n          const operatingTemperatureMaxLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError) {\r\n            error = operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureMaxControl.setErrors(error);\r\n        }\r\n      }\r\n\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // Function check O-ring cross section is in range or not else set error message\r\n  oringCrossSectionNominalValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n      let error = null;\r\n      if (oringCrossSectionNominalControl\r\n        && oringCrossSectionNominalControl.value\r\n      ) {\r\n        // check O-ring cross section is in range or not else set error message\r\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\r\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\r\n\r\n        if ((+currentSelectedUnit.id) === Units.INCH) {\r\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n        }\r\n\r\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\r\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n        }\r\n\r\n\r\n        if (oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError) {\r\n          error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\r\n        }\r\n      }\r\n\r\n      this.helperService.setValidationErrorToFormControl(oringCrossSectionNominalControl, error, \"CrossSectionAS568AStandards\");\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // orin id standard warning and prevent to submit the form\r\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let warning: ErrorModel = null;\r\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n      const oringIdNominalControl = control.get('oringIdNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n\r\n      if ((+currentSelectedUnit.id) === Units.INCH) {\r\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\r\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\r\n      }\r\n      if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\r\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\r\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\r\n      }\r\n\r\n      this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"oRingIDAS568AStandards\");\r\n      return warning;\r\n    };\r\n  }\r\n\r\n  // oRingId nominal validation\r\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const oringIdNominalControl = control.get('oringIdNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\r\n      let error = null;\r\n      if (oringIdNominalControl && oringIdNominalControl.value) {\r\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\r\n\r\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"oringIDNominalLargerThanMaxOringID\");\r\n      }\r\n\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // less than zero validation\r\n  formLessThanZeroValidation(toolbarOptionkey: any): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let error = null;\r\n      // get form controls key\r\n      const formControlKeys = Object.keys(control.controls);\r\n      // loop through the reactive form/formgroup controls \r\n      for (let index = 0; index < formControlKeys.length; index++) {\r\n        // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\r\n        if (toolbarOptionkey === formControlKeys[index]) {\r\n          continue;\r\n        }\r\n\r\n        // skip gapNominal and operatingTemperatureNominal\r\n        if (formControlKeys[index] === \"gapNominal\" || formControlKeys[index] === \"gapTolerance\"\r\n          || formControlKeys[index] === \"gapMin\" || formControlKeys[index] === \"gapMax\"\r\n          || formControlKeys[index] === \"operatingTemperatureMin\"\r\n          || formControlKeys[index] === \"operatingTemperatureNominal\"\r\n          || formControlKeys[index] === \"operatingTemperatureMax\") {\r\n          continue;\r\n        }\r\n\r\n        // any form control value is less than zero\r\n        const error = lessThanEqualValidation(control.controls[formControlKeys[index]].value, \"0\", formControlKeys[index], \"\", \"Input values should not be Zero or Negative, except Gap and Operating Temperature.\");\r\n\r\n        // set error to form control\r\n        const fc = control.get(formControlKeys[index]);\r\n        this.helperService.setValidationErrorToFormControl(fc, error, \"LessThanZeroValueError\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // tolrerance validation\r\n  toleranceValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let error: ErrorModel = null;\r\n      const msg = \"Tolerance value should not greater or equal to respective nominal value.\";\r\n      const glandWidthToleranceControl = control.get('glandWidthTolerance');\r\n      const glandWidthNominalControl = control.get('glandWidthNominal');\r\n      const glandDepthToleranceControl = control.get('glandDepthTolerance');\r\n      const glandDepthNominalControl = control.get('glandDepthNominal');\r\n      const bottomRadiiToleranceControl = control.get('bottomRadiiTolerance');\r\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n      const gapToleranceControl = control.get('gapTolerance');\r\n      const gapNominalControl = control.get('gapNominal');\r\n      const glandIdToleranceControl = control.get('glandIdTolerance');\r\n      const glandIdNominalControl = control.get('glandIdNominal');\r\n\r\n      if (glandWidthToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandWidthToleranceControl.value, glandWidthNominalControl.value, \"glandWidthTolerance\", \"\", msg);\r\n        // glandWidthToleranceControl.setErrors(error);\r\n        this.helperService.setValidationErrorToFormControl(glandWidthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (glandDepthToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandDepthToleranceControl.value, glandDepthNominalControl.value, \"glandDepthTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(glandDepthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (bottomRadiiToleranceControl.value) {\r\n        error = largerThanEqualValidation(bottomRadiiToleranceControl.value, bottomRadiiNominalControl.value, \"bottomRadiiTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (glandIdToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandIdToleranceControl.value, glandIdNominalControl.value, \"glandIdTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(glandIdToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (gapToleranceControl.value && gapToleranceControl.value != 0) {\r\n        error = largerThanEqualValidation(gapToleranceControl.value, gapNominalControl.value, \"gapTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(gapToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  /********************************************************************/\r\n  /************** O-Ring - Internal Vacuum only Warnings **************/\r\n  /**************** Doen't prevent the form submission*****************/\r\n  /********************************************************************/\r\n\r\n  // gland width validation\r\n  glandWidthShouldBeLargerThanORingCrossSection(control: FormGroup): ErrorModel {\r\n    // return (control: FormGroup): ValidationErrors | null => {\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n    const error = lessThanEqualValidation(glandWidthNominalControl.value, oringCrossSectionNominalControl.value, \"glandWidthNominal\", \"Gland Width\", \"For a rectangular gland, it is recommended for the gland width to be larger than the cross section of the o-ring.\");\r\n    return error;\r\n  }\r\n\r\n  // gland width nominal warning\r\n  glandWidthNominalWarning(form: FormGroup): ErrorModel {\r\n    let error: ErrorModel = null;\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n    const oringCrossSectionNominalControlValue = (1.5 * (+oringCrossSectionNominalControl.value)).toString();\r\n    if (glandWidthNominalControl && glandWidthNominalControl.value && oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\r\n      error = largerThanValidation(glandWidthNominalControl.value, oringCrossSectionNominalControlValue, \"glandWidthNominal\", glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return error;\r\n  }\r\n\r\n  // gland width min warning\r\n  glandWidthMinWarning(form: FormGroup, option: string): ErrorModel {\r\n    let warning: ErrorModel = null;\r\n    let glandWidthMinControlValue: number;\r\n\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const minValues: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.generateMinValues(form);\r\n      glandWidthMinControlValue = minValues.glandWidthMin;\r\n    }\r\n    else {\r\n      glandWidthMinControlValue = form.get('glandWidthMin').value ? form.get('glandWidthMin').value : null;\r\n    }\r\n\r\n    if (glandWidthMinControlValue) {\r\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\r\n      warning = largerThanValidation(glandWidthMinControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return warning;\r\n  }\r\n\r\n  // gland width max warning\r\n  glandWidthMaxWarning(form: FormGroup, option: string): ErrorModel {\r\n    let warning: ErrorModel = null;\r\n    let glandWidthMaxControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const maxValues: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(form);\r\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\r\n    }\r\n    else {\r\n      glandWidthMaxControlValue = form.get('glandWidthMax').value ? (+form.get('glandWidthMax').value) : null;\r\n    }\r\n    if (glandWidthMaxControlValue) {\r\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\r\n      warning = largerThanValidation(glandWidthMaxControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return warning;\r\n  }\r\n\r\n  // bottomRadiiNominal min limit validation\r\n  bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(control: FormGroup): ErrorModel {\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n    const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\r\n    const error = lessThanValidation(bottomRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"bottomRadiiNominal\", \"Bottom Radii\", `Minimum radii is ${bottomRadiiMinLimit} due to typical machining standards.`);\r\n    return error;\r\n  }\r\n\r\n  //  oringCrossSectionNominalLessThan vaidate\r\n  oringCrossSectionNominalLessThanValidation(control: FormGroup): ErrorModel {\r\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    let error = null;\r\n    if (oringCrossSectionNominalControl && glandDepthNominalControl && oringCrossSectionNominalControl.value && glandDepthNominalControl.value) {\r\n      const oringCrossSectionNominalLessThanError = lessThanValidation(oringCrossSectionNominalControl.value, glandDepthNominalControl.value, \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"O-ring Cross Section should greater than or equal to gland depth.\");\r\n      error = oringCrossSectionNominalLessThanError;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  minValueValidation(control: FormGroup, option: string): ErrorModel[] {\r\n    let errors: ErrorModel[] = [];\r\n    const msg = \"Min values should be less or equal to nominal value.\";\r\n\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = control.get('glandIdNominal');\r\n    const gapNominalControl = control.get('gapNominal');\r\n\r\n    let glandWidthMinControlValue: number;\r\n    let glandDepthMinControlValue: number;\r\n    let bottomRadiiMinControlValue: number;\r\n    let gapMinControlValue: number;\r\n    let glandIdMinControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const minValues: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.generateMinValues(control);\r\n      glandWidthMinControlValue = minValues.glandWidthMin;\r\n      glandDepthMinControlValue = minValues.glandDepthMin;\r\n      bottomRadiiMinControlValue = minValues.bottomRadiiMin;\r\n      gapMinControlValue = minValues.gapMin;\r\n      glandIdMinControlValue = minValues.glandIdMin;\r\n    }\r\n    else {\r\n      glandWidthMinControlValue = control.get('glandWidthMin').value ? (+control.get('glandWidthMin').value) : null;\r\n      glandDepthMinControlValue = control.get('glandDepthMin').value ? (+control.get('glandDepthMin').value) : null;\r\n      bottomRadiiMinControlValue = control.get('bottomRadiiMin').value ? (+control.get('bottomRadiiMin').value) : null;\r\n      gapMinControlValue = control.get('gapMin').value ? (+control.get('gapMin').value) : null;\r\n      glandIdMinControlValue = control.get('glandIdMin').value ? (+control.get('glandIdMin').value) : null;\r\n    }\r\n\r\n    // min value validation\r\n    if (glandWidthMinControlValue) {\r\n      const error1 = largerThanValidation(glandWidthMinControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), \"\", msg);\r\n      if (error1) {\r\n        errors.push(error1);\r\n      }\r\n    }\r\n\r\n    if (glandDepthMinControlValue) {\r\n      const error2 = largerThanValidation(glandDepthMinControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMin\"), \"\", msg);\r\n      if (error2) {\r\n        errors.push(error2);\r\n      }\r\n    }\r\n\r\n    if (bottomRadiiMinControlValue) {\r\n      const error3 = largerThanValidation(bottomRadiiMinControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMin\"), \"\", msg);\r\n      if (error3) {\r\n        errors.push(error3);\r\n      }\r\n    }\r\n\r\n    if (gapMinControlValue) {\r\n      const error4 = largerThanValidation(gapMinControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMin\"), \"\", msg);\r\n      if (error4) {\r\n        errors.push(error4);\r\n      }\r\n    }\r\n\r\n    if (glandIdMinControlValue) {\r\n      const error5 = largerThanValidation(glandIdMinControlValue.toString(), glandIdNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandIdTolerance\" : \"glandIdMin\"), \"\", msg);\r\n      if (error5) {\r\n        errors.push(error5);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  maxValueValidation(control: FormGroup, option: string): ErrorModel[] {\r\n    let errors: ErrorModel[] = [];\r\n    const msg = \"Max value should be greater or equal to nominal value.\";\r\n\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const gapNominalControl = control.get('gapNominal');\r\n    const glandIdNominalControl = control.get('glandIdNominal');\r\n\r\n    let glandWidthMaxControlValue: number;\r\n    let glandDepthMaxControlValue: number;\r\n    let bottomRadiiMaxControlValue: number;\r\n    let gapMaxControlValue: number;\r\n    let glandIdMaxControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate max values\r\n      const maxValues: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(control);\r\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\r\n      glandDepthMaxControlValue = maxValues.glandDepthMax;\r\n      bottomRadiiMaxControlValue = maxValues.bottomRadiiMax;\r\n      gapMaxControlValue = maxValues.gapMax;\r\n      glandIdMaxControlValue = maxValues.glandIdMax;\r\n    }\r\n    else {\r\n      glandWidthMaxControlValue = control.get('glandWidthMax').value ? (+control.get('glandWidthMax').value) : null;\r\n      glandDepthMaxControlValue = control.get('glandDepthMax').value ? (+control.get('glandDepthMax').value) : null;\r\n      bottomRadiiMaxControlValue = control.get('bottomRadiiMax').value ? (+control.get('bottomRadiiMax').value) : null;\r\n      gapMaxControlValue = control.get('gapMax').value ? (+control.get('gapMax').value) : null;\r\n      glandIdMaxControlValue = control.get('glandIdMax').value ? (+control.get('glandIdMax').value) : null;\r\n    }\r\n\r\n    // max value validation\r\n    if (glandWidthMaxControlValue) {\r\n      const error1 = lessThanValidation(glandWidthMaxControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), \"\", msg);\r\n      if (error1) {\r\n        errors.push(error1);\r\n      }\r\n    }\r\n\r\n    if (glandDepthMaxControlValue) {\r\n      const error2 = lessThanValidation(glandDepthMaxControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMax\"), \"\", msg);\r\n      if (error2) {\r\n        errors.push(error2);\r\n      }\r\n    }\r\n\r\n    if (bottomRadiiMaxControlValue) {\r\n      const error3 = lessThanValidation(bottomRadiiMaxControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMax\"), \"\", msg);\r\n      if (error3) {\r\n        errors.push(error3);\r\n      }\r\n    }\r\n\r\n    if (gapMaxControlValue) {\r\n      const error4 = lessThanValidation(gapMaxControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMax\"), \"\", msg);\r\n      if (error4) {\r\n        errors.push(error4);\r\n      }\r\n    }\r\n\r\n    if (glandIdMaxControlValue) {\r\n      const error5 = lessThanValidation(glandIdMaxControlValue.toString(), glandIdNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandIdTolerance\" : \"glandIdMax\"), \"\", msg);\r\n      if (error5) {\r\n        errors.push(error5);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  //******Helper Methods********/\r\n\r\n  // generate min values when option is Tolerance\r\n  generateMinValues(form: FormGroup): ORingRectangularGlandInternalVacuumOnlyMinvaluesModel {\r\n    let minValue: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = new ORingRectangularGlandInternalVacuumOnlyMinvaluesModel();\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\r\n    const glandDepthNominalControl = form.get('glandDepthNominal');\r\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\r\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\r\n    const gapNominalControl = form.get('gapNominal');\r\n    const gapToleranceControl = form.get('gapTolerance');\r\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = form.get('glandIdNominal');\r\n    const glandIdToleranceControl = form.get('glandIdTolerance');\r\n\r\n    minValue.glandWidthMin = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") - parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\r\n    minValue.glandDepthMin = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") - parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\r\n    minValue.bottomRadiiMin = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") - parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\r\n    minValue.gapMin = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") - parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\r\n    minValue.glandIdMin = (parseFloat(glandIdNominalControl.value ? glandIdNominalControl.value : \"0\") - parseFloat(glandIdToleranceControl.value ? glandIdToleranceControl.value : \"0\"));\r\n    return minValue;\r\n  }\r\n\r\n  // generate max values when option is Tolerance\r\n  generateMaxValues(form: FormGroup): ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel {\r\n    let maxValue: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = new ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel();\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\r\n    const glandDepthNominalControl = form.get('glandDepthNominal');\r\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\r\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\r\n    const gapNominalControl = form.get('gapNominal');\r\n    const gapToleranceControl = form.get('gapTolerance');\r\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = form.get('glandIdNominal');\r\n    const glandIdToleranceControl = form.get('glandIdTolerance');\r\n\r\n    maxValue.glandWidthMax = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") + parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\r\n    maxValue.glandDepthMax = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") + parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\r\n    maxValue.bottomRadiiMax = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") + parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\r\n    maxValue.gapMax = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") + parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\r\n    maxValue.glandIdMax = (parseFloat(glandIdNominalControl.value ? glandIdNominalControl.value : \"0\") + parseFloat(glandIdToleranceControl.value ? glandIdToleranceControl.value : \"0\"));\r\n    return maxValue;\r\n  }\r\n}\r\n","// core imports\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../../models/calculator.model\";\nimport { FormControlModel } from '../../../models/form-control.model';\nimport { BaseModel } from '../../../models/base.model';\nimport { FormColumnModel } from '../../../models/form-column.model';\nimport { ErrorModel } from '../../../models/error.model';\nimport { ORingInternalVacuumOnlyCalculatedOutput } from '../../../models/oRingInternalVacuumOnlyCalculatedOutput';\nimport { RectangularORingCalcService } from \"../rectangular-o-ring-calc.service\";\nimport { AuthService } from \"../../../shared/services/auth.service\";\nimport { ControlType, ORingTool_InternalVacuumOnly_Validators, CalculatorOption, ControlSubType, CalculatorTypes, calculatedDataKeys, Units, Temperature, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../../shared/services/control-base.service\";\nimport { PrintService } from \"../../../shared/services/print.service\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\nimport { ORingInternalVacuumOnlyService } from \"./o-ring-internal-vacuum-only.service\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { CalculatorToolbarService } from \"../../../shared/components/calculator-toolbar/calculator-toolbar.service\";\n\n@Component({\n  selector: 'app-internal-vacuum-only',\n  templateUrl: './o-ring-internal-vacuum-only.component.html',\n  styleUrls: ['./o-ring-internal-vacuum-only.component.css']\n})\nexport class ORingInternalVacuumOnlyComponent implements OnInit, OnDestroy {\n  calculatorConfig: CalculatorModel;\n  oringform: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted: Boolean = false;\n  payLoad = '';\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  isShowPasteBtn: Boolean = false;\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  oRingDataSubscription: Subscription;\n  temperatureChangeSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n\n  // constructor\n  constructor(\n    private controlBaseService: ControlBaseService,\n    private authService: AuthService,\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private printService: PrintService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService,\n    private oRingInternalVacuumOnlyValidationService: ORingInternalVacuumOnlyValidationService,\n    private oRingInternalVacuumOnlyService: ORingInternalVacuumOnlyService,\n    private helperService: HelperService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) {\n    // o-ring calculator config subscription\n    this.oRingDataSubscription = this.rectangularORingCalcService.oRingConfig$.subscribe((x: BaseModel) => {\n      if (x) {\n        // calculator - internal vacuum only\n        this.calculatorConfig = x.calculators[0];\n        // send calculator to dynamic form service\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[0]);\n        // create form\n        // this.createForm();\n        // show or hide form controls\n        this.onOptionChange(+this.calculatorConfig.toolbarOption.value);\n        this.setShowPasteBtnFlag();\n      }\n    });\n    // temperature change subscription\n    this.onTemperatureChangeUpdateCalculator();\n\n    // onPaste event subscription\n    this.calculatorToolbarService.paste.subscribe((d: any) => {\n      if (d) {\n        this.onPaste(d);\n      }\n    });\n\n    // unit change\n    this.onUnitChange();\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.oringform\n      && this.oringform.controls[fieldName]\n      && this.oringform.controls[fieldName].value) {\n      return (+this.oringform.controls[fieldName].value).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3);\n    }\n  }\n\n  // onInit\n  ngOnInit(): void {\n    this.onReset();\n    this.isSubmitted = false;\n    this.CalculatedData = {};\n    this.setShowPasteBtnFlag();\n  }\n\n  // unit change perform operations\n  onUnitChange() {\n    // reset \n    this.resetFormAndCalculation();\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.oringform, x);\n        if (convertedForm) {\n          this.oringform = convertedForm;\n        }\n\n        /// recalculate the data\n        this.onSubmit();\n      }\n    });\n  }\n\n  // temperature change update output values handler\n  onTemperatureChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.resetFormAndCalculation();\n      }\n    });\n  }\n\n  // form submit event\n  onSubmit(isSubmitted = false) {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // this.payLoad = this.oringform.value;\n    this.isSubmitted = isSubmitted;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandWidth validation\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION)) {\n      const glandWidthShouldBeLargerThanORingCrossSectionError = this.oRingInternalVacuumOnlyValidationService.glandWidthShouldBeLargerThanORingCrossSection(this.oringform);\n      if (glandWidthShouldBeLargerThanORingCrossSectionError) {\n        this.addClientErrors(glandWidthShouldBeLargerThanORingCrossSectionError);\n      }\n    }\n\n    // if validation key O_RING_CROSS_SECTION_VALIDATION exist \n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION)) {\n      const oringCrossSectionNominalLessThanError = this.oRingInternalVacuumOnlyValidationService.oringCrossSectionNominalLessThanValidation(this.oringform);\n      if (oringCrossSectionNominalLessThanError) {\n        this.addClientErrors(oringCrossSectionNominalLessThanError);\n      }\n    }\n\n    // bottomRadiiShouldBeLargerThanBottomRadiiMinLimit error\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT)) {\n      const bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError = this.oRingInternalVacuumOnlyValidationService.bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(this.oringform);\n      if (bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError) {\n        this.addClientErrors(bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError);\n      }\n    }\n\n    // min value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const minValueErrors: ErrorModel[] = this.oRingInternalVacuumOnlyValidationService.minValueValidation(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (minValueErrors.length > 0) {\n        for (let index = 0; index < minValueErrors.length; index++) {\n          this.addClientErrors(minValueErrors[index]);\n        }\n      }\n    }\n\n    // max value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const maxValueErrors: ErrorModel[] = this.oRingInternalVacuumOnlyValidationService.maxValueValidation(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (maxValueErrors.length > 0) {\n        for (let index = 0; index < maxValueErrors.length; index++) {\n          this.addClientErrors(maxValueErrors[index]);\n        }\n      }\n    }\n\n    // warnings\n    const glandWidthNominalWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthNominalWarning(this.oringform);\n    if (glandWidthNominalWarning) {\n      this.addClientWarnings(glandWidthNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandWidthMinWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthMinWarning(this.oringform, this.calculatorConfig.toolbarOption.value);\n      const glandWidthMaxWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthMaxWarning(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (glandWidthMinWarning) {\n        this.addClientWarnings(glandWidthMinWarning);\n      }\n      if (glandWidthMaxWarning) {\n        this.addClientWarnings(glandWidthMaxWarning);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (this.oringform.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.oRingInternalVacuumOnlyService.createORing(this.oringform, this.calculatorConfig.toolbarOption.value, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((resp: ORingInternalVacuumOnlyCalculatedOutput) => {\n      if (resp.data) {\n        // set CalculatedData\n        // this will set the graph data also\n        this.CalculatedData = Object.assign({}, resp.data);\n\n        if (resp.data.error && resp.data.error.length > 0) {\n          this.serverErrors = resp.data.error.slice();\n        }\n\n        if (resp.data.warning && resp.data.warning.length > 0) {\n          this.serverWarnings = resp.data.warning;\n        }\n\n        const responseDataKeys = Object.keys(resp.data);\n\n        // when toleranc or minmax option is selected than also bind calculated labels received after calculation\n        if (CalculatorOption.Nominal !== +(this.calculatorConfig.toolbarOption.value)) {\n\n          // Bind left form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n\n          // Bind right form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Bind output form data\n        // loop through each output\n        for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n\n          // set output title of operating temperature label\n          if (outputIndex > 0) {\n            const temperatureCode = ((+this.temperatureButtonService.getCurrentTemperatureValue.id) === Temperature.FAHRENHEIT) ? TemperatureFahrenheitCode.HEXA_DECIMAL_CODE : TemperatureCelsiusCode.HEXA_DECIMAL_CODE;\n\n            const operatingTemperatureMin = this.oringform.controls[\"operatingTemperatureMin\"];\n            const operatingTemperatureNominal = this.oringform.controls[\"operatingTemperatureNominal\"];\n            const operatingTemperatureMax = this.oringform.controls[\"operatingTemperatureMax\"];\n\n            // operating temperature min\n            if (outputIndex === 1 && operatingTemperatureMin && operatingTemperatureMin.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMin.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 1) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature nominal\n            if (outputIndex === 2 && operatingTemperatureNominal && operatingTemperatureNominal.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureNominal.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 2) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature max\n            if (outputIndex === 3 && operatingTemperatureMax && operatingTemperatureMax.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMax.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 3) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n          }\n\n\n          // loop through rows\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}%`;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // reset auth token \n        this.setAuth();\n      }\n    }, (error: any) => {\n      // reset auth token \n      this.setAuth();\n      // TODO: show error if any\n      console.log(error);\n    });\n  }\n\n  // option nominal, tolerance and (min and max) change handler\n  onOptionChange(selectedOption: number) {\n    // show or hide controls based on options\n    this.dynamicFormTwoColumnLayoutService.showOrHideControlsBasedOnOption(selectedOption);\n    // update form submission status\n    this.isSubmitted = false;\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n    // create form\n    this.createForm();\n    this.setShowPasteBtnFlag();\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.oringform) {\n      return;\n    }\n\n    // get form controls key\n    const formControlKeys = Object.keys(this.oringform.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n      if (this.calculatorConfig.toolbarOption.key === formControlKeys[index]) {\n        continue;\n      }\n\n      // get form control default value and set\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.oringform.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.oringform.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  // clears the form submission status and \n  // calcuated data\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `%`;\n            }\n          }\n        }\n      }\n    }\n\n    // reset calculated data received after calculation\n    this.CalculatedData = {};\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"rectangleGland\");\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oringform) {\n            const fc = this.oringform.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oringform) {\n            const fc = this.oringform.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.oringform = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case ORingTool_InternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.OPERATING_TEMPERATURE_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.operatingTemperatureValidation());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oringCrossSectionNominalValidation());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.LESS_THAN_ZERO_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.formLessThanZeroValidation(this.calculatorConfig.toolbarOption.key));\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.TOLERANCE_VALIDATION:\n          // apply validation only when Tolerance option selected\n          if ((+this.calculatorConfig.toolbarOption.value) === CalculatorOption.WithTolerance) {\n            validations.push(this.oRingInternalVacuumOnlyValidationService.toleranceValidation());\n          }\n          break;\n        // case ORingTool_InternalVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION:\n        //   // apply validation only when Tolerance and min and max option selected\n        //   if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n        //     validations.push(this.oRingInternalVacuumOnlyValidationService.minValueValidation(this.calculatorConfig.toolbarOption.value));\n        //   }\n        //   break;\n        // case ORingTool_InternalVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION:\n        //   // apply validation only when Tolerance and min and max option selected\n        //   if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n        //     validations.push(this.oRingInternalVacuumOnlyValidationService.maxValueValidation(this.calculatorConfig.toolbarOption.value));\n        //   }\n        //   break;\n        case ORingTool_InternalVacuumOnly_Validators.ORING_ID_AS568A_STANDARD_WARNING:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oRingIDAS568AStandardsWarning());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oringIDNominalLargerThanMaxOringIDValidation());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.oringform.setValidators(validations);\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \" %\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // component destroy\n  ngOnDestroy(): void {\n    if (this.oRingDataSubscription) {\n      this.oRingDataSubscription.unsubscribe();\n    }\n\n    if (this.temperatureChangeSubscription) {\n      this.temperatureChangeSubscription.unsubscribe();\n    }\n\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n  }\n\n  // on paste calculated data\n  onPaste(calculatedData: any) {\n    if (calculatedData) {\n      this.oringform.patchValue(calculatedData);\n      // set material choice dropdown value\n      const cte = this.helperService.getMaterialChoiceList('materialCteNominal');\n      const i = cte.findIndex((c) => {\n        return c.value.id === calculatedData['materialCteNominal'].id\n      });\n      if (i > -1) {\n        this.oringform.get('materialCteNominal').setValue(cte[i].value);\n      }\n    }\n  }\n\n  // set show flag of paste button\n  setShowPasteBtnFlag() {\n    if (this.calculatorConfig && this.calculatorConfig.id) {\n      this.isShowPasteBtn = (this.helperService.isCalculatedDataExist(+this.calculatorConfig.id)) ? true : false;\n    }\n    else {\n      this.isShowPasteBtn = false;\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9\">\n        <form *ngIf=\"calculatorConfig && oringform\" (ngSubmit)=\"onSubmit(true)\" [formGroup]=\"oringform\" novalidate\n            class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\"\n                        [isShowOptions]=\"calculatorConfig.toolbarOption ? true : false\" [form]=\"oringform\"\n                        [control]=\"calculatorConfig.toolbarOption\" [isSubmitted]=\"isSubmitted\"\n                        [isShowPasteBtn]=\"isShowPasteBtn\" (optionChange)=\"onOptionChange($event)\" (reset)=\"onReset()\"\n                        (print)=\"onPrint()\"></calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <dynamic-form-two-column-layout [form]=\"oringform\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                <!-- graph -->\n                <div class=\"graph-sec\">\n                    <h3>Gland Information</h3>\n                    <div class=\"graph-bg\">\n                        <div class=\"gld-id\">GLAND ID: <br><strong>{{getControlValue('glandIdNominal')}}</strong></div>\n                        <div class=\"gld-width\">GLAND WIDTH: <strong>{{getControlValue('glandWidthNominal')}}</strong>\n                        </div>\n                        <div class=\"gld-depth\">GLAND DEPTH:\n                            <br><strong>{{getControlValue('glandDepthNominal')}}</strong>\n                        </div>\n                        <div class=\"top-radii\">TOP RADII </div>\n                        <div class=\"bottom-radii\">BOTTOM RADII:\n                            <strong>{{getControlValue('bottomRadiiNominal')}}</strong>\n                        </div>\n                        <div class=\"gap-full-comp rect-gap\">GAP: <strong>{{getControlValue('gapNominal')}}</strong>\n                            <br>(may or may not exist)\n                        </div>\n                        <div class=\"rect-static-value\"><strong>.005</strong></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                <user-rules></user-rules>\n            </div>\n        </div>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../../dynamic-form/dynamic-form.module\";\nimport { ORingInternalVacuumOnlyRoutingModule } from \"./o-ring-internal-vacuum-only-routing.module\";\nimport { ORingInternalVacuumOnlyComponent } from './o-ring-internal-vacuum-only.component';\nimport { ORingInternalVacuumOnlyService } from \"./o-ring-internal-vacuum-only.service\";\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\n\n@NgModule({\n  declarations: [ORingInternalVacuumOnlyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ORingInternalVacuumOnlyRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ORingInternalVacuumOnlyService,\n    ORingInternalVacuumOnlyValidationService\n  ]\n})\nexport class ORingInternalVacuumOnlyModule {\n}\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// third party imports\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { CalculatorModel } from '../../../models/calculator.model';\nimport { ORingInternalVacuumOnlyDTO } from \"../../../models/oRingInternalVacuumOnlyDTO\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\nimport { ORingRectangularGlandInternalVacuumOnlyMinvaluesModel } from \"../../../models/oring-rectangular-gland-internal-vacuum-only-minvalues\";\nimport { ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel } from \"../../../models/oring-rectangular-gland-internal-vacuum-only-maxvalues\";\nimport { FormGroup } from '@angular/forms';\nimport { CalculatorOption, calculationType } from '../../../shared/helpers/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingInternalVacuumOnlyService {\n  private baseUrl = AppConfig.settings.env.api;\n  private readonly oRingInternalVacuumCalculatorSubject: BehaviorSubject<CalculatorModel> = new BehaviorSubject<CalculatorModel>(null);\n  readonly oRingInternalVacuumCalculator$ = this.oRingInternalVacuumCalculatorSubject.asObservable();\n\n  constructor(\n    private _http: HttpClient,\n    private oRingInternalVacuumOnlyValidationService: ORingInternalVacuumOnlyValidationService\n  ) { }\n\n  private get oRingInternalVacuumCalculator(): CalculatorModel {\n    return this.oRingInternalVacuumCalculatorSubject.getValue();\n  }\n\n  private set oRingInternalVacuumCalculator(val: CalculatorModel) {\n    this.oRingInternalVacuumCalculatorSubject.next(val);\n  }\n\n  public get getCurrentValue() {\n    return this.oRingInternalVacuumCalculator;\n  }\n\n  public setORingInternalVacuumCalculator(val: CalculatorModel) {\n    this.oRingInternalVacuumCalculator = { ...val };\n  }\n\n  public createORing(form: FormGroup, inputOption: string, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: ORingInternalVacuumOnlyDTO = new ORingInternalVacuumOnlyDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.inputOption = inputOption;\n    // // body.calculationType = calculationType.ORING_SIZING;\n\n    if (CalculatorOption.WithTolerance === +(inputOption)) {\n      const minValue: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.oRingInternalVacuumOnlyValidationService.generateMinValues(form);\n      body.glandWidthMin = minValue.glandWidthMin ? minValue.glandWidthMin : 0;\n      body.glandDepthMin = minValue.glandDepthMin ? minValue.glandDepthMin : 0;\n      body.bottomRadiiMin = minValue.bottomRadiiMin ? minValue.bottomRadiiMin : 0;\n      body.gapMin = minValue.gapMin ? minValue.gapMin : 0;\n      body.glandIdMin = minValue.glandIdMin ? minValue.glandIdMin : 0;\n      const maxValue: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.oRingInternalVacuumOnlyValidationService.generateMaxValues(form);\n      body.glandWidthMax = maxValue.glandWidthMax ? maxValue.glandWidthMax : 0;\n      body.glandDepthMax = maxValue.glandDepthMax ? maxValue.glandDepthMax : 0;\n      body.bottomRadiiMax = maxValue.bottomRadiiMax ? maxValue.bottomRadiiMax : 0;\n      body.gapMax = maxValue.gapMax ? maxValue.gapMax : 0;\n      body.glandIdMax = maxValue.glandIdMax ? maxValue.glandIdMax : 0;\n    }\n\n    return this._http.post(`${this.baseUrl}oringglandanalysistool/createoring`, body);\n  }\n}\n\n"]}