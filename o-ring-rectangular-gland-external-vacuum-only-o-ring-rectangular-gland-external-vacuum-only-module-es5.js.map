{"version":3,"sources":["webpack:///client/app/models/o-ring-rectangular-gland-external-vacuum-only-maxvalues.ts","webpack:///client/app/models/o-ring-rectangular-gland-external-vacuum-only-minvalues.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only-routing.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only-validation.service.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only.component.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only.component.html","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only.service.ts"],"names":["ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel","options","glandODMax","ORingRectangularGlandExternalVacuumOnlyMinvaluesModel","glandODMin","routes","path","component","pathMatch","ORingRectangularGlandExternalVacuumOnlyRoutingModule","forChild","imports","exports","glandWidthNoReliableWarningTitle","glandWidthNoReliableWarningMessage","ORingRectangularGlandExternalVacuumOnlyValidationService","helperService","unitButtonService","temperatureButtonService","control","glandWidthNominalControl","get","oringCrossSectionNominalControl","error","value","glandDepthNominalControl","oringCrossSectionNominalLessThanError","form","oringCrossSectionNominalControlValue","toString","Warning","option","warning","glandWidthMinControlValue","WithTolerance","minValues","generateMinValues","glandWidthMin","glandWidthMaxControlValue","maxValues","generateMaxValues","glandWidthMax","bottomRadiiNominalControl","currentSelectedUnit","getCurrentUnitValue","bottomRadiiMinLimit","bottomRadiiMinControl","bottomRadiiMaxControl","fieldName","errorMessage","bottomRadiiNominalError1","bottomRadiiNominalError2","errors","setErrors","bottomRadiiMinError1","bottomRadiiMinError2","bottomRadiiMaxError1","bottomRadiiMaxError2","materialCteNominalControl","operatingTemperatureNominalControl","operatingTemperatureMinControl","operatingTemperatureMaxControl","currentSelectedTemperature","getCurrentTemperatureValue","materialCteNominalValue","maxtemp","message","FAHRENHEIT","id","mintempF","maxtempF","mname","mintemp","operatingTemperatureNominalInCelcius","convertFahrenheitToCelcius","toFixed","operatingTemperatureNominalLessThanMaxTempError","operatingTemperatureNominalLargerThanMinTempError","operatingTemperatureMinInCelcius","operatingTemperatureMinLessThanMaxTempError","operatingTemperatureMinLargerThanMinTempError","operatingTemperatureMaxInCelcius","operatingTemperatureMaxLessThanMaxTempError","operatingTemperatureMaxLargerThanMinTempError","oringCrossSectionNominalLessThanRangeError","oringCrossSectionNominalLargerThanRangeError","INCH","MILLI_METER","oringIdNominalControl","maxOringIdValue","display_Short_title","setValidationErrorToFormControl","toolbarOptionkey","formControlKeys","Object","keys","controls","index","length","fc","msg","glandWidthToleranceControl","glandDepthToleranceControl","bottomRadiiToleranceControl","gapToleranceControl","gapNominalControl","glandODToleranceControl","glandODNominalControl","glandDepthMinControlValue","bottomRadiiMinControlValue","gapMinControlValue","glandODMinControlValue","glandDepthMin","bottomRadiiMin","gapMin","error1","push","error2","error3","error4","isNaN","error5","glandDepthMaxControlValue","bottomRadiiMaxControlValue","gapMaxControlValue","glandODMaxControlValue","glandDepthMax","bottomRadiiMax","gapMax","parseFloat","field","title","detail","type","minValue","maxValue","providedIn","ORingRectangularGlandExternalVacuumOnlyComponent","controlBaseService","authService","rectangularORingCalcService","dynamicFormTwoColumnLayoutService","printService","oRingRectangularGlandExternalVacuumOnlyService","oRingRectangularGlandExternalVacuumOnlyValidationService","calculatorToolbarService","flattenedFormControls","controlType","isSubmitted","payLoad","bottomRadiiMaxLimit","clientErrors","clientWarnings","serverErrors","serverWarnings","isShowPasteBtn","rectangleJSONConfig","getCurrentORingConfigValue","initializeOringConfig","oRingDataSubscription","oRingConfig$","subscribe","x","onTemperatureChangeUpdateCalculator","onUnitChange","paste","d","onPaste","oRingJsonConfig","oRingRectGlandExternalVacuumOnly","calculators","calculatorConfig","sendCalculator","createForm","onOptionChange","toolbarOption","setShowPasteBtnFlag","onReset","CalculatedData","resetFormAndCalculation","unitChangeSubscription","unit$","convertedForm","convertFormUnitControlValuesAndSet","oRingRectGlandExternalForm","onSubmit","temperatureChangeSubscription","temperature$","leftFormControls","left_column","form_layout_row","map","row","form_layout_columns","column","formControls","form_controls","key","show","rightFormControls","right_column","flatten","filteredControls","filter","label","button","toFormGroup","validations","jsonConfigValidationsArray","form_validation","validationFuncKey","BOTTOM_RADII_NOMINAL_VALIDATION","bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth","OPERATING_TEMPERATURE_VALIDATION","operatingTemperatureValidation","O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION","oringCrossSectionNominalValidation","LESS_THAN_ZERO_VALIDATION","formLessThanZeroValidation","TOLERANCE_VALIDATION","toleranceValidation","ORING_ID_AS568A_STANDARD_WARNING","oRingIDAS568AStandardsWarning","O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION","oringIDNominalLargerThanMaxOringIDValidation","setValidators","authenticate","pipe","r","resetErroAndWarnings","resetCalculatedLabelValue","includes","GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION","glandWidthShouldBeLargerThanORingCrossSectionError","glandWidthShouldBeLargerThanORingCrossSection","addClientErrors","O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION","oringCrossSectionNominalLessThanValidation","BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT","bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError","bottomRadiiShouldBeLargerThanBottomRadiiMinLimit","Nominal","MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","minValueErrors","minValueValidation","MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","maxValueErrors","maxValueValidation","glandWidthNominalWarning","addClientWarnings","glandWidthMinWarning","glandWidthMaxWarning","invalid","createORing","resp","data","assign","slice","responseDataKeys","rowIndex","columnIndex","controlIndex","formControl","keyIndex","sub_type","calculated_label","outputIndex","form_output","temperatureCode","HEXA_DECIMAL_CODE","operatingTemperatureMin","operatingTemperatureNominal","operatingTemperatureMax","display_output_title","undefined","setAuth","console","log","selectedOption","showOrHideControlsBasedOnOption","formControlDefaultValue","getDefaultControlValueFromCalculatorJSONConfig","setValue","generatePdf","calculatedData","patchValue","materialChoiceControl","cte","getMaterialChoiceList","i","findIndex","c","isCalculatedDataExist","unsubscribe","val","selector","templateUrl","styleUrls","ORingRectangularGlandExternalVacuumOnlyModule","declarations","providers","ORingRectangularGlandExternalVacuumOnlyService","_http","baseUrl","settings","env","api","inputOption","unit","unitTemp","body","calculationType","ORING_SIZING","rectangleType","RECTANGLE_OD","post"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QACaA,qD;;;;;AAGT,uEAMQ;AAAA;;AAAA,YANIC,OAMJ,uEAAJ,EAAI;;AAAA;;AACJ,kCAAMA,OAAN;AACA,cAAKC,UAAL,GAAkBD,OAAO,CAACC,UAA1B;AAFI;AAGP;;;MAZsE,oE;;;;;;;;;;;;;;;;;ACD3E;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QACaC,qD;;;;;AAGT,uEAMQ;AAAA;;AAAA,YANIF,OAMJ,uEAAJ,EAAI;;AAAA;;AACJ,oCAAMA,OAAN;AACA,eAAKG,UAAL,GAAkBH,OAAO,CAACG,UAA1B;AAFI;AAGP;;;MAZsE,oE;;;;;;;;;;;;;;;;;ACD3E;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACnB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,yIAAvB;AAAyEC,eAAS,EAAE;AAApF,KADmB,CAAvB;;QAUaC,oD;;;;;YAAAA;;;;yBAAAA,oD;AAAoD,O;AAAA,gBALpD,CACL,6DAAaC,QAAb,CAAsBL,MAAtB,CADK,CAKoD,EAFnD,4DAEmD;;;;0HAApDI,oD,EAAoD;AAAA;AAAA,kBAFnD,4DAEmD;AAAA,O;AAFvC,K;;;;;sEAEbA,oD,EAAoD;cANhE,sDAMgE;eANvD;AACNE,iBAAO,EAAE,CACL,6DAAaD,QAAb,CAAsBL,MAAtB,CADK,CADH;AAINO,iBAAO,EAAE,CAAC,4DAAD;AAJH,S;AAMuD,Q;;;;;;;;;;;;;;;;;;ACfjE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uF,CAAA;AAIA;;;AAYA,QAAMC,gCAAgC,GAAG,aAAzC;AACA,QAAMC,kCAAkC,GAAG,kHAA3C;;QAKaC,wD;AAEX,wEACUC,aADV,EAEUC,iBAFV,EAGUC,wBAHV,EAG4D;AAAA;;AAFlD,aAAAF,aAAA,GAAAA,aAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,wBAAA,GAAAA,wBAAA;AACL;AAEL;;AACA;;AACA;;AACA;AACA;;;;;sEAC8CC,O,EAAkB;AAC9D;AACA,cAAMC,wBAAwB,GAAGD,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMC,+BAA+B,GAAGH,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,cAAME,KAAK,GAAG,sIAAwBH,wBAAwB,CAACI,KAAjD,EAAwDF,+BAA+B,CAACE,KAAxF,EAA+F,mBAA/F,EAAoH,aAApH,EAAmI,mHAAnI,CAAd;AACA,iBAAOD,KAAP;AACD,S,CAED;;;;mEAC2CJ,O,EAAkB;AAC3D,cAAMG,+BAA+B,GAAGH,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAIE,KAAK,GAAG,IAAZ;;AACA,cAAID,+BAA+B,IAAIG,wBAAnC,IAA+DH,+BAA+B,CAACE,KAA/F,IAAwGC,wBAAwB,CAACD,KAArI,EAA4I;AAC1I,gBAAME,qCAAqC,GAAG,iIAAmBJ,+BAA+B,CAACE,KAAnD,EAA0DC,wBAAwB,CAACD,KAAnF,EAA0F,0BAA1F,EAAsH,sBAAtH,EAA8I,mEAA9I,CAA9C;AACAD,iBAAK,GAAGG,qCAAR;AACD;;AACD,iBAAOH,KAAP;AACD,S,CAED;;;;iDACyBI,I,EAAe;AACtC,cAAIJ,KAAK,GAAe,IAAxB;AACA,cAAMH,wBAAwB,GAAGO,IAAI,CAACN,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMC,+BAA+B,GAAGK,IAAI,CAACN,GAAL,CAAS,0BAAT,CAAxC;AACA,cAAMO,oCAAoC,GAAG,CAAC,MAAO,CAACN,+BAA+B,CAACE,KAAzC,EAAiDK,QAAjD,EAA7C;;AACA,cAAIT,wBAAwB,IAAIA,wBAAwB,CAACI,KAArD,IAA8DF,+BAA9D,IAAiGA,+BAA+B,CAACE,KAArI,EAA4I;AAC1ID,iBAAK,GAAG,mIAAqBH,wBAAwB,CAACI,KAA9C,EAAqDI,oCAArD,EAA2F,mBAA3F,EAAgHf,gCAAhH,EAAkJC,kCAAlJ,EAAsL,qEAAWgB,OAAjM,CAAR;AACD;;AACD,iBAAOP,KAAP;AACD,S,CAED;;;;6CACqBI,I,EAAiBI,M,EAAc;AAClD,cAAIC,OAAO,GAAe,IAA1B;AACA,cAAIC,yBAAJ;;AAGA,cAAK,CAACF,MAAF,KAAc,2EAAiBG,aAAnC,EAAkD;AAChD;AACA,gBAAMC,SAAS,GAA0D,KAAKC,iBAAL,CAAuBT,IAAvB,CAAzE;AACAM,qCAAyB,GAAGE,SAAS,CAACE,aAAtC;AACD,WAJD,MAKK;AACHJ,qCAAyB,GAAGN,IAAI,CAACN,GAAL,CAAS,eAAT,EAA0BG,KAA1B,GAAkCG,IAAI,CAACN,GAAL,CAAS,eAAT,EAA0BG,KAA5D,GAAoE,IAAhG;AACD;;AAED,cAAIS,yBAAJ,EAA+B;AAC7B,gBAAMX,+BAA+B,GAAGK,IAAI,CAACN,GAAL,CAAS,0BAAT,CAAxC;AACA,gBAAMO,oCAAoC,GAAG,CAAC,MAAM,CAAEN,+BAA+B,CAACE,KAAzC,EAAiDK,QAAjD,EAA7C;AACAG,mBAAO,GAAG,mIAAqBC,yBAAyB,CAACJ,QAA1B,EAArB,EAA2DD,oCAA3D,EAAoG,CAACG,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAA3K,EAA6LrB,gCAA7L,EAA+NC,kCAA/N,EAAmQ,qEAAWgB,OAA9Q,CAAV;AACD;;AACD,iBAAOE,OAAP;AACD,S,CAED;;;;6CACqBL,I,EAAiBI,M,EAAc;AAClD,cAAIC,OAAO,GAAe,IAA1B;AACA,cAAIM,yBAAJ;;AAEA,cAAK,CAACP,MAAF,KAAc,2EAAiBG,aAAnC,EAAkD;AAChD;AACA,gBAAMK,SAAS,GAA0D,KAAKC,iBAAL,CAAuBb,IAAvB,CAAzE;AACAW,qCAAyB,GAAGC,SAAS,CAACE,aAAtC;AACD,WAJD,MAKK;AACHH,qCAAyB,GAAGX,IAAI,CAACN,GAAL,CAAS,eAAT,EAA0BG,KAA1B,GAAmC,CAACG,IAAI,CAACN,GAAL,CAAS,eAAT,EAA0BG,KAA9D,GAAuE,IAAnG;AACD;;AACD,cAAIc,yBAAJ,EAA+B;AAC7B,gBAAMhB,+BAA+B,GAAGK,IAAI,CAACN,GAAL,CAAS,0BAAT,CAAxC;AACA,gBAAMO,oCAAoC,GAAG,CAAC,MAAM,CAAEN,+BAA+B,CAACE,KAAzC,EAAiDK,QAAjD,EAA7C;AACAG,mBAAO,GAAG,mIAAqBM,yBAAyB,CAACT,QAA1B,EAArB,EAA2DD,oCAA3D,EAAoG,CAACG,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAA3K,EAA6LrB,gCAA7L,EAA+NC,kCAA/N,EAAmQ,qEAAWgB,OAA9Q,CAAV;AACD;;AACD,iBAAOE,OAAP;AACD,S,CAED;;;;yEACiDb,O,EAAkB;AACjE,cAAMuB,yBAAyB,GAAGvB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAMsB,mBAAmB,GAAsB,KAAK1B,iBAAL,CAAuB2B,mBAAtE;AACA,cAAMC,mBAAmB,GAAG,KAAK7B,aAAL,CAAmB6B,mBAAnB,CAAuCF,mBAAvC,CAA5B;AACA,cAAMpB,KAAK,GAAG,iIAAmBmB,yBAAyB,CAAClB,KAA7C,EAAoDqB,mBAAmB,CAAChB,QAApB,EAApD,EAAoF,oBAApF,EAA0G,cAA1G,6BAA8IgB,mBAA9I,0CAAd;AACA,iBAAOtB,KAAP;AACD;AAED;;AACA;;AACA;;AACA;AACA;AACA;;;;4EACiD;AAC/C,iBAAO,UAACJ,OAAD,EAAiD;AACtD,gBAAMuB,yBAAyB,GAAGvB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMyB,qBAAqB,GAAG3B,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAM0B,qBAAqB,GAAG5B,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAMD,wBAAwB,GAAGD,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAM2B,SAAS,GAAG,cAAlB;AACA,gBAAMC,YAAY,GAAG,yEAArB;AACA,gBAAI1B,KAAK,GAAQ,IAAjB,CARsD,CAStD;;AACA,gBAAImB,yBAAJ,EAA+B;AAC7B,kBAAMQ,wBAAwB,GAAG,mIAAqBR,yBAAyB,CAAClB,KAA/C,EAAsDC,wBAAwB,CAACD,KAA/E,EAAsF,oBAAtF,EAA4GwB,SAA5G,EAAuHC,YAAvH,CAAjC;AACA,kBAAME,wBAAwB,GAAG,+HAAiBT,yBAAyB,CAAClB,KAA3C,EAAkDJ,wBAAwB,CAACI,KAA3E,EAAkF,oBAAlF,EAAwGwB,SAAxG,EAAmHC,YAAnH,CAAjC;;AACA,kBAAIC,wBAAJ,EAA8B;AAC5B3B,qBAAK,GAAG2B,wBAAR;AACD,eAFD,MAGK,IAAIC,wBAAJ,EAA8B;AACjC5B,qBAAK,GAAG4B,wBAAR;AACD;;AAED,kBAAI,CAACT,yBAAyB,CAACU,MAA/B,EAAuC;AACrCV,yCAAyB,CAACW,SAA1B,CAAoC9B,KAApC;AACD;AACF,aAvBqD,CAyBtD;;;AACA,gBAAIuB,qBAAJ,EAA2B;AACzB,kBAAMQ,oBAAoB,GAAG,mIAAqBR,qBAAqB,CAACtB,KAA3C,EAAkDC,wBAAwB,CAACD,KAA3E,EAAkF,gBAAlF,EAAoGwB,SAApG,EAA+GC,YAA/G,CAA7B;AACA,kBAAMM,oBAAoB,GAAG,+HAAiBT,qBAAqB,CAACtB,KAAvC,EAA8CJ,wBAAwB,CAACI,KAAvE,EAA8E,gBAA9E,EAAgGwB,SAAhG,EAA2GC,YAA3G,CAA7B;;AACA,kBAAIK,oBAAJ,EAA0B;AACxB/B,qBAAK,GAAG+B,oBAAR;AACD,eAFD,MAGK,IAAIC,oBAAJ,EAA0B;AAC7BhC,qBAAK,GAAGgC,oBAAR;AACD;;AAED,kBAAI,CAACT,qBAAqB,CAACM,MAA3B,EAAmC;AACjCN,qCAAqB,CAACO,SAAtB,CAAgC9B,KAAhC;AACD;AACF,aAvCqD,CAyCtD;;;AACA,gBAAIwB,qBAAJ,EAA2B;AACzB,kBAAMS,oBAAoB,GAAG,mIAAqBT,qBAAqB,CAACvB,KAA3C,EAAkDC,wBAAwB,CAACD,KAA3E,EAAkF,gBAAlF,EAAoGwB,SAApG,EAA+GC,YAA/G,CAA7B;AACA,kBAAMQ,oBAAoB,GAAG,+HAAiBV,qBAAqB,CAACvB,KAAvC,EAA8CJ,wBAAwB,CAACI,KAAvE,EAA8E,gBAA9E,EAAgGwB,SAAhG,EAA2GC,YAA3G,CAA7B;;AACA,kBAAIO,oBAAJ,EAA0B;AACxBjC,qBAAK,GAAGiC,oBAAR;AACD,eAFD,MAGK,IAAIC,oBAAJ,EAA0B;AAC7BlC,qBAAK,GAAGkC,oBAAR;AACD;;AAED,kBAAI,CAACV,qBAAqB,CAACK,MAA3B,EAAmC;AACjCL,qCAAqB,CAACM,SAAtB,CAAgC9B,KAAhC;AACD;AACF;;AACD,mBAAOA,KAAP;AACD,WAzDD;AA0DD,S,CAED;;;;yDAC8B;AAAA;;AAC5B,iBAAO,UAACJ,OAAD,EAAiD;AACtD,gBAAMuC,yBAAyB,GAAGvC,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMsC,kCAAkC,GAAGxC,OAAO,CAACE,GAAR,CAAY,6BAAZ,CAA3C;AACA,gBAAMuC,8BAA8B,GAAGzC,OAAO,CAACE,GAAR,CAAY,yBAAZ,CAAvC;AACA,gBAAMwC,8BAA8B,GAAG1C,OAAO,CAACE,GAAR,CAAY,yBAAZ,CAAvC;AACA,gBAAMyC,0BAA0B,GAAsB,MAAI,CAAC5C,wBAAL,CAA8B6C,0BAApF;AACA,gBAAIC,uBAAuB,GAAGN,yBAAyB,CAAClC,KAAxD;AACA,gBAAID,KAAK,GAAG,IAAZ;;AACA,gBAAIyC,uBAAuB,IAAIA,uBAAuB,CAACC,OAAnD,IAA8DN,kCAAkC,CAACnC,KAArG,EAA4G;AAC1G,kBAAI0C,OAAO,GAAG,EAAd;;AACA,kBAAI,sEAAYC,UAAZ,KAA2B,CAAEL,0BAA0B,CAACM,EAA5D,EAAiE;AAC/DF,uBAAO,GAAG,0DAA0DF,uBAAuB,CAACK,QAAlF,GAA6F,MAA7F,GAAsGL,uBAAuB,CAACM,QAA9H,GAAyI,qCAAzI,GAAiLN,uBAAuB,CAACO,KAAzM,GAAiN,gFAA3N;AACD,eAFD,MAGK;AACH;AACAL,uBAAO,GAAG,0DAA0DF,uBAAuB,CAACQ,OAAlF,GAA4F,MAA5F,GAAqGR,uBAAuB,CAACC,OAA7H,GAAuI,qCAAvI,GAA+KD,uBAAuB,CAACO,KAAvM,GAA+M,gFAAzN;AACD,eARyG,CAU1G;;;AACA,kBAAIZ,kCAAkC,CAACnC,KAAvC,EAA8C;AAC5C,oBAAIiD,oCAAoC,GAAGd,kCAAkC,CAACnC,KAA9E;;AACA,oBAAK,CAACsC,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/DM,sDAAoC,GAAG,MAAI,CAACzD,aAAL,CAAmB0D,0BAAnB,CAA8Cf,kCAAkC,CAACnC,KAAjF,EAAwFmD,OAAxF,CAAgG,CAAhG,CAAvC;AACD,iBAJ2C,CAM5C;;;AACA,oBAAMC,+CAA+C,GAAG,iIAAmBZ,uBAAuB,CAACC,OAA3C,EAAoDQ,oCAApD,EAA0F,6BAA1F,EAAyH,uBAAzH,EAAkJP,OAAlJ,CAAxD;AACA,oBAAMW,iDAAiD,GAAG,mIAAqBb,uBAAuB,CAACQ,OAA7C,EAAsDC,oCAAtD,EAA4F,6BAA5F,EAA2H,uBAA3H,EAAoJP,OAApJ,CAA1D;;AACA,oBAAIU,+CAA+C,IAAIC,iDAAvD,EAA0G;AACxGtD,uBAAK,GAAGqD,+CAA+C,IAAIC,iDAA3D;AACD;;AACDlB,kDAAkC,CAACN,SAAnC,CAA6C9B,KAA7C;AACD,eAxByG,CA0B1G;;;AACA,kBAAIqC,8BAA8B,CAACpC,KAAnC,EAA0C;AACxC,oBAAIsD,gCAAgC,GAAGlB,8BAA8B,CAACpC,KAAtE;;AACA,oBAAK,CAACsC,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/DW,kDAAgC,GAAG,MAAI,CAAC9D,aAAL,CAAmB0D,0BAAnB,CAA8Cd,8BAA8B,CAACpC,KAA7E,EAAoFmD,OAApF,CAA4F,CAA5F,CAAnC;AACD,iBAJuC,CAMxC;;;AACA,oBAAMI,2CAA2C,GAAG,iIAAmBf,uBAAuB,CAACC,OAA3C,EAAoDa,gCAApD,EAAsF,yBAAtF,EAAiH,uBAAjH,EAA0IZ,OAA1I,CAApD;AACA,oBAAMc,6CAA6C,GAAG,mIAAqBhB,uBAAuB,CAACQ,OAA7C,EAAsDM,gCAAtD,EAAwF,yBAAxF,EAAmH,uBAAnH,EAA4IZ,OAA5I,CAAtD;;AACA,oBAAIa,2CAA2C,IAAIC,6CAAnD,EAAkG;AAChGzD,uBAAK,GAAGwD,2CAA2C,IAAIC,6CAAvD;AACD;;AACDpB,8CAA8B,CAACP,SAA/B,CAAyC9B,KAAzC;AACD,eAxCyG,CA0C1G;;;AACA,kBAAIsC,8BAA8B,CAACrC,KAAnC,EAA0C;AACxC,oBAAIyD,gCAAgC,GAAGpB,8BAA8B,CAACrC,KAAtE;;AACA,oBAAK,CAACsC,0BAA0B,CAACM,EAA7B,KAAqC,sEAAYD,UAArD,EAAiE;AAC/Dc,kDAAgC,GAAG,MAAI,CAACjE,aAAL,CAAmB0D,0BAAnB,CAA8Cb,8BAA8B,CAACrC,KAA7E,EAAoFmD,OAApF,CAA4F,CAA5F,CAAnC;AACD,iBAJuC,CAMxC;;;AACA,oBAAMO,2CAA2C,GAAG,iIAAmBlB,uBAAuB,CAACC,OAA3C,EAAoDgB,gCAApD,EAAsF,yBAAtF,EAAiH,uBAAjH,EAA0If,OAA1I,CAApD;AACA,oBAAMiB,6CAA6C,GAAG,mIAAqBnB,uBAAuB,CAACQ,OAA7C,EAAsDS,gCAAtD,EAAwF,yBAAxF,EAAmH,uBAAnH,EAA4If,OAA5I,CAAtD;;AACA,oBAAIgB,2CAA2C,IAAIC,6CAAnD,EAAkG;AAChG5D,uBAAK,GAAG2D,2CAA2C,IAAIC,6CAAvD;AACD;;AACDtB,8CAA8B,CAACR,SAA/B,CAAyC9B,KAAzC;AACD;AACF;;AAED,mBAAOA,KAAP;AACD,WApED;AAqED,S,CAED;;;;6DACkC;AAAA;;AAChC,iBAAO,UAACJ,OAAD,EAAiD;AACtD,gBAAMG,+BAA+B,GAAGH,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,gBAAMsB,mBAAmB,GAAsB,MAAI,CAAC1B,iBAAL,CAAuB2B,mBAAtE;AACA,gBAAIrB,KAAK,GAAG,IAAZ;;AACA,gBAAID,+BAA+B,IAAIA,+BAA+B,CAACE,KAAvE,EAA8E;AAE5E;AACA,kBAAI4D,0CAAJ;AACA,kBAAIC,4CAAJ;;AAEA,kBAAK,CAAC1C,mBAAmB,CAACyB,EAAtB,KAA8B,gEAAMkB,IAAxC,EAA8C;AAC5CF,0DAA0C,GAAG,iIAAmB9D,+BAA+B,CAACE,KAAnD,EAA0D,OAA1D,EAAmE,0BAAnE,EAA+F,sBAA/F,EAAuH,iHAAvH,CAA7C;AACA6D,4DAA4C,GAAG,mIAAqB/D,+BAA+B,CAACE,KAArD,EAA4D,OAA5D,EAAqE,0BAArE,EAAiG,sBAAjG,EAAyH,oHAAzH,CAA/C;AACD;;AAED,kBAAK,CAACmB,mBAAmB,CAACyB,EAAtB,KAA8B,gEAAMmB,WAAxC,EAAqD;AACnDH,0DAA0C,GAAG,iIAAmB9D,+BAA+B,CAACE,KAAnD,EAA0D,MAA1D,EAAkE,0BAAlE,EAA8F,sBAA9F,EAAsH,iHAAtH,CAA7C;AACA6D,4DAA4C,GAAG,mIAAqB/D,+BAA+B,CAACE,KAArD,EAA4D,MAA5D,EAAoE,0BAApE,EAAgG,sBAAhG,EAAwH,oHAAxH,CAA/C;AACD;;AAGD,kBAAI4D,0CAA0C,IAAIC,4CAAlD,EAAgG;AAC9F9D,qBAAK,GAAG6D,0CAA0C,IAAIC,4CAAtD;AACD;AACF;;AAED,gBAAI,CAAC/D,+BAA+B,CAAC8B,MAArC,EAA6C;AAC3C9B,6CAA+B,CAAC+B,SAAhC,CAA0C9B,KAA1C;AACD;;AAED,mBAAOA,KAAP;AACD,WA/BD;AAgCD,S,CAED;;;;uEAC4C;AAAA;;AAC1C,iBAAO,UAACJ,OAAD,EAAiD;AACtD,gBAAMqE,qBAAqB,GAAGrE,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAMsB,mBAAmB,GAAsB,MAAI,CAAC1B,iBAAL,CAAuB2B,mBAAtE;;AACA,gBAAM6C,eAAe,GAAG,MAAI,CAACzE,aAAL,CAAmByE,eAAnB,CAAmC9C,mBAAnC,CAAxB;;AACA,gBAAIpB,KAAK,GAAG,IAAZ;;AACA,gBAAIiE,qBAAqB,IAAIA,qBAAqB,CAAChE,KAAnD,EAA0D;AACxDD,mBAAK,GAAG,mIAAqBiE,qBAAqB,CAAChE,KAA3C,EAAkDiE,eAAe,CAAC5D,QAAhB,EAAlD,EAA8E,gBAA9E,EAAgG,WAAhG,mEAAuK4D,eAAvK,cAA0L9C,mBAAmB,CAAC+C,mBAA9M,EAAR,CADwD,CAGxD;AACA;AACA;;AACA,oBAAI,CAAC1E,aAAL,CAAmB2E,+BAAnB,CAAmDH,qBAAnD,EAA0EjE,KAA1E,EAAiF,oCAAjF;AACD;;AAED,mBAAOA,KAAP;AACD,WAfD;AAgBD,S,CAED;;;;mDAC2BqE,gB,EAAqB;AAAA;;AAC9C,iBAAO,UAACzE,OAAD,EAAiD;AACtD,gBAAII,KAAK,GAAG,IAAZ,CADsD,CAEtD;;AACA,gBAAMsE,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAY5E,OAAO,CAAC6E,QAApB,CAAxB,CAHsD,CAItD;;AACA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,eAAe,CAACK,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;AAC3D;AACA,kBAAIL,gBAAgB,KAAKC,eAAe,CAACI,KAAD,CAAxC,EAAiD;AAC/C;AACD,eAJ0D,CAM3D;;;AACA,kBAAIJ,eAAe,CAACI,KAAD,CAAf,KAA2B,YAA3B,IAA2CJ,eAAe,CAACI,KAAD,CAAf,KAA2B,cAAtE,IACCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,QAD5B,IACwCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,QADnE,IAECJ,eAAe,CAACI,KAAD,CAAf,KAA2B,yBAF5B,IAGCJ,eAAe,CAACI,KAAD,CAAf,KAA2B,6BAH5B,IAICJ,eAAe,CAACI,KAAD,CAAf,KAA2B,yBAJhC,EAKE;AACA;AACD,eAd0D,CAgB3D;;;AACA,kBAAM1E,MAAK,GAAG,sIAAwBJ,OAAO,CAAC6E,QAAR,CAAiBH,eAAe,CAACI,KAAD,CAAhC,EAAyCzE,KAAjE,EAAwE,GAAxE,EAA6EqE,eAAe,CAACI,KAAD,CAA5F,EAAqG,EAArG,EAAyG,oFAAzG,CAAd,CAjB2D,CAmB3D;AACA;;;AACA,kBAAME,EAAE,GAAGhF,OAAO,CAACE,GAAR,CAAYwE,eAAe,CAACI,KAAD,CAA3B,CAAX;;AACA,oBAAI,CAACjF,aAAL,CAAmB2E,+BAAnB,CAAmDQ,EAAnD,EAAuD5E,MAAvD,EAA8D,wBAA9D;AACD;;AACD,mBAAOA,KAAP;AACD,WA9BD;AA+BD,S,CAED;;;;8CACmB;AAAA;;AACjB,iBAAO,UAACJ,OAAD,EAAiD;AACtD,gBAAII,KAAK,GAAe,IAAxB;AACA,gBAAM6E,GAAG,GAAG,0EAAZ;AACA,gBAAMC,0BAA0B,GAAGlF,OAAO,CAACE,GAAR,CAAY,qBAAZ,CAAnC;AACA,gBAAMD,wBAAwB,GAAGD,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMiF,0BAA0B,GAAGnF,OAAO,CAACE,GAAR,CAAY,qBAAZ,CAAnC;AACA,gBAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,gBAAMkF,2BAA2B,GAAGpF,OAAO,CAACE,GAAR,CAAY,sBAAZ,CAApC;AACA,gBAAMqB,yBAAyB,GAAGvB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,gBAAMmF,mBAAmB,GAAGrF,OAAO,CAACE,GAAR,CAAY,cAAZ,CAA5B;AACA,gBAAMoF,iBAAiB,GAAGtF,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AACA,gBAAMqF,uBAAuB,GAAGvF,OAAO,CAACE,GAAR,CAAY,kBAAZ,CAAhC;AACA,gBAAMsF,qBAAqB,GAAGxF,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;;AAEA,gBAAIgF,0BAA0B,CAAC7E,KAA/B,EAAsC;AACpCD,mBAAK,GAAG,wIAA0B8E,0BAA0B,CAAC7E,KAArD,EAA4DJ,wBAAwB,CAACI,KAArF,EAA4F,qBAA5F,EAAmH,EAAnH,EAAuH4E,GAAvH,CAAR,CADoC,CAEpC;;AACA,oBAAI,CAACpF,aAAL,CAAmB2E,+BAAnB,CAAmDU,0BAAnD,EAA+E9E,KAA/E,EAAsF,kDAAtF;AACD;;AAED,gBAAI+E,0BAA0B,CAAC9E,KAA/B,EAAsC;AACpCD,mBAAK,GAAG,wIAA0B+E,0BAA0B,CAAC9E,KAArD,EAA4DC,wBAAwB,CAACD,KAArF,EAA4F,qBAA5F,EAAmH,EAAnH,EAAuH4E,GAAvH,CAAR,CADoC,CAEpC;;AACA,oBAAI,CAACpF,aAAL,CAAmB2E,+BAAnB,CAAmDW,0BAAnD,EAA+E/E,KAA/E,EAAsF,kDAAtF;AACD;;AAED,gBAAIgF,2BAA2B,CAAC/E,KAAhC,EAAuC;AACrCD,mBAAK,GAAG,wIAA0BgF,2BAA2B,CAAC/E,KAAtD,EAA6DkB,yBAAyB,CAAClB,KAAvF,EAA8F,sBAA9F,EAAsH,EAAtH,EAA0H4E,GAA1H,CAAR,CADqC,CAErC;;AACA,oBAAI,CAACpF,aAAL,CAAmB2E,+BAAnB,CAAmDY,2BAAnD,EAAgFhF,KAAhF,EAAuF,kDAAvF;AACD;;AAED,gBAAImF,uBAAuB,CAAClF,KAA5B,EAAmC;AACjCD,mBAAK,GAAG,wIAA0BmF,uBAAuB,CAAClF,KAAlD,EAAyDmF,qBAAqB,CAACnF,KAA/E,EAAsF,kBAAtF,EAA0G,EAA1G,EAA8G4E,GAA9G,CAAR,CADiC,CAEjC;;AACA,oBAAI,CAACpF,aAAL,CAAmB2E,+BAAnB,CAAmDe,uBAAnD,EAA4EnF,KAA5E,EAAmF,kDAAnF;AACD;;AAED,gBAAIiF,mBAAmB,CAAChF,KAApB,IAA6BgF,mBAAmB,CAAChF,KAApB,IAA6B,CAA9D,EAAiE;AAC/DD,mBAAK,GAAG,wIAA0BiF,mBAAmB,CAAChF,KAA9C,EAAqDiF,iBAAiB,CAACjF,KAAvE,EAA8E,cAA9E,EAA8F,EAA9F,EAAkG4E,GAAlG,CAAR,CAD+D,CAE/D;;AACA,oBAAI,CAACpF,aAAL,CAAmB2E,+BAAnB,CAAmDa,mBAAnD,EAAwEjF,KAAxE,EAA+E,kDAA/E;AACD;;AACD,mBAAOA,KAAP;AACD,WA5CD;AA6CD,S,CAED;;;;2CACmBJ,O,EAAoBY,M,EAAc;AACnD,cAAIqB,MAAM,GAAiB,EAA3B;AACA,cAAMgD,GAAG,GAAG,sDAAZ;AAEA,cAAMhF,wBAAwB,GAAGD,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMqB,yBAAyB,GAAGvB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAMsF,qBAAqB,GAAGxF,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,cAAMoF,iBAAiB,GAAGtF,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AAEA,cAAIY,yBAAJ;AACA,cAAI2E,yBAAJ;AACA,cAAIC,0BAAJ;AACA,cAAIC,kBAAJ;AACA,cAAIC,sBAAJ;;AAEA,cAAK,CAAChF,MAAF,KAAc,2EAAiBG,aAAnC,EAAkD;AAChD;AACA,gBAAMC,SAAS,GAA0D,KAAKC,iBAAL,CAAuBjB,OAAvB,CAAzE;AACAc,qCAAyB,GAAGE,SAAS,CAACE,aAAtC;AACAuE,qCAAyB,GAAGzE,SAAS,CAAC6E,aAAtC;AACAH,sCAA0B,GAAG1E,SAAS,CAAC8E,cAAvC;AACAH,8BAAkB,GAAG3E,SAAS,CAAC+E,MAA/B;AACAH,kCAAsB,GAAG5E,SAAS,CAAC/B,UAAnC;AACD,WARD,MASK;AACH6B,qCAAyB,GAAGd,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAA7B,GAAsC,CAACL,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAApE,GAA6E,IAAzG;AACAoF,qCAAyB,GAAGzF,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAA7B,GAAsC,CAACL,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAApE,GAA6E,IAAzG;AACAqF,sCAA0B,GAAG1F,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B,GAAuC,CAACL,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BG,KAAtE,GAA+E,IAA5G;AACAsF,8BAAkB,GAAG3F,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBG,KAAtB,GAA+B,CAACL,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBG,KAAtD,GAA+D,IAApF;AACAuF,kCAAsB,GAAG5F,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BG,KAA1B,GAAmC,CAACL,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BG,KAA9D,GAAuE,IAAhG;AACD,WA/BkD,CAiCnD;;;AACA,cAAIS,yBAAJ,EAA+B;AAC7B,gBAAMkF,MAAM,GAAG,mIAAqBlF,yBAAyB,CAACJ,QAA1B,EAArB,EAA2DT,wBAAwB,CAACI,KAApF,EAA8F,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAArK,EAAuL,EAAvL,EAA2LkE,GAA3L,CAAf;;AACA,gBAAIe,MAAJ,EAAY;AACV/D,oBAAM,CAACgE,IAAP,CAAYD,MAAZ;AACD;AACF;;AAED,cAAIP,yBAAJ,EAA+B;AAC7B,gBAAMS,MAAM,GAAG,mIAAqBT,yBAAyB,CAAC/E,QAA1B,EAArB,EAA2DJ,wBAAwB,CAACD,KAApF,EAA8F,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAArK,EAAuL,EAAvL,EAA2LkE,GAA3L,CAAf;;AACA,gBAAIiB,MAAJ,EAAY;AACVjE,oBAAM,CAACgE,IAAP,CAAYC,MAAZ;AACD;AACF;;AAED,cAAIR,0BAAJ,EAAgC;AAC9B,gBAAMS,MAAM,GAAG,mIAAqBT,0BAA0B,CAAChF,QAA3B,EAArB,EAA4Da,yBAAyB,CAAClB,KAAtF,EAAgG,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,sBAAjD,GAA0E,gBAAxK,EAA2L,EAA3L,EAA+LkE,GAA/L,CAAf;;AACA,gBAAIkB,MAAJ,EAAY;AACVlE,oBAAM,CAACgE,IAAP,CAAYE,MAAZ;AACD;AACF;;AAED,cAAIR,kBAAJ,EAAwB;AACtB,gBAAMS,MAAM,GAAG,mIAAqBT,kBAAkB,CAACjF,QAAnB,EAArB,EAAoD4E,iBAAiB,CAACjF,KAAtE,EAAgF,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,cAAjD,GAAkE,QAAhJ,EAA2J,EAA3J,EAA+JkE,GAA/J,CAAf;;AACA,gBAAImB,MAAJ,EAAY;AACVnE,oBAAM,CAACgE,IAAP,CAAYG,MAAZ;AACD;AACF;;AAED,cAAI,CAACC,KAAK,CAACT,sBAAD,CAAN,IAAkCA,sBAAsB,GAAG,CAA/D,EAAkE;AAChE,gBAAMU,MAAM,GAAG,mIAAqBV,sBAAsB,CAAClF,QAAvB,EAArB,EAAwD8E,qBAAqB,CAACnF,KAA9E,EAAwF,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,kBAAjD,GAAsE,YAA5J,EAA2K,EAA3K,EAA+KkE,GAA/K,CAAf;;AACA,gBAAIqB,MAAJ,EAAY;AACVrE,oBAAM,CAACgE,IAAP,CAAYK,MAAZ;AACD;AACF;;AACD,iBAAOrE,MAAP;AACD;;;2CAEkBjC,O,EAAoBY,M,EAAc;AACnD,cAAIqB,MAAM,GAAiB,EAA3B;AACA,cAAMgD,GAAG,GAAG,wDAAZ;AAEA,cAAMhF,wBAAwB,GAAGD,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMI,wBAAwB,GAAGN,OAAO,CAACE,GAAR,CAAY,mBAAZ,CAAjC;AACA,cAAMqB,yBAAyB,GAAGvB,OAAO,CAACE,GAAR,CAAY,oBAAZ,CAAlC;AACA,cAAMoF,iBAAiB,GAAGtF,OAAO,CAACE,GAAR,CAAY,YAAZ,CAA1B;AACA,cAAMsF,qBAAqB,GAAGxF,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AAEA,cAAIiB,yBAAJ;AACA,cAAIoF,yBAAJ;AACA,cAAIC,0BAAJ;AACA,cAAIC,kBAAJ;AACA,cAAIC,sBAAJ;;AAEA,cAAK,CAAC9F,MAAF,KAAc,2EAAiBG,aAAnC,EAAkD;AAChD;AACA,gBAAMK,SAAS,GAA0D,KAAKC,iBAAL,CAAuBrB,OAAvB,CAAzE;AACAmB,qCAAyB,GAAGC,SAAS,CAACE,aAAtC;AACAiF,qCAAyB,GAAGnF,SAAS,CAACuF,aAAtC;AACAH,sCAA0B,GAAGpF,SAAS,CAACwF,cAAvC;AACAH,8BAAkB,GAAGrF,SAAS,CAACyF,MAA/B;AACAH,kCAAsB,GAAGtF,SAAS,CAACrC,UAAnC;AACD,WARD,MASK;AACHoC,qCAAyB,GAAGnB,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAA7B,GAAsC,CAACL,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAApE,GAA6E,IAAzG;AACAkG,qCAAyB,GAAGvG,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAA7B,GAAsC,CAACL,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BG,KAApE,GAA6E,IAAzG;AACAmG,sCAA0B,GAAGxG,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BG,KAA9B,GAAuC,CAACL,OAAO,CAACE,GAAR,CAAY,gBAAZ,EAA8BG,KAAtE,GAA+E,IAA5G;AACAoG,8BAAkB,GAAGzG,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBG,KAAtB,GAA+B,CAACL,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsBG,KAAtD,GAA+D,IAApF;AACAqG,kCAAsB,GAAG1G,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BG,KAA1B,GAAmC,CAACL,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BG,KAA9D,GAAuE,IAAhG;AACD,WA/BkD,CAiCnD;;;AACA,cAAIc,yBAAJ,EAA+B;AAC7B,gBAAM6E,MAAM,GAAG,iIAAmB7E,yBAAyB,CAACT,QAA1B,EAAnB,EAAyDT,wBAAwB,CAACI,KAAlF,EAA4F,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAAnK,EAAqL,EAArL,EAAyLkE,GAAzL,CAAf;;AACA,gBAAIe,MAAJ,EAAY;AACV/D,oBAAM,CAACgE,IAAP,CAAYD,MAAZ;AACD;AACF;;AAED,cAAIO,yBAAJ,EAA+B;AAC7B,gBAAML,MAAM,GAAG,iIAAmBK,yBAAyB,CAAC7F,QAA1B,EAAnB,EAAyDJ,wBAAwB,CAACD,KAAlF,EAA4F,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,qBAAjD,GAAyE,eAAnK,EAAqL,EAArL,EAAyLkE,GAAzL,CAAf;;AACA,gBAAIiB,MAAJ,EAAY;AACVjE,oBAAM,CAACgE,IAAP,CAAYC,MAAZ;AACD;AACF;;AAED,cAAIM,0BAAJ,EAAgC;AAC9B,gBAAML,MAAM,GAAG,iIAAmBK,0BAA0B,CAAC9F,QAA3B,EAAnB,EAA0Da,yBAAyB,CAAClB,KAApF,EAA8F,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,sBAAjD,GAA0E,gBAAtK,EAAyL,EAAzL,EAA6LkE,GAA7L,CAAf;;AACA,gBAAIkB,MAAJ,EAAY;AACVlE,oBAAM,CAACgE,IAAP,CAAYE,MAAZ;AACD;AACF;;AAED,cAAIM,kBAAJ,EAAwB;AACtB,gBAAML,MAAM,GAAG,iIAAmBK,kBAAkB,CAAC/F,QAAnB,EAAnB,EAAkD4E,iBAAiB,CAACjF,KAApE,EAA8E,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,cAAjD,GAAkE,QAA9I,EAAyJ,EAAzJ,EAA6JkE,GAA7J,CAAf;;AACA,gBAAImB,MAAJ,EAAY;AACVnE,oBAAM,CAACgE,IAAP,CAAYG,MAAZ;AACD;AACF;;AAED,cAAI,CAACC,KAAK,CAACK,sBAAD,CAAN,IAAkCA,sBAAsB,GAAG,CAA/D,EAAkE;AAChE,gBAAMJ,MAAM,GAAG,iIAAmBI,sBAAsB,CAAChG,QAAvB,EAAnB,EAAsD8E,qBAAqB,CAACnF,KAA5E,EAAsF,CAACO,MAAF,KAAc,2EAAiBG,aAAhC,GAAiD,kBAAjD,GAAsE,YAA1J,EAAyK,EAAzK,EAA6KkE,GAA7K,CAAf;;AACA,gBAAIqB,MAAJ,EAAY;AACVrE,oBAAM,CAACgE,IAAP,CAAYK,MAAZ;AACD;AACF;;AACD,iBAAOrE,MAAP;AACD,S,CAED;;;;wDAC6B;AAAA;;AAC3B,iBAAO,UAACjC,OAAD,EAAiD;AACtD,gBAAIa,OAAO,GAAe,IAA1B;AACA,gBAAMV,+BAA+B,GAAGH,OAAO,CAACE,GAAR,CAAY,0BAAZ,CAAxC;AACA,gBAAMmE,qBAAqB,GAAGrE,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAA9B;AACA,gBAAMsB,mBAAmB,GAAsB,MAAI,CAAC1B,iBAAL,CAAuB2B,mBAAtE;;AAEA,gBAAK,CAACD,mBAAmB,CAACyB,EAAtB,KAA8B,gEAAMkB,IAAxC,EAA8C;AAC5C,kBAAK2C,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAArD,IAA8DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAAnH,KAA6HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA1C,IAAmDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA1N,CAAD,IACDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAArD,IAA8DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAAnH,KAA6HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA1C,IAAmDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA1N,CADC,IAEDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAArD,IAA8DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAAnH,KAA6HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA3N,CAFC,IAGDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAArD,IAA8DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAAnH,KAA6HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA3N,CAHC,IAIDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAArD,IAA8DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,KAAnH,KAA6HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAA3N,CAJH,EAKEQ,OAAO,GAAG,IAAI,8DAAJ,CAAe;AAAEkG,qBAAK,EAAE,gBAAT;AAA2BC,qBAAK,EAAE,wBAAlC;AAA4DC,sBAAM,EAAE,oHAApE;AAA0LC,oBAAI,EAAE,qEAAWvG;AAA3M,eAAf,CAAV;AACH;;AACD,gBAAK,CAACa,mBAAmB,CAACyB,EAAtB,KAA8B,gEAAMmB,WAAxC,EAAqD;AACnD,kBAAK0C,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAArD,IAA6DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAAlH,KAA2HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,IAAzN,CAAD,IACDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAArD,IAA6DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAAlH,KAA2HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,IAAzN,CADC,IAEDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,GAArD,IAA4DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAAjH,KAA0HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,IAAxN,CAFC,IAGDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAArD,IAA6DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAAlH,KAA2HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,KAAzN,CAHC,IAIDyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAArD,IAA6DyG,UAAU,CAAC3G,+BAA+B,CAACE,KAAjC,CAAV,IAAqD,IAAlH,KAA2HyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAA1C,IAAoDyG,UAAU,CAACzC,qBAAqB,CAAChE,KAAvB,CAAV,GAA0C,MAAzN,CAJH,EAKEQ,OAAO,GAAG,IAAI,8DAAJ,CAAe;AAAEkG,qBAAK,EAAE,gBAAT;AAA2BC,qBAAK,EAAE,wBAAlC;AAA4DC,sBAAM,EAAE,oHAApE;AAA0LC,oBAAI,EAAE,qEAAWvG;AAA3M,eAAf,CAAV;AACH,aArBqD,CAsBtD;AACA;AACA;AACA;;;AACA,kBAAI,CAACd,aAAL,CAAmB2E,+BAAnB,CAAmDH,qBAAnD,EAA0ExD,OAA1E,EAAmF,wBAAnF;;AACA,mBAAOA,OAAP;AACD,WA5BD;AA6BD,S,CAED;;;;0CACkBL,I,EAAe;AAC/B,cAAI2G,QAAQ,GAA0D,IAAI,qJAAJ,EAAtE;AACA,cAAMlH,wBAAwB,GAAGO,IAAI,CAACN,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMgF,0BAA0B,GAAG1E,IAAI,CAACN,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMI,wBAAwB,GAAGE,IAAI,CAACN,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMiF,0BAA0B,GAAG3E,IAAI,CAACN,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMkF,2BAA2B,GAAG5E,IAAI,CAACN,GAAL,CAAS,sBAAT,CAApC;AACA,cAAMoF,iBAAiB,GAAG9E,IAAI,CAACN,GAAL,CAAS,YAAT,CAA1B;AACA,cAAMmF,mBAAmB,GAAG7E,IAAI,CAACN,GAAL,CAAS,cAAT,CAA5B;AACA,cAAMqB,yBAAyB,GAAGf,IAAI,CAACN,GAAL,CAAS,oBAAT,CAAlC;AACA,cAAMsF,qBAAqB,GAAGhF,IAAI,CAACN,GAAL,CAAS,gBAAT,CAA9B;AACA,cAAMqF,uBAAuB,GAAG/E,IAAI,CAACN,GAAL,CAAS,kBAAT,CAAhC;AAEAiH,kBAAQ,CAACjG,aAAT,GAA0B4F,UAAU,CAAC7G,wBAAwB,CAACI,KAAzB,GAAiCJ,wBAAwB,CAACI,KAA1D,GAAkE,GAAnE,CAAV,GAAoFyG,UAAU,CAAC5B,0BAA0B,CAAC7E,KAA3B,GAAmC6E,0BAA0B,CAAC7E,KAA9D,GAAsE,GAAvE,CAAxH;AACA8G,kBAAQ,CAACtB,aAAT,GAA0BiB,UAAU,CAACxG,wBAAwB,CAACD,KAAzB,GAAiCC,wBAAwB,CAACD,KAA1D,GAAkE,GAAnE,CAAV,GAAoFyG,UAAU,CAAC3B,0BAA0B,CAAC9E,KAA3B,GAAmC8E,0BAA0B,CAAC9E,KAA9D,GAAsE,GAAvE,CAAxH;AACA8G,kBAAQ,CAACrB,cAAT,GAA2BgB,UAAU,CAACvF,yBAAyB,CAAClB,KAA1B,GAAkCkB,yBAAyB,CAAClB,KAA5D,GAAoE,GAArE,CAAV,GAAsFyG,UAAU,CAAC1B,2BAA2B,CAAC/E,KAA5B,GAAoC+E,2BAA2B,CAAC/E,KAAhE,GAAwE,GAAzE,CAA3H;AACA8G,kBAAQ,CAACpB,MAAT,GAAmBe,UAAU,CAACxB,iBAAiB,CAACjF,KAAlB,GAA0BiF,iBAAiB,CAACjF,KAA5C,GAAoD,GAArD,CAAV,GAAsEyG,UAAU,CAACzB,mBAAmB,CAAChF,KAApB,GAA4BgF,mBAAmB,CAAChF,KAAhD,GAAwD,GAAzD,CAAnG;AACA8G,kBAAQ,CAAClI,UAAT,GAAuB6H,UAAU,CAACtB,qBAAqB,CAACnF,KAAtB,GAA8BmF,qBAAqB,CAACnF,KAApD,GAA4D,GAA7D,CAAV,GAA8EyG,UAAU,CAACvB,uBAAuB,CAAClF,KAAxB,GAAgCkF,uBAAuB,CAAClF,KAAxD,GAAgE,GAAjE,CAA/G;AACA,iBAAO8G,QAAP;AACD,S,CAED;;;;0CACkB3G,I,EAAe;AAC/B,cAAI4G,QAAQ,GAA0D,IAAI,qJAAJ,EAAtE;AACA,cAAMnH,wBAAwB,GAAGO,IAAI,CAACN,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMgF,0BAA0B,GAAG1E,IAAI,CAACN,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMI,wBAAwB,GAAGE,IAAI,CAACN,GAAL,CAAS,mBAAT,CAAjC;AACA,cAAMiF,0BAA0B,GAAG3E,IAAI,CAACN,GAAL,CAAS,qBAAT,CAAnC;AACA,cAAMkF,2BAA2B,GAAG5E,IAAI,CAACN,GAAL,CAAS,sBAAT,CAApC;AACA,cAAMoF,iBAAiB,GAAG9E,IAAI,CAACN,GAAL,CAAS,YAAT,CAA1B;AACA,cAAMmF,mBAAmB,GAAG7E,IAAI,CAACN,GAAL,CAAS,cAAT,CAA5B;AACA,cAAMqB,yBAAyB,GAAGf,IAAI,CAACN,GAAL,CAAS,oBAAT,CAAlC;AACA,cAAMsF,qBAAqB,GAAGhF,IAAI,CAACN,GAAL,CAAS,gBAAT,CAA9B;AACA,cAAMqF,uBAAuB,GAAG/E,IAAI,CAACN,GAAL,CAAS,kBAAT,CAAhC;AAEAkH,kBAAQ,CAAC9F,aAAT,GAA0BwF,UAAU,CAAC7G,wBAAwB,CAACI,KAAzB,GAAiCJ,wBAAwB,CAACI,KAA1D,GAAkE,GAAnE,CAAV,GAAoFyG,UAAU,CAAC5B,0BAA0B,CAAC7E,KAA3B,GAAmC6E,0BAA0B,CAAC7E,KAA9D,GAAsE,GAAvE,CAAxH;AACA+G,kBAAQ,CAACT,aAAT,GAA0BG,UAAU,CAACxG,wBAAwB,CAACD,KAAzB,GAAiCC,wBAAwB,CAACD,KAA1D,GAAkE,GAAnE,CAAV,GAAoFyG,UAAU,CAAC3B,0BAA0B,CAAC9E,KAA3B,GAAmC8E,0BAA0B,CAAC9E,KAA9D,GAAsE,GAAvE,CAAxH;AACA+G,kBAAQ,CAACR,cAAT,GAA2BE,UAAU,CAACvF,yBAAyB,CAAClB,KAA1B,GAAkCkB,yBAAyB,CAAClB,KAA5D,GAAoE,GAArE,CAAV,GAAsFyG,UAAU,CAAC1B,2BAA2B,CAAC/E,KAA5B,GAAoC+E,2BAA2B,CAAC/E,KAAhE,GAAwE,GAAzE,CAA3H;AACA+G,kBAAQ,CAACP,MAAT,GAAmBC,UAAU,CAACxB,iBAAiB,CAACjF,KAAlB,GAA0BiF,iBAAiB,CAACjF,KAA5C,GAAoD,GAArD,CAAV,GAAsEyG,UAAU,CAACzB,mBAAmB,CAAChF,KAApB,GAA4BgF,mBAAmB,CAAChF,KAAhD,GAAwD,GAAzD,CAAnG;AACA+G,kBAAQ,CAACrI,UAAT,GAAuB+H,UAAU,CAACtB,qBAAqB,CAACnF,KAAtB,GAA8BmF,qBAAqB,CAACnF,KAApD,GAA4D,GAA7D,CAAV,GAA8EyG,UAAU,CAACvB,uBAAuB,CAAClF,KAAxB,GAAgCkF,uBAAuB,CAAClF,KAAxD,GAAgE,GAAjE,CAA/G;AACA,iBAAO+G,QAAP;AACD;;;;;;;uBAplBUxH,wD,EAAwD,qI,EAAA,4J,EAAA,iL;AAAA,K;;;aAAxDA,wD;AAAwD,eAAxDA,wDAAwD,K;AAAA,kBAFvD;;;;;sEAEDA,wD,EAAwD;cAHpE,wDAGoE;eAHzD;AACVyH,oBAAU,EAAE;AADF,S;AAGyD,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBrE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,4G,CAAA;AAIA;;;;;;;ACFQ;;AAA6D;AAAA;;AAAA;;AAAA,iCAAqB,IAArB;AAAyB,SAAzB;;AAGzD;;AACI;;AACI;;AAGI;AAAA;;AAAA;;AAAA;AAAA,WAAuC,OAAvC,EAAuC;AAAA;;AAAA;;AAAA;AAAA,SAAvC,EAAuC,OAAvC,EAAuC;AAAA;;AAAA;;AAAA;AAAA,SAAvC;;AACJ;;AACJ;;AACA;;AACI;;AAKJ;;AACJ;;AACJ;;;;;;AAjBI;;AADA;;AAI4B;;AAAA,8GAAqC,eAArC,EAAqC,oDAArC,EAAqC,MAArC,EAAqC,iCAArC,EAAqC,SAArC,EAAqC,qCAArC,EAAqC,aAArC,EAAqC,kBAArC,EAAqC,gBAArC,EAAqC,qBAArC;;AAOY;;AAAA,4GAAmC,aAAnC,EAAmC,kBAAnC,EAAmC,gBAAnC,EAAmC,uBAAnC,EAAmC,cAAnC,EAAmC,mBAAnC,EAAmC,gBAAnC,EAAmC,qBAAnC,EAAmC,cAAnC,EAAmC,mBAAnC,EAAmC,gBAAnC,EAAmC,qBAAnC;;;;QDoBvCC,gD;AA8BX,gEACUC,kBADV,EAEUC,WAFV,EAGUC,2BAHV,EAIUC,iCAJV,EAKUC,YALV,EAMU7H,iBANV,EAOUC,wBAPV,EAQU6H,8CARV,EASUC,wDATV,EAUUhI,aAVV,EAWUiI,wBAXV,EAW4D;AAAA;;AAAA;;AAVlD,aAAAP,kBAAA,GAAAA,kBAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,2BAAA,GAAAA,2BAAA;AACA,aAAAC,iCAAA,GAAAA,iCAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAA7H,iBAAA,GAAAA,iBAAA;AACA,aAAAC,wBAAA,GAAAA,wBAAA;AACA,aAAA6H,8CAAA,GAAAA,8CAAA;AACA,aAAAC,wDAAA,GAAAA,wDAAA;AACA,aAAAhI,aAAA,GAAAA,aAAA;AACA,aAAAiI,wBAAA,GAAAA,wBAAA;AAtCV,aAAAC,qBAAA,GAA4C,EAA5C;AACA,aAAAC,WAAA,GAAc,qEAAd;AACA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,mBAAA,GAA8B,KAA9B;AACA,aAAAC,YAAA,GAA6B,EAA7B;AACA,aAAAC,cAAA,GAA+B,EAA/B;AACA,aAAAC,YAAA,GAA6B,EAA7B;AACA,aAAAC,cAAA,GAA+B,EAA/B;AACA,aAAAC,cAAA,GAA0B,KAA1B,CA6B4D,CAG1D;;AACA,YAAMC,mBAAmB,GAAG,KAAKhB,2BAAL,CAAiCiB,0BAA7D,CAJ0D,CAM1D;;AACA,YAAID,mBAAJ,EAAyB;AACvB,eAAKE,qBAAL,CAA2BF,mBAA3B;AACD,SAFD,MAGK;AACH,eAAKG,qBAAL,GAA6B,KAAKnB,2BAAL,CAAiCoB,YAAjC,CAA8CC,SAA9C,CAAwD,UAACC,CAAD,EAAkB;AACrG,gBAAIA,CAAJ,EAAO;AACL,oBAAI,CAACJ,qBAAL,CAA2BI,CAA3B;AACD;AACF,WAJ4B,CAA7B;AAKD,SAhByD,CAiB1D;;;AACA,aAAKC,mCAAL,GAlB0D,CAoB1D;;AACA,aAAKC,YAAL,GArB0D,CAuB1D;;AACA,aAAKnB,wBAAL,CAA8BoB,KAA9B,CAAoCJ,SAApC,CAA8C,UAACK,CAAD,EAAY;AACxD,cAAIA,CAAJ,EAAO;AACL,kBAAI,CAACC,OAAL,CAAaD,CAAb;AACD;AACF,SAJD;AAKD;;;;AAED;8CAC8BE,e,EAA4B;AACxD;AACA,cAAMC,gCAAgC,GAAG,MAAH,OAAG,CAAH,EAAG,EAAKD,eAAe,CAACE,WAAhB,CAA4B,CAA5B,CAAL,CAAzC;AACA,eAAKC,gBAAL,GAAwBF,gCAAxB,CAHwD,CAIxD;;AACA,eAAK5B,iCAAL,CAAuC+B,cAAvC,CAAsDH,gCAAtD,EALwD,CAMxD;;AACA,eAAKI,UAAL,GAPwD,CAQxD;;AACA,eAAKC,cAAL,CAAoB,CAAC,KAAKH,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAzD;AACA,eAAKwJ,mBAAL;AACD,S,CAED;;;;mCACQ;AACN,eAAKC,OAAL;AACA,eAAK7B,WAAL,GAAmB,KAAnB;AACA,eAAK8B,cAAL,GAAsB,EAAtB;AACA,eAAKF,mBAAL;AACD,S,CAED;;;;uCACe;AAAA;;AACb;AACA,eAAKG,uBAAL,GAFa,CAGb;;AACA,eAAKC,sBAAL,GAA8B,KAAKnK,iBAAL,CAAuBoK,KAAvB,CAA6BpB,SAA7B,CAAuC,UAACC,CAAD,EAA0B;AAC7F,gBAAIA,CAAJ,EAAO;AACL;AACA,kBAAMoB,aAAa,GAAG,OAAI,CAACtK,aAAL,CAAmBuK,kCAAnB,CAAuD,OAAI,CAACZ,gBAAL,IAAyB,OAAI,CAACA,gBAAL,CAAsBhJ,IAA/C,GAAsD,OAAI,CAACgJ,gBAAL,CAAsBhJ,IAA5E,GAAmF,IAA1I,EAAiJ,OAAI,CAAC6J,0BAAtJ,EAAkLtB,CAAlL,CAAtB;;AACA,kBAAIoB,aAAJ,EAAmB;AACjB,uBAAI,CAACE,0BAAL,GAAkCF,aAAlC;AACD,eALI,CAOL;;;AACA,qBAAI,CAACG,QAAL;AACD;AACF,WAX6B,CAA9B;AAYD,S,CAED;;;;8DACsC;AAAA;;AACpC;AACA,eAAKC,6BAAL,GAAqC,KAAKxK,wBAAL,CAA8ByK,YAA9B,CAA2C1B,SAA3C,CAAqD,UAACC,CAAD,EAA0B;AAClH,gBAAIA,CAAJ,EAAO;AACL,qBAAI,CAACiB,uBAAL;AACD;AACF,WAJoC,CAArC;AAKD,S,CAED;;;;wCACgBnI,S,EAAmB;AACjC,cAAI,KAAKwI,0BAAL,IACC,KAAKA,0BAAL,CAAgCxF,QAAhC,CAAyChD,SAAzC,CADD,IAEC,KAAKwI,0BAAL,CAAgCxF,QAAhC,CAAyChD,SAAzC,EAAoDxB,KAFzD,EAEgE;AAC9D,mBAAO,CAAC,CAAC,KAAKgK,0BAAL,CAAgCxF,QAAhC,CAAyChD,SAAzC,EAAoDxB,KAAtD,EAA6DmD,OAA7D,CAAqE,KAAK1D,iBAAL,CAAuB2B,mBAAvB,CAA2CwB,EAA3C,KAAkD,gEAAMmB,WAAxD,GAAsE,CAAtE,GAA0E,CAA/I,CAAP;AACD;AACF,S,CAED;;;;qCACa;AAAA;;AACX;AACA,cAAMqG,gBAAgB,GAAG,KAAKjB,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDC,GAAvD,CAA2D,UAAAC,GAAG;AAAA,mBACrFA,GAAG,CAACC,mBAAJ,CAAwBF,GAAxB,CAA4B,UAACG,MAAD,EAA6B;AACvD,kBAAIC,YAAY,GAAuB,EAAvC;;AACA,mBAAK,IAAIlG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGiG,MAAM,CAACE,aAAP,CAAqBlG,MAAjD,EAAyDD,KAAK,EAA9D,EAAkE;AAChE;AACA,oBAAI,OAAI,CAACuF,0BAAT,EAAqC;AACnC,sBAAMrF,EAAE,GAAG,OAAI,CAACqF,0BAAL,CAAgCnK,GAAhC,CAAoC6K,MAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BoG,GAAhE,CAAX;;AACA,sBAAIlG,EAAJ,EAAQ;AACN+F,0BAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BzE,KAA5B,GAAoC2E,EAAE,CAAC3E,KAAvC;AACD;AACF,iBAP+D,CAQhE;;;AACA,oBAAI0K,MAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BqG,IAAhC,EAAsC;AACpCH,8BAAY,CAAC/E,IAAb,CAAkB8E,MAAM,CAACE,aAAP,CAAqBnG,KAArB,CAAlB;AACD;AACF;;AACD,qBAAOkG,YAAP;AACD,aAhBD,CADqF;AAAA,WAA9D,CAAzB;AAmBA,cAAMI,iBAAiB,GAAG,KAAK5B,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDC,GAAxD,CAA4D,UAAAC,GAAG;AAAA,mBACvFA,GAAG,CAACC,mBAAJ,CAAwBF,GAAxB,CAA4B,UAACG,MAAD,EAA6B;AACvD,kBAAIC,YAAY,GAAuB,EAAvC;;AACA,mBAAK,IAAIlG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGiG,MAAM,CAACE,aAAP,CAAqBlG,MAAjD,EAAyDD,KAAK,EAA9D,EAAkE;AAChE;AACA,oBAAI,OAAI,CAACuF,0BAAT,EAAqC;AACnC,sBAAMrF,EAAE,GAAG,OAAI,CAACqF,0BAAL,CAAgCnK,GAAhC,CAAoC6K,MAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BoG,GAAhE,CAAX;;AACA,sBAAIlG,EAAJ,EAAQ;AACN+F,0BAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BzE,KAA5B,GAAoC2E,EAAE,CAAC3E,KAAvC;AACD;AACF,iBAP+D,CAQhE;;;AACA,oBAAI0K,MAAM,CAACE,aAAP,CAAqBnG,KAArB,EAA4BqG,IAAhC,EAAsC;AACpCH,8BAAY,CAAC/E,IAAb,CAAkB8E,MAAM,CAACE,aAAP,CAAqBnG,KAArB,CAAlB;AACD;AACF;;AACD,qBAAOkG,YAAP;AACD,aAhBD,CADuF;AAAA,WAA/D,CAA1B,CArBW,CAwCX;;AACA,eAAKjD,qBAAL,GAA6B,EAA7B,CAzCW,CA0CX;;AACA,eAAKA,qBAAL,CAA2B9B,IAA3B,CAAgC,KAAKuD,gBAAL,CAAsBI,aAAtD;AACA,eAAK7B,qBAAL,gCAAiC,KAAKA,qBAAtC,sBAAgE,KAAKR,kBAAL,CAAwB+D,OAAxB,CAAgCb,gBAAhC,CAAhE;AACA,eAAK1C,qBAAL,gCAAiC,KAAKA,qBAAtC,sBAAgE,KAAKR,kBAAL,CAAwB+D,OAAxB,CAAgCF,iBAAhC,CAAhE,GA7CW,CA8CX;;AACA,cAAMG,gBAAgB,GAAuB,KAAKxD,qBAAL,CAA2ByD,MAA3B,CAAkC,UAAAxG,EAAE,EAAI;AACnF;AACA,gBAAIA,EAAE,IAAIA,EAAE,CAACkC,IAAH,KAAY,OAAI,CAACc,WAAL,CAAiByD,KAAnC,IAA4CzG,EAAE,CAACkC,IAAH,KAAY,OAAI,CAACc,WAAL,CAAiB0D,MAA7E,EAAqF;AACnF,qBAAO1G,EAAP;AACD;AACF,WAL4C,CAA7C;AAOA,eAAKqF,0BAAL,GAAkC,KAAK9C,kBAAL,CAAwBoE,WAAxB,CAAoCJ,gBAApC,CAAlC,CAtDW,CAuDX;AACA;;AACA,cAAMK,WAAW,GAAkB,EAAnC,CAzDW,CA0DX;;AACA,cAAIC,0BAA0B,GAAa,KAAKrC,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAAtE;;AAEA,eAAK,IAAIhH,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG+G,0BAA0B,CAAC9G,MAAvD,EAA+DD,KAAK,EAApE,EAAwE;AACtE,gBAAMiH,iBAAiB,GAAGF,0BAA0B,CAAC/G,KAAD,CAApD;;AACA,oBAAQiH,iBAAR;AACE,mBAAK,2GAAiDC,+BAAtD;AACEJ,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8DoE,iDAA9D,EAAjB;AACA;;AACF,mBAAK,2GAAiDC,gCAAtD;AACEN,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8DsE,8BAA9D,EAAjB;AACA;;AACF,mBAAK,2GAAiDC,uDAAtD;AACER,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8DwE,kCAA9D,EAAjB;AACA;;AACF,mBAAK,2GAAiDC,yBAAtD;AACEV,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8D0E,0BAA9D,CAAyF,KAAK/C,gBAAL,CAAsBI,aAAtB,CAAoCsB,GAA7H,CAAjB;AACA;;AACF,mBAAK,2GAAiDsB,oBAAtD;AACE;AACA,oBAAK,CAAC,KAAKhD,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtC,KAAiD,2EAAiBU,aAAtE,EAAqF;AACnF6K,6BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8D4E,mBAA9D,EAAjB;AACD;;AACD;;AACF,mBAAK,2GAAiDC,gCAAtD;AACEd,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8D8E,6BAA9D,EAAjB;AACA;;AACF,mBAAK,2GAAiDC,mEAAtD;AACEhB,2BAAW,CAAC3F,IAAZ,CAAiB,KAAK4B,wDAAL,CAA8DgF,4CAA9D,EAAjB;AACA;AAxBJ;AA0BD,WAzFU,CA0FX;;;AACA,eAAKxC,0BAAL,CAAgCyC,aAAhC,CAA8ClB,WAA9C;AACD,S,CAED;;;;kCACU;AACR,eAAKpE,WAAL,CAAiBuF,YAAjB,GAAgCC,IAAhC,CAAqC,8DAArC,EACGlE,SADH,CACa,UAAAmE,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WADd;AAED,S,CAED;;;;mCAC8B;AAAA;;AAAA,cAArBhF,WAAqB,uEAAP,KAAO;AAC5B,eAAK8B,cAAL,GAAsB,EAAtB,CAD4B,CAE5B;;AACA,eAAKmD,oBAAL,GAH4B,CAI5B;;AACA,eAAKC,yBAAL;;AAEA,cAAI,CAAC,KAAK3D,gBAAV,EAA4B;AAC1B;AACD;;AAED,eAAKvB,WAAL,GAAmBA,WAAnB,CAX4B,CAa5B;AACA;;AACA,cAAI,KAAKuB,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAA3B,CAA2CsB,QAA3C,CAAoD,2GAAiDC,4CAArG,CAAJ,EAAwJ;AACtJ,gBAAMC,kDAAkD,GAAG,KAAKzF,wDAAL,CAA8D0F,6CAA9D,CAA4G,KAAKlD,0BAAjH,CAA3D;;AACA,gBAAIiD,kDAAJ,EAAwD;AACtD,mBAAKE,eAAL,CAAqBF,kDAArB;AACD;AACF,WApB2B,CAsB5B;;;AACA,cAAI,KAAK9D,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAA3B,CAA2CsB,QAA3C,CAAoD,2GAAiDK,6DAArG,CAAJ,EAAyK;AACvK,gBAAMlN,qCAAqC,GAAG,KAAKsH,wDAAL,CAA8D6F,0CAA9D,CAAyG,KAAKrD,0BAA9G,CAA9C;;AACA,gBAAI9J,qCAAJ,EAA2C;AACzC,mBAAKiN,eAAL,CAAqBjN,qCAArB;AACD;AACF,WA5B2B,CA8B5B;;;AACA,cAAI,KAAKiJ,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAA3B,CAA2CsB,QAA3C,CAAoD,2GAAiDO,uDAArG,CAAJ,EAAmK;AACjK,gBAAMC,qDAAqD,GAAG,KAAK/F,wDAAL,CAA8DgG,gDAA9D,CAA+G,KAAKxD,0BAApH,CAA9D;;AACA,gBAAIuD,qDAAJ,EAA2D;AACzD,mBAAKJ,eAAL,CAAqBI,qDAArB;AACD;AACF,WApC2B,CAsC5B;;;AACA,cAAK,CAAC,KAAKpE,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtC,KAAiD,2EAAiByN,OAAlE,IAA6E,KAAKtE,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAA3B,CAA2CsB,QAA3C,CAAoD,2GAAiDW,6CAArG,CAAjF,EAAsO;AACpO;AACA,gBAAMC,cAAc,GAAiB,KAAKnG,wDAAL,CAA8DoG,kBAA9D,CAAiF,KAAK5D,0BAAtF,EAAkH,KAAKb,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtJ,CAArC;;AACA,gBAAI2N,cAAc,CAACjJ,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,mBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkJ,cAAc,CAACjJ,MAA3C,EAAmDD,KAAK,EAAxD,EAA4D;AAC1D,qBAAK0I,eAAL,CAAqBQ,cAAc,CAAClJ,KAAD,CAAnC;AACD;AACF;AACF,WA/C2B,CAiD5B;;;AACA,cAAK,CAAC,KAAK0E,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtC,KAAiD,2EAAiByN,OAAlE,IAA6E,KAAKtE,gBAAL,CAAsBhJ,IAAtB,CAA2BsL,eAA3B,CAA2CsB,QAA3C,CAAoD,2GAAiDc,6CAArG,CAAjF,EAAsO;AACpO;AACA,gBAAMC,cAAc,GAAiB,KAAKtG,wDAAL,CAA8DuG,kBAA9D,CAAiF,KAAK/D,0BAAtF,EAAkH,KAAKb,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtJ,CAArC;;AACA,gBAAI8N,cAAc,CAACpJ,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,mBAAK,IAAID,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAGqJ,cAAc,CAACpJ,MAA3C,EAAmDD,MAAK,EAAxD,EAA4D;AAC1D,qBAAK0I,eAAL,CAAqBW,cAAc,CAACrJ,MAAD,CAAnC;AACD;AACF;AACF,WA1D2B,CA4D5B;;;AACA,cAAMuJ,wBAAwB,GAAG,KAAKxG,wDAAL,CAA8DwG,wBAA9D,CAAuF,KAAKhE,0BAA5F,CAAjC;;AACA,cAAIgE,wBAAJ,EAA8B;AAC5B,iBAAKC,iBAAL,CAAuBD,wBAAvB;AACD;;AAED,cAAK,CAAC,KAAK7E,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAtC,KAAiD,2EAAiByN,OAAtE,EAA+E;AAC7E,gBAAMS,oBAAoB,GAAG,KAAK1G,wDAAL,CAA8D0G,oBAA9D,CAAmF,KAAKlE,0BAAxF,EAAoH,KAAKb,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAxJ,CAA7B;AACA,gBAAMmO,oBAAoB,GAAG,KAAK3G,wDAAL,CAA8D2G,oBAA9D,CAAmF,KAAKnE,0BAAxF,EAAoH,KAAKb,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAxJ,CAA7B;;AACA,gBAAIkO,oBAAJ,EAA0B;AACxB,mBAAKD,iBAAL,CAAuBC,oBAAvB;AACD;;AACD,gBAAIC,oBAAJ,EAA0B;AACxB,mBAAKF,iBAAL,CAAuBE,oBAAvB;AACD;AACF,WA3E2B,CA6E5B;;;AACA,cAAI,KAAKnE,0BAAL,CAAgCoE,OAApC,EAA6C;AAC3C;AACD,WAhF2B,CAkF5B;;;AACA,eAAK7G,8CAAL,CAAoD8G,WAApD,CACE,KAAKrE,0BADP,EAEE,KAAKb,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAFtC,EAGE,KAAKP,iBAAL,CAAuB2B,mBAHzB,EAIE,KAAK1B,wBAAL,CAA8B6C,0BAJhC,EAKEkG,SALF,CAKY,UAAC6F,IAAD,EAAmD;AAC7D,gBAAIA,IAAI,CAACC,IAAT,EAAe;AAEb;AACA;AACA,qBAAI,CAAC7E,cAAL,GAAsBpF,MAAM,CAACkK,MAAP,CAAc,EAAd,EAAkBF,IAAI,CAACC,IAAvB,CAAtB;;AAEA,kBAAID,IAAI,CAACC,IAAL,CAAUxO,KAAV,IAAmBuO,IAAI,CAACC,IAAL,CAAUxO,KAAV,CAAgB2E,MAAhB,GAAyB,CAAhD,EAAmD;AACjD,uBAAI,CAACuD,YAAL,GAAoBqG,IAAI,CAACC,IAAL,CAAUxO,KAAV,CAAgB0O,KAAhB,EAApB;AACD;;AAED,kBAAIH,IAAI,CAACC,IAAL,CAAU/N,OAAV,IAAqB8N,IAAI,CAACC,IAAL,CAAU/N,OAAV,CAAkBkE,MAAlB,GAA2B,CAApD,EAAuD;AACrD,uBAAI,CAACwD,cAAL,GAAsBoG,IAAI,CAACC,IAAL,CAAU/N,OAAhC;AACD;;AAED,kBAAMkO,gBAAgB,GAAGpK,MAAM,CAACC,IAAP,CAAY+J,IAAI,CAACC,IAAjB,CAAzB,CAda,CAgBb;;AACA,kBAAI,2EAAiBd,OAAjB,KAA6B,CAAE,OAAI,CAACtE,gBAAL,CAAsBI,aAAtB,CAAoCvJ,KAAvE,EAA+E;AAE7E;AACA;AACA,qBAAK,IAAI2O,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,OAAI,CAACxF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuD5F,MAAzF,EAAiGiK,QAAQ,EAAzG,EAA6G;AAC3G;AACA,uBAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,OAAI,CAACzF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqF/F,MAA7H,EAAqIkK,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,yBAAK,IAAIC,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,OAAI,CAAC1F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHlG,MAA1J,EAAkKmK,YAAY,EAA9K,EAAkL;AAChL;AACA,0BAAMC,WAAW,GAAG,OAAI,CAAC3F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,CAApB,CAFgL,CAGhL;AACA;;AACA,2BAAK,IAAIE,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGL,gBAAgB,CAAChK,MAAnD,EAA2DqK,QAAQ,EAAnE,EAAuE;AACrE,4BAAID,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DP,gBAAgB,CAACK,QAAD,CAAhB,KAA+BD,WAAW,CAACjE,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAAC1B,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,EAA8HzD,KAA9H,GAAsIkD,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,QAAD,CAA1B,IAAwCT,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,QAAD,CAA1B,EAAsC5L,OAAtC,CAA+C,OAAI,CAAC1D,iBAAL,CAAuB2B,mBAAvB,CAA2CwB,EAA3C,KAAkD,gEAAMkB,IAAzD,GAAiE,CAAjE,GAAqE,CAAnH,CAAxC,GAAgKwK,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,QAAD,CAA1B,CAAtS;AACD;AACF;AACF;AACF;AACF,iBAtB4E,CAwB7E;AACA;;;AACA,qBAAK,IAAIJ,SAAQ,GAAG,CAApB,EAAuBA,SAAQ,GAAG,OAAI,CAACxF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwD5F,MAA1F,EAAkGiK,SAAQ,EAA1G,EAA8G;AAC5G;AACA,uBAAK,IAAIC,YAAW,GAAG,CAAvB,EAA0BA,YAAW,GAAG,OAAI,CAACzF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,SAAxD,EAAkElE,mBAAlE,CAAsF/F,MAA9H,EAAsIkK,YAAW,EAAjJ,EAAqJ;AACnJ;AACA,yBAAK,IAAIC,aAAY,GAAG,CAAxB,EAA2BA,aAAY,GAAG,OAAI,CAAC1F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,SAAxD,EAAkElE,mBAAlE,CAAsFmE,YAAtF,EAAmGhE,aAAnG,CAAiHlG,MAA3J,EAAmKmK,aAAY,EAA/K,EAAmL;AACjL;AACA,0BAAMC,YAAW,GAAG,OAAI,CAAC3F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,SAAxD,EAAkElE,mBAAlE,CAAsFmE,YAAtF,EAAmGhE,aAAnG,CAAiHiE,aAAjH,CAApB,CAFiL,CAGjL;AACA;;AACA,2BAAK,IAAIE,SAAQ,GAAG,CAApB,EAAuBA,SAAQ,GAAGL,gBAAgB,CAAChK,MAAnD,EAA2DqK,SAAQ,EAAnE,EAAuE;AACrE,4BAAID,YAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DP,gBAAgB,CAACK,SAAD,CAAhB,KAA+BD,YAAW,CAACjE,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAAC1B,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,SAAxD,EAAkElE,mBAAlE,CAAsFmE,YAAtF,EAAmGhE,aAAnG,CAAiHiE,aAAjH,EAA+HzD,KAA/H,GAAuIkD,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,SAAD,CAA1B,IAAwCT,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,SAAD,CAA1B,EAAsC5L,OAAtC,CAA+C,OAAI,CAAC1D,iBAAL,CAAuB2B,mBAAvB,CAA2CwB,EAA3C,KAAkD,gEAAMkB,IAAzD,GAAiE,CAAjE,GAAqE,CAAnH,CAAxC,GAAgKwK,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,SAAD,CAA1B,CAAvS;AACD;AACF;AACF;AACF;AACF;AACF,eA9DY,CAgEb;AACA;;;AACA,mBAAK,IAAIG,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,OAAI,CAAC/F,gBAAL,CAAsBgG,WAAtB,CAAkCzK,MAA1E,EAAkFwK,WAAW,EAA7F,EAAiG;AAE/F;AACA,oBAAIA,WAAW,GAAG,CAAlB,EAAqB;AACnB,sBAAME,eAAe,GAAK,CAAC,OAAI,CAAC1P,wBAAL,CAA8B6C,0BAA9B,CAAyDK,EAA3D,KAAmE,sEAAYD,UAAhF,GAA8F,oFAA0B0M,iBAAxH,GAA4I,iFAAuBA,iBAA3L;AAEA,sBAAMC,uBAAuB,GAAG,OAAI,CAACtF,0BAAL,CAAgCxF,QAAhC,CAAyC,yBAAzC,CAAhC;AACA,sBAAM+K,2BAA2B,GAAG,OAAI,CAACvF,0BAAL,CAAgCxF,QAAhC,CAAyC,6BAAzC,CAApC;AACA,sBAAMgL,uBAAuB,GAAG,OAAI,CAACxF,0BAAL,CAAgCxF,QAAhC,CAAyC,yBAAzC,CAAhC,CALmB,CAOnB;;AACA,sBAAI0K,WAAW,KAAK,CAAhB,IAAqBI,uBAArB,IAAgDA,uBAAuB,CAACtP,KAA5E,EAAmF;AACjF,2BAAI,CAACmJ,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3B,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CO,oBAA/C,aAAyEH,uBAAuB,CAACtP,KAAjG,SAAyGoP,eAAzG;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAAC/F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,KAAtD;AACD,mBAdkB,CAgBnB;;;AACA,sBAAIoE,WAAW,KAAK,CAAhB,IAAqBK,2BAArB,IAAoDA,2BAA2B,CAACvP,KAApF,EAA2F;AACzF,2BAAI,CAACmJ,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3B,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CO,oBAA/C,aAAyEF,2BAA2B,CAACvP,KAArG,SAA6GoP,eAA7G;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAAC/F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,KAAtD;AACD,mBAvBkB,CAyBnB;;;AACA,sBAAIoE,WAAW,KAAK,CAAhB,IAAqBM,uBAArB,IAAgDA,uBAAuB,CAACxP,KAA5E,EAAmF;AACjF,2BAAI,CAACmJ,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,IAAtD;AACA,2BAAI,CAAC3B,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CO,oBAA/C,aAAyED,uBAAuB,CAACxP,KAAjG,SAAyGoP,eAAzG;AACD,mBAHD,MAIK,IAAIF,WAAW,KAAK,CAApB,EAAuB;AAC1B,2BAAI,CAAC/F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+CpE,IAA/C,GAAsD,KAAtD;AACD;AACF,iBApC8F,CAsC/F;;;AACA,qBAAK,IAAI6D,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,OAAI,CAACxF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmD9F,MAArF,EAA6FiK,UAAQ,EAArG,EAAyG;AACvG;AACA,uBAAK,IAAIC,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,OAAI,CAACzF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiF/F,MAAzH,EAAiIkK,aAAW,EAA5I,EAAgJ;AAC9I;AACA,yBAAK,IAAIC,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,OAAI,CAAC1F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GlG,MAAtJ,EAA8JmK,cAAY,EAA1K,EAA8K;AAC5K;AACA,0BAAMC,aAAW,GAAG,OAAI,CAAC3F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,CAApB,CAF4K,CAG5K;AACA;;AACA,2BAAK,IAAIE,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAGL,gBAAgB,CAAChK,MAAnD,EAA2DqK,UAAQ,EAAnE,EAAuE;AACrE,4BAAID,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAAxC,IAA4DP,gBAAgB,CAACK,UAAD,CAAhB,KAA+BD,aAAW,CAACjE,GAA3G,EAAgH;AAC9G;AACA;AACA,iCAAI,CAAC1B,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,EAA0HzD,KAA1H,aAAsIkD,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,UAAD,CAA1B,MAA0C,IAA1C,IAAkDT,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,UAAD,CAA1B,MAA0CW,SAA5F,IAAyG,CAAC1J,KAAK,CAAE,CAACsI,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,UAAD,CAA1B,CAAH,CAAhH,GAA8JtI,UAAU,CAAC6H,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,UAAD,CAA1B,CAAD,CAAV,CAAkD5L,OAAlD,CAA0D,CAA1D,CAA9J,GAA6NmL,IAAI,CAACC,IAAL,CAAUG,gBAAgB,CAACK,UAAD,CAA1B,CAAlW;AACD;AACF;AACF;AACF;AACF;AACF,eA5HY,CA8Hb;;;AACA,qBAAI,CAACY,OAAL;AACD;AACF,WAvID,EAuIG,UAAC5P,KAAD,EAAgB;AACjB;AACA,mBAAI,CAAC4P,OAAL,GAFiB,CAGjB;;;AACAC,mBAAO,CAACC,GAAR,CAAY9P,KAAZ;AACD,WA5ID;AA6ID,S,CAED;;;;uCACe+P,c,EAAwB;AACrC;AACA,eAAKzI,iCAAL,CAAuC0I,+BAAvC,CAAuED,cAAvE,EAFqC,CAGrC;;AACA,eAAKlI,WAAL,GAAmB,KAAnB,CAJqC,CAKrC;;AACA,eAAKiF,oBAAL,GANqC,CAOrC;;AACA,eAAKC,yBAAL,GARqC,CASrC;;AACA,eAAKzD,UAAL;AACA,eAAKG,mBAAL;AACD,S,CAED;;;;wCACgBzJ,K,EAAmB;AACjC,cAAI,KAAKgI,YAAL,CAAkBrD,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,iBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKsD,YAAL,CAAkBrD,MAA9C,EAAsDD,KAAK,EAA3D,EAA+D;AAC7D,kBAAI,KAAKsD,YAAL,CAAkBtD,KAAlB,EAAyBiC,KAAzB,IAAkC,KAAKqB,YAAL,CAAkBtD,KAAlB,EAAyBiC,KAAzB,KAAmC3G,KAAK,CAAC2G,KAA/E,EAAsF;AACpF,qBAAKqB,YAAL,CAAkBnC,IAAlB,CAAuB7F,KAAvB;AACD;AACF;AACF,WAND,MAOK;AACH,iBAAKgI,YAAL,CAAkBnC,IAAlB,CAAuB7F,KAAvB;AACD;;AAED,eAAKgI,YAAL,GAAoB,KAAKA,YAAL,CAAkB0G,KAAlB,EAApB;AACD,S,CAED;;;;0CACkBjO,O,EAAqB;AACrC,cAAI,KAAKwH,cAAL,CAAoBtD,MAApB,GAA6B,CAAjC,EAAoC;AAClC,iBAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKuD,cAAL,CAAoBtD,MAAhD,EAAwDD,KAAK,EAA7D,EAAiE;AAC/D,kBAAI,KAAKuD,cAAL,CAAoBvD,KAApB,KAA8B,KAAKuD,cAAL,CAAoBvD,KAApB,EAA2BiC,KAA3B,KAAqClG,OAAO,CAACkG,KAA/E,EAAsF;AACpF,qBAAKsB,cAAL,CAAoBpC,IAApB,CAAyBpF,OAAzB;AACD;AACF;AACF,WAND,MAOK;AACH,iBAAKwH,cAAL,CAAoBpC,IAApB,CAAyBpF,OAAzB;AACD;;AAED,eAAKwH,cAAL,GAAsB,KAAKA,cAAL,CAAoByG,KAApB,EAAtB;AACD,S,CAED;;;;+CACuB;AACrB,eAAK1G,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACD,S,CAED;;;;oDAC4B;AAC1B,eAAKwB,cAAL,GAAsB,EAAtB;;AAEA,cAAI,CAAC,KAAKP,gBAAV,EAA4B;AAC1B;AACD,WALyB,CAO1B;AACA;;;AACA,eAAK,IAAIwF,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,KAAKxF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuD5F,MAAzF,EAAiGiK,QAAQ,EAAzG,EAA6G;AAC3G;AACA,iBAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKzF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqF/F,MAA7H,EAAqIkK,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,mBAAK,IAAIC,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,KAAK1F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHlG,MAA1J,EAAkKmK,YAAY,EAA9K,EAAkL;AAChL;AACA,oBAAMC,WAAW,GAAG,KAAK3F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,CAApB;;AACA,oBAAIC,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAK9F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,EAA8HzD,KAA9H,GAAsI,EAAtI;AACD;AACF;AACF;AACF,WAvByB,CAyB1B;AACA;;;AACA,eAAK,IAAIuD,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKxF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwD5F,MAA1F,EAAkGiK,UAAQ,EAA1G,EAA8G;AAC5G;AACA,iBAAK,IAAIC,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsF/F,MAA9H,EAAsIkK,aAAW,EAAjJ,EAAqJ;AACnJ;AACA,mBAAK,IAAIC,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK1F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHlG,MAA3J,EAAmKmK,cAAY,EAA/K,EAAmL;AACjL;AACA,oBAAMC,aAAW,GAAG,KAAK3F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHiE,cAAjH,CAApB;;AACA,oBAAIC,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAK9F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHiE,cAAjH,EAA+HzD,KAA/H,GAAuI,EAAvI;AACD;AACF;AACF;AACF,WAzCyB,CA2C1B;AACA;;;AACA,eAAK,IAAI8D,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAK/F,gBAAL,CAAsBgG,WAAtB,CAAkCzK,MAA1E,EAAkFwK,WAAW,EAA7F,EAAiG;AAC/F;AACA,iBAAK,IAAIP,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKxF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmD9F,MAArF,EAA6FiK,UAAQ,EAArG,EAAyG;AACvG;AACA,mBAAK,IAAIC,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiF/F,MAAzH,EAAiIkK,aAAW,EAA5I,EAAgJ;AAC9I;AACA,qBAAK,IAAIC,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK1F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GlG,MAAtJ,EAA8JmK,cAAY,EAA1K,EAA8K;AAC5K;AACA,sBAAMC,aAAW,GAAG,KAAK3F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,CAApB;;AACA,sBAAIC,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,yBAAK9F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,EAA0HzD,KAA1H,GAAkI,IAAlI;AACD;AACF;AACF;AACF;AACF;AACF,S,CAED;;;;kCACU;AACR,cAAI,CAAC,KAAKpB,0BAAV,EAAsC;AACpC;AACD,WAHO,CAKR;;;AACA,cAAM3F,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKyF,0BAAL,CAAgCxF,QAA5C,CAAxB,CANQ,CAOR;;AACA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,eAAe,CAACK,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;AAC3D;AACA,gBAAI,KAAK0E,gBAAL,CAAsBI,aAAtB,CAAoCsB,GAApC,KAA4CxG,eAAe,CAACI,KAAD,CAA/D,EAAwE;AACtE;AACD;;AAED,gBAAMuL,uBAAuB,GAAG,KAAK3I,iCAAL,CAAuC4I,8CAAvC,CAAsF5L,eAAe,CAACI,KAAD,CAArG,CAAhC;;AACA,gBAAIuL,uBAAJ,EAA6B;AAC3B,mBAAKhG,0BAAL,CAAgCxF,QAAhC,CAAyCH,eAAe,CAACI,KAAD,CAAxD,EAAiEyL,QAAjE,CAA0EF,uBAA1E;AACD,aAFD,MAGK;AACH,mBAAKhG,0BAAL,CAAgCxF,QAAhC,CAAyCH,eAAe,CAACI,KAAD,CAAxD,EAAiEyL,QAAjE,CAA0E,EAA1E;AACD;AACF;;AAED,eAAKvG,uBAAL;AACD,S,CAED;AACA;;;;kDAC0B;AACxB;AACA,eAAK/B,WAAL,GAAmB,KAAnB,CAFwB,CAIxB;;AACA,eAAKG,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKC,cAAL,GAAsB,EAAtB;;AAEA,cAAI,CAAC,KAAKiB,gBAAV,EAA4B;AAC1B;AACD,WAZuB,CAcxB;AACA;AACA;AACA;;;AACA,eAAK,IAAIwF,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,KAAKxF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuD5F,MAAzF,EAAiGiK,QAAQ,EAAzG,EAA6G;AAC3G;AACA,iBAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAKzF,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqF/F,MAA7H,EAAqIkK,WAAW,EAAhJ,EAAoJ;AAClJ;AACA,mBAAK,IAAIC,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAG,KAAK1F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHlG,MAA1J,EAAkKmK,YAAY,EAA9K,EAAkL;AAChL;AACA,oBAAMC,WAAW,GAAG,KAAK3F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,CAApB;;AACA,oBAAIC,WAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAK9F,gBAAL,CAAsBhJ,IAAtB,CAA2BkK,WAA3B,CAAuCC,eAAvC,CAAuDqE,QAAvD,EAAiElE,mBAAjE,CAAqFmE,WAArF,EAAkGhE,aAAlG,CAAgHiE,YAAhH,EAA8HzD,KAA9H,GAAsI,EAAtI;AACD;AACF;AACF;AACF,WAhCuB,CAkCxB;AACA;;;AACA,eAAK,IAAIuD,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKxF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwD5F,MAA1F,EAAkGiK,UAAQ,EAA1G,EAA8G;AAC5G;AACA,iBAAK,IAAIC,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzF,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsF/F,MAA9H,EAAsIkK,aAAW,EAAjJ,EAAqJ;AACnJ;AACA,mBAAK,IAAIC,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK1F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHlG,MAA3J,EAAmKmK,cAAY,EAA/K,EAAmL;AACjL;AACA,oBAAMC,aAAW,GAAG,KAAK3F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHiE,cAAjH,CAApB,CAFiL,CAGjL;;AACA,oBAAIC,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,uBAAK9F,gBAAL,CAAsBhJ,IAAtB,CAA2B6K,YAA3B,CAAwCV,eAAxC,CAAwDqE,UAAxD,EAAkElE,mBAAlE,CAAsFmE,aAAtF,EAAmGhE,aAAnG,CAAiHiE,cAAjH,EAA+HzD,KAA/H,GAAuI,EAAvI;AACD;AACF;AACF;AACF,WAnDuB,CAqDxB;AACA;;;AACA,eAAK,IAAI8D,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAG,KAAK/F,gBAAL,CAAsBgG,WAAtB,CAAkCzK,MAA1E,EAAkFwK,WAAW,EAA7F,EAAiG;AAC/F;AACA,iBAAK,IAAIP,UAAQ,GAAG,CAApB,EAAuBA,UAAQ,GAAG,KAAKxF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmD9F,MAArF,EAA6FiK,UAAQ,EAArG,EAAyG;AACvG;AACA,mBAAK,IAAIC,aAAW,GAAG,CAAvB,EAA0BA,aAAW,GAAG,KAAKzF,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiF/F,MAAzH,EAAiIkK,aAAW,EAA5I,EAAgJ;AAC9I;AACA,qBAAK,IAAIC,cAAY,GAAG,CAAxB,EAA2BA,cAAY,GAAG,KAAK1F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GlG,MAAtJ,EAA8JmK,cAAY,EAA1K,EAA8K;AAC5K;AACA,sBAAMC,aAAW,GAAG,KAAK3F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,CAApB,CAF4K,CAG5K;;AACA,sBAAIC,aAAW,CAACE,QAAZ,KAAyB,yEAAeC,gBAA5C,EAA8D;AAC5D;AACA;AACA,yBAAK9F,gBAAL,CAAsBgG,WAAtB,CAAkCD,WAAlC,EAA+C1E,GAA/C,CAAmDmE,UAAnD,EAA6DlE,mBAA7D,CAAiFmE,aAAjF,EAA8FhE,aAA9F,CAA4GiE,cAA5G,EAA0HzD,KAA1H;AACD,mBAR2K,CAS5K;;AACD;AACF;AACF;AACF,WA1EuB,CA4ExB;;;AACA,eAAK1B,cAAL,GAAsB,EAAtB;AACD,S,CAED;;;;kCACU;AACR,eAAKpC,YAAL,CAAkB6I,WAAlB,CAA8B,gBAA9B;AACD,S,CAED;;;;gCACQC,c,EAAqB;AAC3B,cAAIA,cAAJ,EAAoB;AAClB,iBAAKpG,0BAAL,CAAgCqG,UAAhC,CAA2CD,cAA3C,EADkB,CAElB;;AACA,gBAAME,qBAAqB,GAAG,KAAKtG,0BAAL,CAAgCnK,GAAhC,CAAoC,oBAApC,CAA9B;;AACA,gBAAIyQ,qBAAJ,EAA2B;AACzB,kBAAMC,GAAG,GAAG,KAAK/Q,aAAL,CAAmBgR,qBAAnB,CAAyC,oBAAzC,CAAZ;AACA,kBAAMC,CAAC,GAAGF,GAAG,CAACG,SAAJ,CAAc,UAACC,CAAD,EAAO;AAC7B,uBAAOA,CAAC,CAAC3Q,KAAF,CAAQ4C,EAAR,KAAewN,cAAc,CAAC,oBAAD,CAAd,CAAqCxN,EAA3D;AACD,eAFS,CAAV;;AAGA,kBAAI6N,CAAC,GAAG,CAAC,CAAT,EAAY;AACVH,qCAAqB,CAACJ,QAAtB,CAA+BK,GAAG,CAACE,CAAD,CAAH,CAAOzQ,KAAtC;AACD;AACF;AACF;AACF,S,CAED;;;;8CACsB;AACpB,cAAI,KAAKmJ,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBvG,EAAnD,EAAuD;AACrD,iBAAKuF,cAAL,GAAuB,KAAK3I,aAAL,CAAmBoR,qBAAnB,CAAyC,CAAC,KAAKzH,gBAAL,CAAsBvG,EAAhE,CAAD,GAAwE,IAAxE,GAA+E,KAArG;AACD,WAFD,MAGK;AACH,iBAAKuF,cAAL,GAAsB,KAAtB;AACD;AACF,S,CAED;;;;sCACW;AACT,cAAI,KAAKI,qBAAT,EAAgC;AAC9B,iBAAKA,qBAAL,CAA2BsI,WAA3B;AACD;;AACD,cAAI,KAAK3G,6BAAT,EAAwC;AACtC,iBAAKA,6BAAL,CAAmC2G,WAAnC;AACD;;AAED,cAAI,KAAKjH,sBAAT,EAAiC;AAC/B,iBAAKA,sBAAL,CAA4BiH,WAA5B;AACD;AACF;;;4BA9sBiB;AAChB,iBAAO,KAAKT,cAAZ;AACD,S;0BAEkBU,G,EAAU;AAC3B,eAAKV,cAAL,GAAsBU,GAAtB;AACD;;;;;;;uBAvBU7J,gD,EAAgD,yJ,EAAA,0I,EAAA,6J,EAAA,sN,EAAA,4I,EAAA,qK,EAAA,0L,EAAA,uM,EAAA,4N,EAAA,+I,EAAA,2L;AAAA,K;;;YAAhDA,gD;AAAgD,wE;AAAA,e;AAAA,a;AAAA,ogC;AAAA;AAAA;AClC7D;;AACI;;AACI;;AAoBJ;;AACA;;AACI;;AACI;;AAEI;;AACI;;AAAI;;AAAiB;;AACrB;;AACI;;AAAoB;;AAAU;;AAAI;;AAAQ;;AAAqC;;AAAS;;AACxF;;AAAuB;;AAAa;;AAAQ;;AAAwC;;AACpF;;AACA;;AAAuB;;AACnB;;AAAI;;AAAQ;;AAAwC;;AACxD;;AACA;;AAAuB;;AAAU;;AACjC;;AAA0B;;AACtB;;AAAQ;;AAAyC;;AACrD;;AACA;;AAAoC;;AAAK;;AAAQ;;AAAiC;;AAC9E;;AAAI;;AAAQ;;AAAI;;AACpB;;AACA;;AAA+B;;AAAQ;;AAAI;;AAAS;;AACxD;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAlDc;;AAAA;;AA4BoD;;AAAA;;AACE;;AAAA;;AAG5B;;AAAA;;AAIJ;;AAAA;;AAEqC;;AAAA;;;;;;;;;sEDN5DA,gD,EAAgD;cAL5D,uDAK4D;eALlD;AACT8J,kBAAQ,EAAE,mDADD;AAETC,qBAAW,EAAE,gEAFJ;AAGTC,mBAAS,EAAE,CAAC,+DAAD;AAHF,S;AAKkD,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElC7D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mL,CAAA;AAKA;;;QAuBaC,6C;;;;;YAAAA;;;;yBAAAA,6C;AAA6C,O;AAAA,iBAL7C,CACT,qIADS,EAET,0JAFS,C;AAGV,gBAXQ,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,kEAJO,EAKP,mFALO,EAMP,kJANO,CAWR;;;;0HAEUA,6C,EAA6C;AAAA,uBAdzC,yIAcyC;AAdO,kBAE7D,4DAF6D,EAG7D,0DAH6D,EAI7D,kEAJ6D,EAK7D,kEAL6D,EAM7D,mFAN6D,EAO7D,kJAP6D;AAcP,O;AAPF,K;;;;;sEAO3CA,6C,EAA6C;cAfzD,sDAeyD;eAfhD;AACRC,sBAAY,EAAE,CAAC,yIAAD,CADN;AAERhS,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,kEAJO,EAKP,mFALO,EAMP,kJANO,CAFD;AAURiS,mBAAS,EAAE,CACT,qIADS,EAET,0JAFS;AAVH,S;AAegD,Q;;;;;;;;;;;;;;;;;;AC5B1D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mL,CAAA;AAIA;;;QAaaC,8C;AAGX,8DACUC,KADV,EAEU9J,wDAFV,EAE4H;AAAA;;AADlH,aAAA8J,KAAA,GAAAA,KAAA;AACA,aAAA9J,wDAAA,GAAAA,wDAAA;AAJF,aAAA+J,OAAA,GAAU,8DAAUC,QAAV,CAAmBC,GAAnB,CAAuBC,GAAjC;AAKH;;;;oCAEcvR,I,EAAiBwR,W,EAAqBC,I,EAAyBC,Q,EAA6B;AAC7G,cAAIC,IAAI,GAA+B,IAAI,6FAAJ,CAA+B3R,IAAI,CAACH,KAApC,CAAvC;AACA8R,cAAI,CAACF,IAAL,GAAYA,IAAI,CAAChP,EAAL,CAAQvC,QAAR,EAAZ;AACAyR,cAAI,CAACD,QAAL,GAAgBA,QAAQ,CAACjP,EAAT,CAAYvC,QAAZ,EAAhB;AACAyR,cAAI,CAACH,WAAL,GAAmBA,WAAnB;AACAG,cAAI,CAACC,eAAL,GAAuB,0EAAgBC,YAAvC;AACAF,cAAI,CAACG,aAAL,GAAqB,wEAAcC,YAAnC;;AAEA,cAAI,2EAAiBxR,aAAjB,KAAmC,CAAEiR,WAAzC,EAAuD;AACrD,gBAAM7K,QAAQ,GAA0D,KAAKU,wDAAL,CAA8D5G,iBAA9D,CAAgFT,IAAhF,CAAxE;AACA2R,gBAAI,CAACjR,aAAL,GAAqBiG,QAAQ,CAACjG,aAAT,GAAyBiG,QAAQ,CAACjG,aAAlC,GAAkD,CAAvE;AACAiR,gBAAI,CAACtM,aAAL,GAAqBsB,QAAQ,CAACtB,aAAT,GAAyBsB,QAAQ,CAACtB,aAAlC,GAAkD,CAAvE;AACAsM,gBAAI,CAACrM,cAAL,GAAsBqB,QAAQ,CAACrB,cAAT,GAA0BqB,QAAQ,CAACrB,cAAnC,GAAoD,CAA1E;AACAqM,gBAAI,CAACpM,MAAL,GAAcoB,QAAQ,CAACpB,MAAT,GAAkBoB,QAAQ,CAACpB,MAA3B,GAAoC,CAAlD;AACAoM,gBAAI,CAAClT,UAAL,GAAkBkI,QAAQ,CAAClI,UAAT,GAAsBkI,QAAQ,CAAClI,UAAT,CAAoByB,QAApB,EAAtB,GAAuD,GAAzE;AACA,gBAAM0G,QAAQ,GAA0D,KAAKS,wDAAL,CAA8DxG,iBAA9D,CAAgFb,IAAhF,CAAxE;AACA2R,gBAAI,CAAC7Q,aAAL,GAAqB8F,QAAQ,CAAC9F,aAAT,GAAyB8F,QAAQ,CAAC9F,aAAlC,GAAkD,CAAvE;AACA6Q,gBAAI,CAACxL,aAAL,GAAqBS,QAAQ,CAACT,aAAT,GAAyBS,QAAQ,CAACT,aAAlC,GAAkD,CAAvE;AACAwL,gBAAI,CAACvL,cAAL,GAAsBQ,QAAQ,CAACR,cAAT,GAA0BQ,QAAQ,CAACR,cAAnC,GAAoD,CAA1E;AACAuL,gBAAI,CAACtL,MAAL,GAAcO,QAAQ,CAACP,MAAT,GAAkBO,QAAQ,CAACP,MAA3B,GAAoC,CAAlD;AACAsL,gBAAI,CAACpT,UAAL,GAAkBqI,QAAQ,CAACrI,UAAT,GAAsBqI,QAAQ,CAACrI,UAAT,CAAoB2B,QAApB,EAAtB,GAAuD,GAAzE;AACD;;AAED,iBAAO,KAAKiR,KAAL,CAAWa,IAAX,WAAmB,KAAKZ,OAAxB,yCAAqEO,IAArE,CAAP;AACD;;;;;;;uBAhCUT,8C,EAA8C,uH,EAAA,kN;AAAA,K;;;aAA9CA,8C;AAA8C,eAA9CA,8CAA8C,K;AAAA,kBAF7C;;;;;sEAEDA,8C,EAA8C;cAH1D,wDAG0D;eAH/C;AACVrK,oBAAU,EAAE;AADF,S;AAG+C,Q","file":"o-ring-rectangular-gland-external-vacuum-only-o-ring-rectangular-gland-external-vacuum-only-module-es5.js","sourcesContent":["import { ORingMaxValuesModel } from \"./oring-maxvalues\";\r\nexport class ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel extends ORingMaxValuesModel {\r\n    glandODMax: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMax?: number,\r\n        glandDepthMax?: number,\r\n        bottomRadiiMax?: number,\r\n        gapMax?: number,\r\n        glandODMax?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandODMax = options.glandODMax;\r\n    }\r\n}","import { ORingMinValuesModel } from \"./oring-minvalues\";\r\nexport class ORingRectangularGlandExternalVacuumOnlyMinvaluesModel extends ORingMinValuesModel {\r\n    glandODMin: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMin?: number,\r\n        glandDepthMin?: number,\r\n        bottomRadiiMin?: number,\r\n        gapMin?: number,\r\n        glandODMin?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandODMin = options.glandODMin;\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ORingRectangularGlandExternalVacuumOnlyComponent } from \"./o-ring-rectangular-gland-external-vacuum-only.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ORingRectangularGlandExternalVacuumOnlyComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ORingRectangularGlandExternalVacuumOnlyRoutingModule { }","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { MaterialChoiceModel } from '../../../models/material-choice.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { Temperature, Units, ErrorTypes, CalculatorOption } from '../../../shared/helpers/constants';\nimport { ErrorModel } from '../../../models/error.model';\nimport { ORingRectangularGlandExternalVacuumOnlyMinvaluesModel } from '../../../models/o-ring-rectangular-gland-external-vacuum-only-minvalues';\nimport { ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel } from '../../../models/o-ring-rectangular-gland-external-vacuum-only-maxvalues';\nimport { UnitButtonService } from \"../../../shared/components/unit-button/unit-button.service\";\nimport { TemperatureButtonService } from \"../../../shared/components/temperature-button/temperature-button.service\";\nimport { HelperService } from \"../../../shared/services/helper.service\";\n\nconst glandWidthNoReliableWarningTitle = \"Gland Width\";\nconst glandWidthNoReliableWarningMessage = \"The gland fill calculations will be considered not reliable as the o-ring could not expand fully into the gland.\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingRectangularGlandExternalVacuumOnlyValidationService {\n\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n  // gland width validation\n  glandWidthShouldBeLargerThanORingCrossSection(control: FormGroup): ErrorModel {\n    // return (control: FormGroup): ValidationErrors | null => {\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n    const error = lessThanEqualValidation(glandWidthNominalControl.value, oringCrossSectionNominalControl.value, \"glandWidthNominal\", \"Gland Width\", \"For a rectangular gland, it is recommended for the gland width to be larger than the cross section of the o-ring.\");\n    return error;\n  }\n\n  //  oringCrossSectionNominalLessThan vaidate\n  oringCrossSectionNominalLessThanValidation(control: FormGroup): ErrorModel {\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    let error = null;\n    if (oringCrossSectionNominalControl && glandDepthNominalControl && oringCrossSectionNominalControl.value && glandDepthNominalControl.value) {\n      const oringCrossSectionNominalLessThanError = lessThanValidation(oringCrossSectionNominalControl.value, glandDepthNominalControl.value, \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"O-ring Cross Section should greater than or equal to gland depth.\");\n      error = oringCrossSectionNominalLessThanError;\n    }\n    return error;\n  }\n\n  // gland width nominal warning\n  glandWidthNominalWarning(form: FormGroup): ErrorModel {\n    let error: ErrorModel = null;\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n    const oringCrossSectionNominalControlValue = (1.5 * (+oringCrossSectionNominalControl.value)).toString();\n    if (glandWidthNominalControl && glandWidthNominalControl.value && oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n      error = largerThanValidation(glandWidthNominalControl.value, oringCrossSectionNominalControlValue, \"glandWidthNominal\", glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return error;\n  }\n\n  // gland width min warning\n  glandWidthMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMinControlValue: number;\n\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: ORingRectangularGlandExternalVacuumOnlyMinvaluesModel = this.generateMinValues(form);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n    }\n    else {\n      glandWidthMinControlValue = form.get('glandWidthMin').value ? form.get('glandWidthMin').value : null;\n    }\n\n    if (glandWidthMinControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMinControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  // gland width max warning\n  glandWidthMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(form);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n    }\n    else {\n      glandWidthMaxControlValue = form.get('glandWidthMax').value ? (+form.get('glandWidthMax').value) : null;\n    }\n    if (glandWidthMaxControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMaxControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  // bottomRadiiNominal min limit validation\n  bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(control: FormGroup): ErrorModel {\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n    const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\n    const error = lessThanValidation(bottomRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"bottomRadiiNominal\", \"Bottom Radii\", `Minimum radii is ${bottomRadiiMinLimit} due to typical machining standards.`);\n    return error;\n  }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n  // bottom radii should not be larger than half(1/2) of glandWidthNominal\n  // bottom radii should not be larger than glandDepthNominal\n  bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const bottomRadiiMinControl = control.get('bottomRadiiMin');\n      const bottomRadiiMaxControl = control.get('bottomRadiiMax');\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const fieldName = \"Bottom Radii\";\n      const errorMessage = \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\";\n      let error: any = null;\n      // bottomRadii Nominal\n      if (bottomRadiiNominalControl) {\n        const bottomRadiiNominalError1 = largerThanValidation(bottomRadiiNominalControl.value, glandDepthNominalControl.value, \"bottomRadiiNominal\", fieldName, errorMessage);\n        const bottomRadiiNominalError2 = noLargerThanHalf(bottomRadiiNominalControl.value, glandWidthNominalControl.value, \"bottomRadiiNominal\", fieldName, errorMessage);\n        if (bottomRadiiNominalError1) {\n          error = bottomRadiiNominalError1;\n        }\n        else if (bottomRadiiNominalError2) {\n          error = bottomRadiiNominalError2;\n        }\n\n        if (!bottomRadiiNominalControl.errors) {\n          bottomRadiiNominalControl.setErrors(error);\n        }\n      }\n\n      // bottomRadiiMin\n      if (bottomRadiiMinControl) {\n        const bottomRadiiMinError1 = largerThanValidation(bottomRadiiMinControl.value, glandDepthNominalControl.value, \"bottomRadiiMin\", fieldName, errorMessage);\n        const bottomRadiiMinError2 = noLargerThanHalf(bottomRadiiMinControl.value, glandWidthNominalControl.value, \"bottomRadiiMin\", fieldName, errorMessage);\n        if (bottomRadiiMinError1) {\n          error = bottomRadiiMinError1;\n        }\n        else if (bottomRadiiMinError2) {\n          error = bottomRadiiMinError2;\n        }\n\n        if (!bottomRadiiMinControl.errors) {\n          bottomRadiiMinControl.setErrors(error);\n        }\n      }\n\n      // bottomRadiiMax\n      if (bottomRadiiMaxControl) {\n        const bottomRadiiMaxError1 = largerThanValidation(bottomRadiiMaxControl.value, glandDepthNominalControl.value, \"bottomRadiiMax\", fieldName, errorMessage);\n        const bottomRadiiMaxError2 = noLargerThanHalf(bottomRadiiMaxControl.value, glandWidthNominalControl.value, \"bottomRadiiMax\", fieldName, errorMessage);\n        if (bottomRadiiMaxError1) {\n          error = bottomRadiiMaxError1;\n        }\n        else if (bottomRadiiMaxError2) {\n          error = bottomRadiiMaxError2;\n        }\n\n        if (!bottomRadiiMaxControl.errors) {\n          bottomRadiiMaxControl.setErrors(error);\n        }\n      }\n      return error;\n    };\n  }\n\n  // operating temperture nominal validation\n  operatingTemperatureValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const materialCteNominalControl = control.get('materialCteNominal');\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\n      const operatingTemperatureMinControl = control.get('operatingTemperatureMin');\n      const operatingTemperatureMaxControl = control.get('operatingTemperatureMax');\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\n      let error = null;\n      if (materialCteNominalValue && materialCteNominalValue.maxtemp && operatingTemperatureNominalControl.value) {\n        let message = \"\";\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        else {\n          // default CELCIUS\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n\n        // Nominal temperature min and max validation\n        if (operatingTemperatureNominalControl.value) {\n          let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          if (operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError) {\n            error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\n          }\n          operatingTemperatureNominalControl.setErrors(error);\n        }\n\n        // Min temperature min and max validation\n        if (operatingTemperatureMinControl.value) {\n          let operatingTemperatureMinInCelcius = operatingTemperatureMinControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMinInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMinControl.value).toFixed(2);\n          }\n\n          // Temperature min and max validation\n          const operatingTemperatureMinLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          const operatingTemperatureMinLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          if (operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError) {\n            error = operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError;\n          }\n          operatingTemperatureMinControl.setErrors(error);\n        }\n\n        // Max Temperature min and max validation\n        if (operatingTemperatureMaxControl.value) {\n          let operatingTemperatureMaxInCelcius = operatingTemperatureMaxControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMaxInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMaxControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureMaxLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          const operatingTemperatureMaxLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          if (operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError) {\n            error = operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError;\n          }\n          operatingTemperatureMaxControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // Function check O-ring cross section is in range or not else set error message\n  oringCrossSectionNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n\n        // check O-ring cross section is in range or not else set error message\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n\n        if (oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError) {\n          error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\n        }\n      }\n\n      if (!oringCrossSectionNominalControl.errors) {\n        oringCrossSectionNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // oRingId nominal validation\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\n      let error = null;\n      if (oringIdNominalControl && oringIdNominalControl.value) {\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\n\n        // if (!oringIdNominalControl.errors) {\n        //   oringIdNominalControl.setErrors(error);\n        // }\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"oringIDNominalLargerThanMaxOringID\");\n      }\n\n      return error;\n    };\n  }\n\n  // less than zero validation\n  formLessThanZeroValidation(toolbarOptionkey: any): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      // get form controls key\n      const formControlKeys = Object.keys(control.controls);\n      // loop through the reactive form/formgroup controls \n      for (let index = 0; index < formControlKeys.length; index++) {\n        // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n        if (toolbarOptionkey === formControlKeys[index]) {\n          continue;\n        }\n\n        // skip gapNominal and operatingTemperatureNominal\n        if (formControlKeys[index] === \"gapNominal\" || formControlKeys[index] === \"gapTolerance\"\n          || formControlKeys[index] === \"gapMin\" || formControlKeys[index] === \"gapMax\"\n          || formControlKeys[index] === \"operatingTemperatureMin\"\n          || formControlKeys[index] === \"operatingTemperatureNominal\"\n          || formControlKeys[index] === \"operatingTemperatureMax\"\n        ) {\n          continue;\n        }\n\n        // any form control value is less than zero\n        const error = lessThanEqualValidation(control.controls[formControlKeys[index]].value, \"0\", formControlKeys[index], \"\", \"Input values should not be Zero or Negative, except Gap and Operating Temperature.\");\n\n        // set error to form control\n        // control.controls[formControlKeys[index]].setErrors(error);\n        const fc = control.get(formControlKeys[index]);\n        this.helperService.setValidationErrorToFormControl(fc, error, \"LessThanZeroValueError\");\n      }\n      return error;\n    };\n  }\n\n  // tolrerance validation\n  toleranceValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const msg = \"Tolerance value should not greater or equal to respective nominal value.\";\n      const glandWidthToleranceControl = control.get('glandWidthTolerance');\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandDepthToleranceControl = control.get('glandDepthTolerance');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const bottomRadiiToleranceControl = control.get('bottomRadiiTolerance');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const gapToleranceControl = control.get('gapTolerance');\n      const gapNominalControl = control.get('gapNominal');\n      const glandODToleranceControl = control.get('glandODTolerance');\n      const glandODNominalControl = control.get('glandODNominal');\n\n      if (glandWidthToleranceControl.value) {\n        error = largerThanEqualValidation(glandWidthToleranceControl.value, glandWidthNominalControl.value, \"glandWidthTolerance\", \"\", msg);\n        // this.helperService.setFormValidationErrorToControl(control, \"glandWidthTolerance\", error);\n        this.helperService.setValidationErrorToFormControl(glandWidthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandDepthToleranceControl.value) {\n        error = largerThanEqualValidation(glandDepthToleranceControl.value, glandDepthNominalControl.value, \"glandDepthTolerance\", \"\", msg);\n        // this.helperService.setFormValidationErrorToControl(control, \"glandDepthTolerance\", error);\n        this.helperService.setValidationErrorToFormControl(glandDepthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (bottomRadiiToleranceControl.value) {\n        error = largerThanEqualValidation(bottomRadiiToleranceControl.value, bottomRadiiNominalControl.value, \"bottomRadiiTolerance\", \"\", msg);\n        // this.helperService.setFormValidationErrorToControl(control, \"bottomRadiiTolerance\", error);\n        this.helperService.setValidationErrorToFormControl(bottomRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandODToleranceControl.value) {\n        error = largerThanEqualValidation(glandODToleranceControl.value, glandODNominalControl.value, \"glandODTolerance\", \"\", msg);\n        // this.helperService.setFormValidationErrorToControl(control, \"glandODTolerance\", error);\n        this.helperService.setValidationErrorToFormControl(glandODToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (gapToleranceControl.value && gapToleranceControl.value != 0) {\n        error = largerThanEqualValidation(gapToleranceControl.value, gapNominalControl.value, \"gapTolerance\", \"\", msg);\n        // this.helperService.setFormValidationErrorToControl(control, \"gapTolerance\", error);\n        this.helperService.setValidationErrorToFormControl(gapToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n      return error;\n    };\n  }\n\n  // min validation\n  minValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Min values should be less or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const glandODNominalControl = control.get('glandODNominal');\n    const gapNominalControl = control.get('gapNominal');\n\n    let glandWidthMinControlValue: number;\n    let glandDepthMinControlValue: number;\n    let bottomRadiiMinControlValue: number;\n    let gapMinControlValue: number;\n    let glandODMinControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: ORingRectangularGlandExternalVacuumOnlyMinvaluesModel = this.generateMinValues(control);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n      glandDepthMinControlValue = minValues.glandDepthMin;\n      bottomRadiiMinControlValue = minValues.bottomRadiiMin;\n      gapMinControlValue = minValues.gapMin;\n      glandODMinControlValue = minValues.glandODMin;\n    }\n    else {\n      glandWidthMinControlValue = control.get('glandWidthMin').value ? (+control.get('glandWidthMin').value) : null;\n      glandDepthMinControlValue = control.get('glandDepthMin').value ? (+control.get('glandDepthMin').value) : null;\n      bottomRadiiMinControlValue = control.get('bottomRadiiMin').value ? (+control.get('bottomRadiiMin').value) : null;\n      gapMinControlValue = control.get('gapMin').value ? (+control.get('gapMin').value) : null;\n      glandODMinControlValue = control.get('glandODMin').value ? (+control.get('glandODMin').value) : null;\n    }\n\n    // min value validation\n    if (glandWidthMinControlValue) {\n      const error1 = largerThanValidation(glandWidthMinControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMinControlValue) {\n      const error2 = largerThanValidation(glandDepthMinControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMin\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMinControlValue) {\n      const error3 = largerThanValidation(bottomRadiiMinControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMin\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMinControlValue) {\n      const error4 = largerThanValidation(gapMinControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMin\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (!isNaN(glandODMinControlValue) && glandODMinControlValue > 0) {\n      const error5 = largerThanValidation(glandODMinControlValue.toString(), glandODNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandODTolerance\" : \"glandODMin\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n    return errors;\n  }\n\n  maxValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Max value should be greater or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const gapNominalControl = control.get('gapNominal');\n    const glandODNominalControl = control.get('glandODNominal');\n\n    let glandWidthMaxControlValue: number;\n    let glandDepthMaxControlValue: number;\n    let bottomRadiiMaxControlValue: number;\n    let gapMaxControlValue: number;\n    let glandODMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate max values\n      const maxValues: ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(control);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n      glandDepthMaxControlValue = maxValues.glandDepthMax;\n      bottomRadiiMaxControlValue = maxValues.bottomRadiiMax;\n      gapMaxControlValue = maxValues.gapMax;\n      glandODMaxControlValue = maxValues.glandODMax;\n    }\n    else {\n      glandWidthMaxControlValue = control.get('glandWidthMax').value ? (+control.get('glandWidthMax').value) : null;\n      glandDepthMaxControlValue = control.get('glandDepthMax').value ? (+control.get('glandDepthMax').value) : null;\n      bottomRadiiMaxControlValue = control.get('bottomRadiiMax').value ? (+control.get('bottomRadiiMax').value) : null;\n      gapMaxControlValue = control.get('gapMax').value ? (+control.get('gapMax').value) : null;\n      glandODMaxControlValue = control.get('glandODMax').value ? (+control.get('glandODMax').value) : null;\n    }\n\n    // max value validation\n    if (glandWidthMaxControlValue) {\n      const error1 = lessThanValidation(glandWidthMaxControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMaxControlValue) {\n      const error2 = lessThanValidation(glandDepthMaxControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMax\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMaxControlValue) {\n      const error3 = lessThanValidation(bottomRadiiMaxControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMax\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMaxControlValue) {\n      const error4 = lessThanValidation(gapMaxControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMax\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (!isNaN(glandODMaxControlValue) && glandODMaxControlValue > 0) {\n      const error5 = lessThanValidation(glandODMaxControlValue.toString(), glandODNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandODTolerance\" : \"glandODMax\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n    return errors;\n  }\n\n  // orin id standard warning and prevent to submit the form\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let warning: ErrorModel = null;\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      if ((+currentSelectedUnit.id) === Units.INCH) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      // if (!oringIdNominalControl.errors) {\n      //   // set form error\n      //   oringIdNominalControl.setErrors(warning);\n      // }\n      this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"oRingIDAS568AStandards\");\n      return warning;\n    };\n  }\n\n  // generate min values when option is Tolerance\n  generateMinValues(form: FormGroup): ORingRectangularGlandExternalVacuumOnlyMinvaluesModel {\n    let minValue: ORingRectangularGlandExternalVacuumOnlyMinvaluesModel = new ORingRectangularGlandExternalVacuumOnlyMinvaluesModel();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const glandODNominalControl = form.get('glandODNominal');\n    const glandODToleranceControl = form.get('glandODTolerance');\n\n    minValue.glandWidthMin = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") - parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\n    minValue.glandDepthMin = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") - parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\n    minValue.bottomRadiiMin = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") - parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\n    minValue.gapMin = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") - parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\n    minValue.glandODMin = (parseFloat(glandODNominalControl.value ? glandODNominalControl.value : \"0\") - parseFloat(glandODToleranceControl.value ? glandODToleranceControl.value : \"0\"));\n    return minValue;\n  }\n\n  // generate max values when option is Tolerance\n  generateMaxValues(form: FormGroup): ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel {\n    let maxValue: ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel = new ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const glandODNominalControl = form.get('glandODNominal');\n    const glandODToleranceControl = form.get('glandODTolerance');\n\n    maxValue.glandWidthMax = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") + parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\n    maxValue.glandDepthMax = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") + parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\n    maxValue.bottomRadiiMax = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") + parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\n    maxValue.gapMax = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") + parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\n    maxValue.glandODMax = (parseFloat(glandODNominalControl.value ? glandODNominalControl.value : \"0\") + parseFloat(glandODToleranceControl.value ? glandODToleranceControl.value : \"0\"));\n    return maxValue;\n  }\n}\n","// core imports\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../../models/calculator.model\";\nimport { FormControlModel } from '../../../models/form-control.model';\nimport { BaseModel } from '../../../models/base.model';\nimport { FormColumnModel } from '../../../models/form-column.model';\nimport { ErrorModel } from '../../../models/error.model';\nimport { ORingInternalVacuumOnlyCalculatedOutput } from '../../../models/oRingInternalVacuumOnlyCalculatedOutput';\nimport { RectangularORingCalcService } from \"../rectangular-o-ring-calc.service\";\nimport { AuthService } from \"../../../shared/services/auth.service\";\nimport { ControlType, Units, ORingTool_RactangleExternalVacuumOnly_Validators, CalculatorOption, ControlSubType, Temperature, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../../shared/services/control-base.service\";\nimport { PrintService } from \"../../../shared/services/print.service\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { ORingRectangularGlandExternalVacuumOnlyService } from \"./o-ring-rectangular-gland-external-vacuum-only.service\";\nimport { ORingRectangularGlandExternalVacuumOnlyValidationService } from \"./o-ring-rectangular-gland-external-vacuum-only-validation.service\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { CalculatorToolbarService } from \"../../../shared/components/calculator-toolbar/calculator-toolbar.service\";\n\n@Component({\n  selector: 'app-o-ring-rectangular-gland-external-vacuum-only',\n  templateUrl: './o-ring-rectangular-gland-external-vacuum-only.component.html',\n  styleUrls: ['./o-ring-rectangular-gland-external-vacuum-only.component.css']\n})\nexport class ORingRectangularGlandExternalVacuumOnlyComponent implements OnInit {\n  calculatorConfig: CalculatorModel;\n  oRingRectGlandExternalForm: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted: Boolean = false;\n  payLoad = '';\n  bottomRadiiMaxLimit: number = 0.035;\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  isShowPasteBtn: Boolean = false;\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  oRingDataSubscription: Subscription;\n  temperatureChangeSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n\n  constructor(\n    private controlBaseService: ControlBaseService,\n    private authService: AuthService,\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private printService: PrintService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService,\n    private oRingRectangularGlandExternalVacuumOnlyService: ORingRectangularGlandExternalVacuumOnlyService,\n    private oRingRectangularGlandExternalVacuumOnlyValidationService: ORingRectangularGlandExternalVacuumOnlyValidationService,\n    private helperService: HelperService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) {\n\n    // get o-ring-dovetail-gland-vacuum-only config value from O-Ring JSON \n    const rectangleJSONConfig = this.rectangularORingCalcService.getCurrentORingConfigValue;\n\n    // o-ring calculator config subscription\n    if (rectangleJSONConfig) {\n      this.initializeOringConfig(rectangleJSONConfig);\n    }\n    else {\n      this.oRingDataSubscription = this.rectangularORingCalcService.oRingConfig$.subscribe((x: BaseModel) => {\n        if (x) {\n          this.initializeOringConfig(x);\n        }\n      });\n    }\n    // temperature change\n    this.onTemperatureChangeUpdateCalculator();\n\n    // unit change\n    this.onUnitChange();\n\n    // onPaste event subscription\n    this.calculatorToolbarService.paste.subscribe((d: any) => {\n      if (d) {\n        this.onPaste(d);\n      }\n    });\n  }\n\n  // initialize o-ring-rectangular-gland-external-vacuum-only calculator by json config param\n  private initializeOringConfig(oRingJsonConfig: BaseModel) {\n    // calculator - o-ring-dovetail-gland-vacuum-only\n    const oRingRectGlandExternalVacuumOnly = { ...oRingJsonConfig.calculators[3] };\n    this.calculatorConfig = oRingRectGlandExternalVacuumOnly;\n    // send calculator to dynamic form service\n    this.dynamicFormTwoColumnLayoutService.sendCalculator(oRingRectGlandExternalVacuumOnly);\n    // create form\n    this.createForm();\n    // show or hide form controls\n    this.onOptionChange(+this.calculatorConfig.toolbarOption.value);\n    this.setShowPasteBtnFlag();\n  }\n\n  // onInit event of component\n  ngOnInit(): void {\n    this.onReset();\n    this.isSubmitted = false;\n    this.CalculatedData = {};\n    this.setShowPasteBtnFlag();\n  }\n\n  // unit change perform operations\n  onUnitChange() {\n    // reset \n    this.resetFormAndCalculation();\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.oRingRectGlandExternalForm, x);\n        if (convertedForm) {\n          this.oRingRectGlandExternalForm = convertedForm;\n        }\n\n        /// recalculate the data\n        this.onSubmit();\n      }\n    });\n  }\n\n  // temperature change update output values handler\n  onTemperatureChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.resetFormAndCalculation();\n      }\n    });\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.oRingRectGlandExternalForm\n      && this.oRingRectGlandExternalForm.controls[fieldName]\n      && this.oRingRectGlandExternalForm.controls[fieldName].value) {\n      return (+this.oRingRectGlandExternalForm.controls[fieldName].value).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3);\n    }\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oRingRectGlandExternalForm) {\n            const fc = this.oRingRectGlandExternalForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oRingRectGlandExternalForm) {\n            const fc = this.oRingRectGlandExternalForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.oRingRectGlandExternalForm = this.controlBaseService.toFormGroup(filteredControls);\n    // custom validation arguments\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case ORingTool_RactangleExternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_VALIDATION:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth());\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.OPERATING_TEMPERATURE_VALIDATION:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.operatingTemperatureValidation());\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.oringCrossSectionNominalValidation());\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.LESS_THAN_ZERO_VALIDATION:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.formLessThanZeroValidation(this.calculatorConfig.toolbarOption.key));\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.TOLERANCE_VALIDATION:\n          // apply validation only when Tolerance option selected\n          if ((+this.calculatorConfig.toolbarOption.value) === CalculatorOption.WithTolerance) {\n            validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.toleranceValidation());\n          }\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.ORING_ID_AS568A_STANDARD_WARNING:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.oRingIDAS568AStandardsWarning());\n          break;\n        case ORingTool_RactangleExternalVacuumOnly_Validators.O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION:\n          validations.push(this.oRingRectangularGlandExternalVacuumOnlyValidationService.oringIDNominalLargerThanMaxOringIDValidation());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.oRingRectGlandExternalForm.setValidators(validations);\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // form submit event\n  onSubmit(isSubmitted = false) {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    this.isSubmitted = isSubmitted;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandWidth validation\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_RactangleExternalVacuumOnly_Validators.GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION)) {\n      const glandWidthShouldBeLargerThanORingCrossSectionError = this.oRingRectangularGlandExternalVacuumOnlyValidationService.glandWidthShouldBeLargerThanORingCrossSection(this.oRingRectGlandExternalForm);\n      if (glandWidthShouldBeLargerThanORingCrossSectionError) {\n        this.addClientErrors(glandWidthShouldBeLargerThanORingCrossSectionError);\n      }\n    }\n\n    // if validation key O_RING_CROSS_SECTION_VALIDATION exist \n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_RactangleExternalVacuumOnly_Validators.O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION)) {\n      const oringCrossSectionNominalLessThanError = this.oRingRectangularGlandExternalVacuumOnlyValidationService.oringCrossSectionNominalLessThanValidation(this.oRingRectGlandExternalForm);\n      if (oringCrossSectionNominalLessThanError) {\n        this.addClientErrors(oringCrossSectionNominalLessThanError);\n      }\n    }\n\n    // bottomRadiiShouldBeLargerThanBottomRadiiMinLimit error\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_RactangleExternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT)) {\n      const bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError = this.oRingRectangularGlandExternalVacuumOnlyValidationService.bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(this.oRingRectGlandExternalForm);\n      if (bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError) {\n        this.addClientErrors(bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError);\n      }\n    }\n\n    // min value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_RactangleExternalVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const minValueErrors: ErrorModel[] = this.oRingRectangularGlandExternalVacuumOnlyValidationService.minValueValidation(this.oRingRectGlandExternalForm, this.calculatorConfig.toolbarOption.value);\n      if (minValueErrors.length > 0) {\n        for (let index = 0; index < minValueErrors.length; index++) {\n          this.addClientErrors(minValueErrors[index]);\n        }\n      }\n    }\n\n    // max value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_RactangleExternalVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const maxValueErrors: ErrorModel[] = this.oRingRectangularGlandExternalVacuumOnlyValidationService.maxValueValidation(this.oRingRectGlandExternalForm, this.calculatorConfig.toolbarOption.value);\n      if (maxValueErrors.length > 0) {\n        for (let index = 0; index < maxValueErrors.length; index++) {\n          this.addClientErrors(maxValueErrors[index]);\n        }\n      }\n    }\n\n    // warnings\n    const glandWidthNominalWarning = this.oRingRectangularGlandExternalVacuumOnlyValidationService.glandWidthNominalWarning(this.oRingRectGlandExternalForm);\n    if (glandWidthNominalWarning) {\n      this.addClientWarnings(glandWidthNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandWidthMinWarning = this.oRingRectangularGlandExternalVacuumOnlyValidationService.glandWidthMinWarning(this.oRingRectGlandExternalForm, this.calculatorConfig.toolbarOption.value);\n      const glandWidthMaxWarning = this.oRingRectangularGlandExternalVacuumOnlyValidationService.glandWidthMaxWarning(this.oRingRectGlandExternalForm, this.calculatorConfig.toolbarOption.value);\n      if (glandWidthMinWarning) {\n        this.addClientWarnings(glandWidthMinWarning);\n      }\n      if (glandWidthMaxWarning) {\n        this.addClientWarnings(glandWidthMaxWarning);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (this.oRingRectGlandExternalForm.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.oRingRectangularGlandExternalVacuumOnlyService.createORing(\n      this.oRingRectGlandExternalForm,\n      this.calculatorConfig.toolbarOption.value,\n      this.unitButtonService.getCurrentUnitValue,\n      this.temperatureButtonService.getCurrentTemperatureValue\n    ).subscribe((resp: ORingInternalVacuumOnlyCalculatedOutput) => {\n      if (resp.data) {\n\n        // set CalculatedData\n        // this will set the graph data also\n        this.CalculatedData = Object.assign({}, resp.data);\n\n        if (resp.data.error && resp.data.error.length > 0) {\n          this.serverErrors = resp.data.error.slice();\n        }\n\n        if (resp.data.warning && resp.data.warning.length > 0) {\n          this.serverWarnings = resp.data.warning;\n        }\n\n        const responseDataKeys = Object.keys(resp.data);\n\n        // when toleranc or minmax option is selected than also bind calculated labels received after calculation\n        if (CalculatorOption.Nominal !== +(this.calculatorConfig.toolbarOption.value)) {\n\n          // Bind left form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n\n          // Bind right form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Bind output form data\n        // loop through each output\n        for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n\n          // set output title of operating temperature label\n          if (outputIndex > 0) {\n            const temperatureCode = ((+this.temperatureButtonService.getCurrentTemperatureValue.id) === Temperature.FAHRENHEIT) ? TemperatureFahrenheitCode.HEXA_DECIMAL_CODE : TemperatureCelsiusCode.HEXA_DECIMAL_CODE;\n\n            const operatingTemperatureMin = this.oRingRectGlandExternalForm.controls[\"operatingTemperatureMin\"];\n            const operatingTemperatureNominal = this.oRingRectGlandExternalForm.controls[\"operatingTemperatureNominal\"];\n            const operatingTemperatureMax = this.oRingRectGlandExternalForm.controls[\"operatingTemperatureMax\"];\n\n            // operating temperature min\n            if (outputIndex === 1 && operatingTemperatureMin && operatingTemperatureMin.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMin.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 1) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature nominal\n            if (outputIndex === 2 && operatingTemperatureNominal && operatingTemperatureNominal.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureNominal.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 2) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature max\n            if (outputIndex === 3 && operatingTemperatureMax && operatingTemperatureMax.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMax.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 3) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n          }\n\n          // loop through rows\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}%`;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // reset auth token \n        this.setAuth();\n      }\n    }, (error: any) => {\n      // reset auth token \n      this.setAuth();\n      // TODO: show error if any\n      console.log(error);\n    });\n  }\n\n  // option nominal, tolerance and (min and max) change handler\n  onOptionChange(selectedOption: number) {\n    // show or hide controls based on options\n    this.dynamicFormTwoColumnLayoutService.showOrHideControlsBasedOnOption(selectedOption);\n    // update form submission status\n    this.isSubmitted = false;\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n    // create form\n    this.createForm();\n    this.setShowPasteBtnFlag();\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \" %\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.oRingRectGlandExternalForm) {\n      return;\n    }\n\n    // get form controls key\n    const formControlKeys = Object.keys(this.oRingRectGlandExternalForm.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n      if (this.calculatorConfig.toolbarOption.key === formControlKeys[index]) {\n        continue;\n      }\n\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.oRingRectGlandExternalForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.oRingRectGlandExternalForm.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  // clears the form submission status and \n  // calcuated data\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\n    // const responseDataKeys = Object.keys(this.CalculatedData);\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          // get fields key from resp data\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `%`;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    // reset calculated data received after calculation\n    this.CalculatedData = {};\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"rectangleGland\");\n  }\n\n  // on paste calculated data\n  onPaste(calculatedData: any) {\n    if (calculatedData) {\n      this.oRingRectGlandExternalForm.patchValue(calculatedData);\n      // set material choice dropdown value\n      const materialChoiceControl = this.oRingRectGlandExternalForm.get('materialCteNominal');\n      if (materialChoiceControl) {\n        const cte = this.helperService.getMaterialChoiceList('materialCteNominal');\n        const i = cte.findIndex((c) => {\n          return c.value.id === calculatedData['materialCteNominal'].id\n        });\n        if (i > -1) {\n          materialChoiceControl.setValue(cte[i].value);\n        }\n      }\n    }\n  }\n\n  // set show flag of paste button\n  setShowPasteBtnFlag() {\n    if (this.calculatorConfig && this.calculatorConfig.id) {\n      this.isShowPasteBtn = (this.helperService.isCalculatedDataExist(+this.calculatorConfig.id)) ? true : false;\n    }\n    else {\n      this.isShowPasteBtn = false;\n    }\n  }\n\n  // component destroy\n  ngOnDestroy(): void {\n    if (this.oRingDataSubscription) {\n      this.oRingDataSubscription.unsubscribe();\n    }\n    if (this.temperatureChangeSubscription) {\n      this.temperatureChangeSubscription.unsubscribe();\n    }\n\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9\">\n        <form *ngIf=\"calculatorConfig && oRingRectGlandExternalForm\" (ngSubmit)=\"onSubmit(true)\"\n            [formGroup]=\"oRingRectGlandExternalForm\" novalidate\n            class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\" [isShowOptions]=\"calculatorConfig.toolbarOption ? true : false\"\n                        [form]=\"oRingRectGlandExternalForm\" [control]=\"calculatorConfig.toolbarOption\"\n                        [isSubmitted]=\"isSubmitted\" [isShowPasteBtn]=\"isShowPasteBtn\"\n                        (optionChange)=\"onOptionChange($event)\" (reset)=\"onReset()\" (print)=\"onPrint()\">\n                    </calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <dynamic-form-two-column-layout [form]=\"oRingRectGlandExternalForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                <!-- graph -->\n                <div class=\"graph-sec\">\n                    <h3>Gland Information</h3>\n                    <div class=\"graph-bg rectangle-OD\">\n                        <div class=\"gld-id\">GLAND OD: <br><strong>{{getControlValue('glandODNominal')}}</strong></div>\n                        <div class=\"gld-width\">GLAND WIDTH: <strong>{{getControlValue('glandWidthNominal')}}</strong>\n                        </div>\n                        <div class=\"gld-depth\">GLAND DEPTH:\n                            <br><strong>{{getControlValue('glandDepthNominal')}}</strong>\n                        </div>\n                        <div class=\"top-radii\">TOP RADII </div>\n                        <div class=\"bottom-radii\">BOTTOM RADII:\n                            <strong>{{getControlValue('bottomRadiiNominal')}}</strong>\n                        </div>\n                        <div class=\"gap-full-comp rect-gap\">GAP: <strong>{{getControlValue('gapNominal')}}</strong>\n                            <br>(may or <br>may not exist)\n                        </div>\n                        <div class=\"rect-static-value\"><strong>.005</strong></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                <user-rules></user-rules>\n            </div>\n        </div>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../../dynamic-form/dynamic-form.module\";\nimport { ORingRectangularGlandExternalVacuumOnlyRoutingModule } from \"./o-ring-rectangular-gland-external-vacuum-only-routing.module\";\nimport { ORingRectangularGlandExternalVacuumOnlyComponent } from './o-ring-rectangular-gland-external-vacuum-only.component';\nimport { ORingRectangularGlandExternalVacuumOnlyService } from \"./o-ring-rectangular-gland-external-vacuum-only.service\";\nimport { ORingRectangularGlandExternalVacuumOnlyValidationService } from \"./o-ring-rectangular-gland-external-vacuum-only-validation.service\";\n\n@NgModule({\n  declarations: [ORingRectangularGlandExternalVacuumOnlyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    DynamicFormModule,\n    ORingRectangularGlandExternalVacuumOnlyRoutingModule\n  ],\n  providers: [\n    ORingRectangularGlandExternalVacuumOnlyService,\n    ORingRectangularGlandExternalVacuumOnlyValidationService\n  ]\n})\nexport class ORingRectangularGlandExternalVacuumOnlyModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { ORingInternalVacuumOnlyDTO } from \"../../../models/oRingInternalVacuumOnlyDTO\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ORingRectangularGlandExternalVacuumOnlyValidationService } from \"./o-ring-rectangular-gland-external-vacuum-only-validation.service\";\nimport { ORingRectangularGlandExternalVacuumOnlyMinvaluesModel } from \"../../../models/o-ring-rectangular-gland-external-vacuum-only-minvalues\";\nimport { ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel } from \"../../../models/o-ring-rectangular-gland-external-vacuum-only-maxvalues\";\nimport { FormGroup } from '@angular/forms';\nimport { CalculatorOption, calculationType, rectangleType } from '../../../shared/helpers/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingRectangularGlandExternalVacuumOnlyService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(\n    private _http: HttpClient,\n    private oRingRectangularGlandExternalVacuumOnlyValidationService: ORingRectangularGlandExternalVacuumOnlyValidationService\n  ) { }\n\n  public createORing(form: FormGroup, inputOption: string, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: ORingInternalVacuumOnlyDTO = new ORingInternalVacuumOnlyDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.inputOption = inputOption;\n    body.calculationType = calculationType.ORING_SIZING;\n    body.rectangleType = rectangleType.RECTANGLE_OD;\n\n    if (CalculatorOption.WithTolerance === +(inputOption)) {\n      const minValue: ORingRectangularGlandExternalVacuumOnlyMinvaluesModel = this.oRingRectangularGlandExternalVacuumOnlyValidationService.generateMinValues(form);\n      body.glandWidthMin = minValue.glandWidthMin ? minValue.glandWidthMin : 0;\n      body.glandDepthMin = minValue.glandDepthMin ? minValue.glandDepthMin : 0;\n      body.bottomRadiiMin = minValue.bottomRadiiMin ? minValue.bottomRadiiMin : 0;\n      body.gapMin = minValue.gapMin ? minValue.gapMin : 0;\n      body.glandODMin = minValue.glandODMin ? minValue.glandODMin.toString() : \"0\";\n      const maxValue: ORingRectangularGlandExternalVacuumOnlyMaxvaluesModel = this.oRingRectangularGlandExternalVacuumOnlyValidationService.generateMaxValues(form);\n      body.glandWidthMax = maxValue.glandWidthMax ? maxValue.glandWidthMax : 0;\n      body.glandDepthMax = maxValue.glandDepthMax ? maxValue.glandDepthMax : 0;\n      body.bottomRadiiMax = maxValue.bottomRadiiMax ? maxValue.bottomRadiiMax : 0;\n      body.gapMax = maxValue.gapMax ? maxValue.gapMax : 0;\n      body.glandODMax = maxValue.glandODMax ? maxValue.glandODMax.toString() : \"0\";\n    }\n\n    return this._http.post(`${this.baseUrl}oringglandanalysistool/createoring`, body);\n  }\n}\n"]}