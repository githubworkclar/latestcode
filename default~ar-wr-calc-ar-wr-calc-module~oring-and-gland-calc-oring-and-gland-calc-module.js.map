{"version":3,"sources":["./client/app/dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.component.ts","./client/app/dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.component.html","./client/app/dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service.ts","./client/app/dynamic-form/dynamic-form.module.ts","./client/app/models/error.model.ts"],"names":[],"mappings":"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","file":"default~ar-wr-calc-ar-wr-calc-module~oring-and-gland-calc-oring-and-gland-calc-module.js","sourcesContent":["// core imports\r\nimport { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// third party imports\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\n\r\n// application imports\r\nimport { DynamicFormTwoColumnLayoutService } from \"../dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\r\nimport { CalculatorModel } from \"../../models/calculator.model\";\r\nimport { FormControlModel } from \"../../models/form-control.model\";\r\nimport { ErrorModel } from \"../../models/error.model\";\r\nimport { SwitchButtonModel } from '../../models/switch-button.model';\r\nimport { ORingSizesModel } from '../../models/oRingSizes.model';\r\nimport { ORingSizesDetailModel } from '../../models/oRingSizesDetail.model';\r\nimport { ViewErrorModel } from '../../models/view-error.model';\r\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\r\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from \"../../shared/components/temperature-button/temperature-button.service\";\r\nimport { ControlType, ControlSubType, DropdownChooseOptionTitle, ButtonActionKeys, ErrorTypes, Units, supportEmail } from \"../../shared/helpers/constants\";\r\nimport { DashSizeDetailsService } from \"../../shared/components/dash-size-details/dash-size-details.service\";\r\nimport { HelperService } from \"../../shared/services/helper.service\";\r\nimport { DashSizeDetailsComponent } from \"../../shared/components/dash-size-details/dash-size-details.component\";\r\nimport { MaterialChoiceModel } from '../../models/material-choice.model';\r\nimport { ArWrDropDownDataService } from \"../../shared/services/ar-wr-drop-down-data.service\";\r\nimport { DropDownChangeModel } from '../../models/dropdown-change.model';\r\n\r\n@Component({\r\n  selector: 'dynamic-form-two-column-layout',\r\n  templateUrl: './dynamic-form-two-column-layout.component.html',\r\n  styleUrls: ['./dynamic-form-two-column-layout.component.css']\r\n})\r\nexport class DynamicFormTwoColumnLayoutComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() calculatorJSON: CalculatorModel;\r\n  @Input() form: FormGroup;\r\n  @Input() isSubmitted = false;\r\n  @Input() isShowNotes = false;\r\n  @Input() decimalPoint = 3;\r\n  @Input() isUpdateDecimalPointOnUnitChange = true;\r\n  @Input() isWrAr = false;\r\n  @Input() notes = [];\r\n\r\n  // events\r\n  @Output() dropdownSelectionChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() numericInputValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() formValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() focusOut: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  supportEmail = supportEmail.EmailPressIn;\r\n  formValueChangesSubscription: Subscription;\r\n\r\n  private clientErrorsArr: ErrorModel[] = [];\r\n  // client errors that doesnot prevent to submit forms/calculation\r\n  // but need to show in client error div\r\n  @Input() set clientErrors(val: ErrorModel[]) {\r\n    this.clientErrorsArr = val;\r\n    // below property call will combined form error and errors of calculation/onSubmit function\r\n    this.getClientErrorsValidations;\r\n  };\r\n  get clientErrors(): ErrorModel[] {\r\n    return this.clientErrorsArr;\r\n  }\r\n\r\n  // client warnings that doesnot prevent to submit forms/calculation\r\n  // but need to show in client warnings div\r\n  private clientWarningsArr: ErrorModel[] = [];\r\n  @Input() set clientWarnings(val: ErrorModel[]) {\r\n    this.clientWarningsArr = val;\r\n    // below property call will combined form error and errors of calculation/onSubmit function\r\n    this.getClientWarnings;\r\n  };\r\n  get clientWarnings(): ErrorModel[] {\r\n    return this.clientWarningsArr;\r\n  }\r\n\r\n  // server errors\r\n  private serverErrorsArr: ErrorModel[] = [];\r\n  @Input() set serverErrors(val: ErrorModel[]) {\r\n    this.serverErrorsArr = val;\r\n    this.helperService.groupClientErrors(this.serverErrorsArr).then((groupedErrors: ViewErrorModel[]) => {\r\n      // show and hide the more detail note    \r\n      const titledErrors = groupedErrors.filter(e => {\r\n        if (e && e.title) {\r\n          return e;\r\n        }\r\n      });\r\n      this.isShowClickMoreDetailNoteForServerErrors = (titledErrors.length > 0);\r\n\r\n      this.groupedAllServerErrors = groupedErrors;\r\n    });\r\n  };\r\n\r\n  get serverErrors(): ErrorModel[] {\r\n    return this.serverErrorsArr;\r\n  }\r\n\r\n  // server warnings\r\n  private serverWarningsArr: ErrorModel[] = [];\r\n  @Input() set serverWarnings(val: ErrorModel[]) {\r\n    this.serverWarningsArr = val;\r\n    this.helperService.groupClientErrors(this.serverWarningsArr).then((groupedWarnings: ViewErrorModel[]) => {\r\n      // show and hide the more detail note    \r\n      const titledWarnings = groupedWarnings.filter(e => {\r\n        if (e && e.title) {\r\n          return e;\r\n        }\r\n      });\r\n      this.isShowClickMoreDetailNoteForServerWarning = (titledWarnings.length > 0);\r\n\r\n      this.groupedAllServerWarning = groupedWarnings;\r\n    });\r\n  };\r\n\r\n  get serverWarnings(): ErrorModel[] {\r\n    return this.serverWarningsArr;\r\n  }\r\n\r\n  flattenedFormControls: FormControlModel[] = [];\r\n  controlType = ControlType;\r\n  controlSubType = ControlSubType;\r\n  errorDetailOpened = false;\r\n  // dropdown default choose option text/label\r\n  dropdownChooseOptionLabel: string = undefined;\r\n  isAddChooseOption = false;\r\n  allClientErrors: ErrorModel[] = [];\r\n  groupedAllClientErrors: ViewErrorModel[] = [];\r\n  groupedAllClientWarning: ViewErrorModel[] = [];\r\n  groupedAllServerErrors: ViewErrorModel[] = [];\r\n  groupedAllServerWarning: ViewErrorModel[] = [];\r\n  allClientWarnings: ErrorModel[] = [];\r\n  isShowClickMoreDetailNoteForClientErrors = false;\r\n  isShowClickMoreDetailNoteForClientWarning = false;\r\n  isShowClickMoreDetailNoteForServerErrors = false;\r\n  isShowClickMoreDetailNoteForServerWarning = false;\r\n\r\n  // subscription\r\n  unitChangeSubscription: Subscription;\r\n  temperatureChangeSubscription: Subscription;\r\n\r\n  // constructor\r\n  constructor(\r\n    private readonly controlBaseService: ControlBaseService,\r\n    private readonly unitButtonService: UnitButtonService,\r\n    private readonly temperatureButtonService: TemperatureButtonService,\r\n    private readonly dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\r\n    private readonly dashSizeDetailsService: DashSizeDetailsService,\r\n    private readonly helperService: HelperService,\r\n    private readonly arWrDropDownDataService: ArWrDropDownDataService\r\n  ) {\r\n    // unit change update calculator values handler\r\n    this.onUnitChangeUpdateCalculator();\r\n    // temperature change update calculator values handler\r\n    this.onTemperatureChangeUpdateCalculator();\r\n\r\n  }\r\n\r\n  // component init handler\r\n  ngOnInit(): void {\r\n    if (this.isWrAr) {\r\n      this.supportEmail = supportEmail.EmailWrAr;\r\n    }\r\n    else {\r\n      this.supportEmail = supportEmail.EmailPressIn;\r\n    }\r\n\r\n    // form value changes perform operations\r\n    // debounce keystroke events          \r\n    this.formValueChangesSubscription = this.form.valueChanges.pipe(debounceTime(1000)).subscribe((newValue) => {\r\n      this.getClientErrorsValidations;\r\n      this.getClientWarnings;\r\n\r\n      if (this.isWrAr) {\r\n        this.formValueChange.emit();\r\n      }\r\n    });\r\n\r\n    // Old code to subscibe the form value changes\r\n    // // this.formValueChangesSubscription = this.form.valueChanges.subscribe(val => {\r\n    // //   this.getClientErrorsValidations;\r\n    // //   this.getClientWarnings;\r\n\r\n    // //   if (this.isWrAr) {\r\n    // //     this.formValueChange.emit();\r\n    // //   }\r\n    // // });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  // get required validation\r\n  get isRequired(): boolean {\r\n    let isReq = false;\r\n    // form control objects keys\r\n    const formControlKeys = Object.keys(this.form.controls);\r\n    // loop through the controls and \r\n    for (let formControlKey of formControlKeys) {\r\n      if (this.form.controls[formControlKey].errors?.required) {// required true\r\n        isReq = this.form.controls[formControlKey].errors.required; // true\r\n        break;\r\n      }\r\n    }\r\n    return isReq;\r\n  }\r\n\r\n  /* property to get all client side form control errors and client error that need to show in \r\n  client error div but allow calculator calculation */\r\n  get getClientErrorsValidations(): ErrorModel[] {\r\n    this.allClientErrors = [];\r\n    const controlErrorsArr: ErrorModel[] = [];\r\n    // form control objects keys\r\n    const formControlKeys = Object.keys(this.form.controls);\r\n    // loop through the controls and \r\n    for (let index = 0; index < formControlKeys.length; index++) {\r\n      // skip required error\r\n      if (this.form.controls[formControlKeys[index]].errors?.required) { // required true\r\n        continue;\r\n      }\r\n\r\n      // get control errors\r\n      const controlErrors: any = this.form.controls[formControlKeys[index]].errors ? (this.form.controls[formControlKeys[index]].errors) : null;\r\n      if (controlErrors instanceof ErrorModel) {\r\n        // skip warnings that setted to form control and warnings that doesnot allow user to submit the form \r\n        if (controlErrors && controlErrors.type === ErrorTypes.Error) {\r\n          controlErrorsArr.push(controlErrors as ErrorModel);\r\n        }\r\n      }\r\n      else if (controlErrors) {\r\n        const errorKeys = Object.keys(controlErrors);\r\n        for (let index = 0; index < errorKeys.length; index++) {\r\n          const error: ErrorModel = controlErrors[errorKeys[index]] as ErrorModel;\r\n          // skip warnings that setted to form control and warnings that doesnot allow user to submit the form \r\n          if (error && error.type === ErrorTypes.Error) {\r\n            controlErrorsArr.push(error);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // merge client errors and custom client validations\r\n    this.allClientErrors = Array.from(new Set(this.clientErrors.concat(controlErrorsArr)));\r\n\r\n    // groupe the errors by error title\r\n    this.helperService.groupClientErrors(this.allClientErrors).then((groupedErrors: ViewErrorModel[]) => {\r\n      // show and hide the more detail note\r\n      const titledErrors = groupedErrors.filter(e => {\r\n        if (e && e.title) {\r\n          return e;\r\n        }\r\n      });\r\n      this.isShowClickMoreDetailNoteForClientErrors = titledErrors.length > 0 ? true : false;\r\n\r\n      this.groupedAllClientErrors = groupedErrors;\r\n    });\r\n\r\n    this.allClientErrors = this.allClientErrors.slice();\r\n    return this.allClientErrors;\r\n  }\r\n\r\n  // property to get client side form warnings \r\n  // some warning preventing form submission means do not allow user to perform form submission\r\n  // some warnings are just informative and allow to submit form\r\n  get getClientWarnings(): ErrorModel[] {\r\n    this.allClientWarnings = [];\r\n    const controlErrorsAsWarningArr: ErrorModel[] = [];\r\n    // form control objects keys\r\n    const formControlKeys = Object.keys(this.form.controls);\r\n    // loop through the controls and \r\n    for (let index = 0; index < formControlKeys.length; index++) {\r\n      // skip required error\r\n      if (this.form.controls[formControlKeys[index]].errors?.required) // required true\r\n      {\r\n        continue;\r\n      }\r\n\r\n      // get warnings that setted to form control and warnings that doesnot allow user to submit the form \r\n      const controlErrorAsWarnings: any = this.form.controls[formControlKeys[index]].errors ? (this.form.controls[formControlKeys[index]].errors as ErrorModel) : null;\r\n      if (controlErrorAsWarnings instanceof ErrorModel) {\r\n        if (controlErrorAsWarnings && controlErrorAsWarnings.type === ErrorTypes.Warning) {\r\n          controlErrorsAsWarningArr.push(controlErrorAsWarnings as ErrorModel);\r\n        }\r\n      }\r\n      else if (controlErrorAsWarnings) {\r\n        const errorKeys = Object.keys(controlErrorAsWarnings);\r\n        for (let index = 0; index < errorKeys.length; index++) {\r\n          const warning: ErrorModel = controlErrorAsWarnings[errorKeys[index]] as ErrorModel;\r\n          // skip warnings that setted to form control and warnings that doesnot allow user to submit the form \r\n          if (warning && warning.type === ErrorTypes.Warning) {\r\n            controlErrorsAsWarningArr.push(warning);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.allClientWarnings = Array.from(new Set(this.clientWarnings.concat(controlErrorsAsWarningArr)));\r\n\r\n    // group the warnings with field, title\r\n    this.helperService.groupClientErrors(this.allClientWarnings).then((groupedErrors: ViewErrorModel[]) => {\r\n      // show and hide the more detail note\r\n      const titledErrors = groupedErrors.filter(e => {\r\n        if (e && e.title) {\r\n          return e;\r\n        }\r\n      });\r\n      this.isShowClickMoreDetailNoteForClientWarning = titledErrors.length > 0 ? true : false;\r\n\r\n      this.groupedAllClientWarning = groupedErrors;\r\n    });\r\n\r\n    this.allClientWarnings = this.allClientWarnings.slice();\r\n    return this.allClientWarnings;\r\n  }\r\n\r\n  // calculated output result errror\r\n  checkErrorOnCalculatedResult(formControl: FormControlModel): boolean {\r\n    let isError = false;\r\n\r\n    if (formControl.sub_type !== ControlSubType.calculated_label) {\r\n      return isError;\r\n    }\r\n\r\n    const serverErrorIndex = this.serverErrors.findIndex((se: ErrorModel) => {\r\n      return se.field === formControl.key;\r\n    });\r\n\r\n    const serverWarningIndex = this.serverWarnings.findIndex((se: ErrorModel) => {\r\n      return se.field === formControl.key;\r\n    });\r\n\r\n    if (serverErrorIndex > -1 || serverWarningIndex > -1) {\r\n      isError = true;\r\n    }\r\n\r\n    return isError;\r\n  }\r\n\r\n  // helper methods\r\n  // columnWidth \r\n  // param => columnLength => accepts number of columns in a row\r\n  // returns the bootstrap col classes with equal width\r\n  columnWidth(columnLength: number, classes?: string[]): string {\r\n    let classesStr = \"\";\r\n    if (classes) {\r\n      classesStr = classes.join(' ');\r\n    }\r\n    const colWidth = this.getSizeNumber(columnLength);\r\n    return `col-12 \tcol-sm-12 \tcol-md-${colWidth} \tcol-lg-${colWidth} \tcol-xl-${colWidth} ${classesStr}`;\r\n  };\r\n\r\n  // column column size\r\n  getSizeNumber(columnLength: number): number {\r\n    return this.controlBaseService.getColumnNumber(columnLength)\r\n  }\r\n\r\n  // show client error\r\n  onShowClientError(index: number): boolean {\r\n    return this.allClientErrors[index].isDetailOpened = !this.allClientErrors[index].isDetailOpened;\r\n  }\r\n\r\n  // show grouped client error\r\n  onShowGroupedClientError(index: number): boolean {\r\n    return this.groupedAllClientErrors[index].isDetailOpened = !this.groupedAllClientErrors[index].isDetailOpened;\r\n  }\r\n\r\n  // show grouped client warning\r\n  onShowGroupedClientWarning(index: number): boolean {\r\n    return this.groupedAllClientWarning[index].isDetailOpened = !this.groupedAllClientWarning[index].isDetailOpened;\r\n  }\r\n\r\n  // show client warning\r\n  onShowClientWarning(index: number): boolean {\r\n    return this.allClientWarnings[index].isDetailOpened = !this.allClientWarnings[index].isDetailOpened;\r\n  }\r\n\r\n  // show server error\r\n  onShowServerError(index: number): boolean {\r\n    return this.serverErrors[index].isDetailOpened = !this.serverErrors[index].isDetailOpened;\r\n  }\r\n\r\n  // show grouped server Error\r\n  onShowGroupedServerError(index: number): boolean {\r\n    return this.groupedAllServerErrors[index].isDetailOpened = !this.groupedAllServerErrors[index].isDetailOpened;\r\n  }\r\n\r\n  // show server warning\r\n  onShowServerWarning(index: number): boolean {\r\n    return this.serverWarnings[index].isDetailOpened = !this.serverWarnings[index].isDetailOpened;\r\n  }\r\n\r\n  // show grouped server warning\r\n  onShowGroupedServerWarning(index: number): boolean {\r\n    return this.groupedAllServerWarning[index].isDetailOpened = !this.groupedAllServerWarning[index].isDetailOpened;\r\n  }\r\n\r\n  // get dropdownlist options\r\n  getDDLOptions(formControlKey: string, ddlType: string, listItem: any[] = []) {\r\n    let ddlOptions: FormControlModel[] = [];\r\n    let tempDDLItems: FormControlModel[] = [];\r\n    let isMaterialChoice: boolean = false;\r\n\r\n    switch (ddlType) {\r\n      case ControlSubType.material_choice_dropdown:\r\n        isMaterialChoice = true;\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.MaterialChoiceDropdown;\r\n        this.isAddChooseOption = true;\r\n        ddlOptions = [...this.helperService.getMaterialChoiceList(formControlKey)];\r\n        break;\r\n      case ControlSubType.arWrPumptypeDropdown:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrPumptypeDropdown);\r\n        break;\r\n      case ControlSubType.arWrComponenttypeDropdown:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrComponenttypeDropdown);\r\n        break;\r\n      case ControlSubType.arWrCompositetypeDropdown:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        // // tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrCompositetypeDropdown);\r\n        // list item or options are passed from calculator option property        \r\n        if (listItem && listItem.length > 0) {\r\n          tempDDLItems = [...tempDDLItems, ...listItem];\r\n        }\r\n        break;\r\n      case ControlSubType.arWrInterFerenceTargetPressInDropdown:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrInterFerenceTargetPressInDropdown);\r\n        break;\r\n      case ControlSubType.arWrClearanceTargetDropdown:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrClearanceTargetDropdown);\r\n        break;\r\n      case ControlSubType.arWrRotatingMaterial:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrRotatingMaterial);\r\n        break;\r\n      case ControlSubType.arWrStationaryMaterial:\r\n        this.dropdownChooseOptionLabel = DropdownChooseOptionTitle.DefaultDropdown;\r\n        this.isAddChooseOption = true;\r\n        tempDDLItems = this.arWrDropDownDataService.getDropdownsItemsByKey(ControlSubType.arWrStationaryMaterial);\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n\r\n    if (!isMaterialChoice) {\r\n      ddlOptions = this.helperService.getDropdownItems(formControlKey, tempDDLItems);\r\n    }\r\n    return ddlOptions;\r\n  }\r\n\r\n  // unit change update output values handler\r\n  onUnitChangeUpdateCalculator() {\r\n    // unit switch button click/change subscription\r\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\r\n      if (x) {\r\n        // update units of labels of inputs and labels \r\n        this.dynamicFormTwoColumnLayoutService.updateUnitOfInputControlLabels(x);\r\n        // convert form output labels\r\n        this.dynamicFormTwoColumnLayoutService.convertOutputLabel(x);\r\n      }\r\n    });\r\n  }\r\n\r\n  // temperature change update output values handler\r\n  onTemperatureChangeUpdateCalculator() {\r\n    // unit switch button click/change subscription\r\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\r\n      if (x) {\r\n        this.dynamicFormTwoColumnLayoutService.updateTemperatureOfInputControlLabels(x);\r\n      }\r\n    });\r\n  }\r\n\r\n  // button click handler\r\n  buttonClick(e: any, formControl: FormControlModel) {\r\n    // form control type button value work as key for action method\r\n    switch (formControl.value) {\r\n      case ButtonActionKeys.DashSizeDetail:\r\n        // get dash sizes from server\r\n        this.dashSizeDetailsService.getDashSizeDetails().subscribe((oRingSizes: ORingSizesModel) => {\r\n          if (oRingSizes) {\r\n            // send value to subject so subscribers can get the value\r\n            this.dashSizeDetailsService.sendORingSizes(oRingSizes);\r\n            // open the modal of dashSizes\r\n            const dashSizeDetailsComponentModalRef = this.helperService.openNgbModal(DashSizeDetailsComponent);\r\n            // row click event subscription\r\n            dashSizeDetailsComponentModalRef.componentInstance.dashSizeRowClick.subscribe((x: ORingSizesDetailModel) => {\r\n              if (x) {\r\n                this.bindFormControlForORingDashSizes(x);\r\n              }\r\n              dashSizeDetailsComponentModalRef.close();\r\n            });\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // bind form controls based in the dash size selection\r\n  private bindFormControlForORingDashSizes(dashSizes: ORingSizesDetailModel) {\r\n    this.form.patchValue({\r\n      dashSize: (+dashSizes.dashSize).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3),\r\n      oringCrossSectionNominal: (+dashSizes.oringCrossSectionSize).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3),\r\n      oringIdNominal: (+dashSizes.oringDiameterSize).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3),\r\n      glandIdNominal: (+dashSizes.glandIdSize).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3),\r\n      glandIdTolerance: (+dashSizes.glandIdTolerance).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)\r\n    });\r\n  }\r\n\r\n  // dropdown selection change handler\r\n  // perform any operation on dropdown value changes\r\n  onDropdownSelectionChange(event: DropDownChangeModel) {\r\n    const controlKey = `custom${event.formControl.key.replace(event.formControl.key[0], event.formControl.key[0].toUpperCase())}`;\r\n    const fc = this.form.controls[controlKey];\r\n    if (fc) {\r\n      // when dropdown selected item value is null \r\n      // then enable the custom input with id/key 'custom+{{dropdown key}}'\r\n      if (event.value !== null && event.value && event.value.value > 0) { // standard \r\n        fc.setValue(\"\");\r\n        fc.disable();\r\n      }\r\n      else { // custom\r\n        fc.enable();\r\n      }\r\n    }\r\n    this.dropdownSelectionChange.emit(event);\r\n  }\r\n\r\n  // numeric value change handler\r\n  // perform any operation on dropdown value changes\r\n  onNumericInputValueChange(event: any) {\r\n    // event is typeof FormControl\r\n    this.numericInputValueChange.emit(event);\r\n  }\r\n\r\n  // on focus out event of the numeric input\r\n  onFocusOut(event: any) {\r\n    this.focusOut.emit(event);\r\n  }\r\n\r\n  // on component destriy handler\r\n  ngOnDestroy(): void {\r\n    if (this.unitChangeSubscription) {\r\n      this.unitChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.temperatureChangeSubscription) {\r\n      this.temperatureChangeSubscription.unsubscribe();\r\n    }\r\n    if (this.formValueChangesSubscription) {\r\n      this.formValueChangesSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"sms-section\" [formGroup]=\"form\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 p-0\">\r\n                <h2 class=\"cal-heading\">{{calculatorJSON.display_calculator_title}}</h2>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!-- left side / first column reactive form part -->\r\n            <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 no-padding\">\r\n                <div class=\"row {{row.css_classes.join(' ')}}\"\r\n                    [ngClass]=\"{'sms-section__heading': rowIndex === 0, 'sms-section__inputs':rowIndex !== 0}\"\r\n                    *ngFor=\"let row of calculatorJSON.form.left_column.form_layout_row; let rowIndex = index;\">\r\n                    <ng-container *ngFor=\"let column of row.form_layout_columns;let columnIndex = index;\">\r\n                        <ng-container *ngFor=\"let control of column.form_controls\">\r\n                            <div *ngIf=\"control.show\" [ngSwitch]=\"control.type\"\r\n                                [ngClass]=\"{'sms-section__label': (control.type === controlType.label && columnIndex === 0), 'form-group':(rowIndex !== 0 && columnIndex !== 0 && columnIndex !== row.form_layout_columns.length-1 && control.type !== controlType.button), 'sms-section__range fw-600': (columnIndex !== 0 && columnIndex !== row.form_layout_columns.length-1 && control.type !== controlType.button && control.type !== controlType.dropdown), 'red':checkErrorOnCalculatedResult(control) }\">\r\n                                <!-- textbox -->\r\n                                <!-- label container -->\r\n                                <ng-container *ngSwitchCase=\"controlType.label\">\r\n                                    <ng-container\r\n                                        *ngIf=\"control.sub_type !== controlSubType.calculated_label && control.label === ''\">\r\n                                        &nbsp;\r\n                                    </ng-container>\r\n                                    <ng-container\r\n                                        *ngIf=\"control.label !== '' && control.sub_type !== controlSubType.temperatureLabel && control.sub_type !== controlSubType.degreeLabel\">\r\n                                        <span class=\"{{control.css_classes?.join(' ')}}\">{{control.sub_type ===\r\n                                            controlSubType.temperatureLabel ? \"\" :control.label}}</span>\r\n                                        <!-- required star * span -->\r\n                                        <span class=\"required\"\r\n                                            *ngIf=\"control.required && rowIndex !== 0 && columnIndex === 0\">*</span>\r\n                                    </ng-container>\r\n                                    <!-- Temperature span -->\r\n                                    <span class=\"float-left\"\r\n                                        *ngIf=\"control.sub_type === controlSubType.temperatureLabel\"\r\n                                        [innerHTML]=\"control.label\"></span>\r\n                                    <!-- Degree Label -->\r\n                                    <span class=\"float-left\" *ngIf=\"control.sub_type === controlSubType.degreeLabel\"\r\n                                        [innerHTML]=\"control.label\"></span>\r\n                                </ng-container>\r\n                                <custom-textbox *ngSwitchCase=\"controlType.textbox\" [control]=\"control\" [form]=\"form\"\r\n                                    [isFormSubmitted]=\"isSubmitted\">\r\n                                </custom-textbox>\r\n                                <!-- numeric textbox -->\r\n                                <custom-numeric-textbox *ngSwitchCase=\"controlType.numerictextbox\" [control]=\"control\"\r\n                                    [form]=\"form\" [isFormSubmitted]=\"isSubmitted\"\r\n                                    [isFormatInputOnBlur]=\"(control.sub_type === controlSubType.temperature || control.sub_type === controlSubType.degree) ? false : true\"\r\n                                    [isNegetiveNumber]=\"control.sub_type === controlSubType.temperature ? true : false\"\r\n                                    [maxLength]=\"control.sub_type === controlSubType.degree ? 2 : 6\"\r\n                                    [decimalPoint]=\"control.decimal_point ? control.decimal_point : decimalPoint\"\r\n                                    [isUpdateDecimalPointOnUnitChange]=\"isUpdateDecimalPointOnUnitChange\"\r\n                                    [clientErrors]=\"allClientErrors\" [clientWarnings]=\"allClientWarnings\"\r\n                                    [serverErrors]=\"serverErrors\" [serverWarnings]=\"serverWarnings\"\r\n                                    (valueChange)=\"onNumericInputValueChange($event)\" (focusOut)=\"onFocusOut($event)\">\r\n                                </custom-numeric-textbox>\r\n                                <!-- dropdown -->\r\n                                <custom-drop-down *ngSwitchCase=\"controlType.dropdown\" [control]=\"control\" [form]=\"form\"\r\n                                    [isFormSubmitted]=\"isSubmitted\"\r\n                                    [options]=\"control.options && control.options.length > 0 ? getDDLOptions(control.key,control.sub_type,control.options) :  getDDLOptions(control.key,control.sub_type)\"\r\n                                    [isAddChooseOption]=\"isAddChooseOption\"\r\n                                    [chooseOptionLabel]=\"dropdownChooseOptionLabel\"\r\n                                    (selectionChange)=\"onDropdownSelectionChange($event)\"\r\n                                    (focusOut)=\"onFocusOut($event)\">\r\n                                </custom-drop-down>\r\n                                <ng-container *ngSwitchCase=\"controlType.button\">\r\n                                    <!-- normal button -->\r\n                                    <button *ngIf=\"control.sub_type === controlSubType.button\" [type]=\"control.sub_type\"\r\n                                        class=\"{{control.css_classes?.join(' ')}}\"\r\n                                        (click)=\"buttonClick($event,control)\">{{control.label}}</button>\r\n                                    <!-- button type submit submit button -->\r\n                                    <button *ngIf=\"control.sub_type !== controlSubType.button\" [type]=\"control.sub_type\"\r\n                                        class=\"{{control.css_classes?.join(' ')}}\">{{control.label}}</button>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <!-- right side / second column reactive form part -->\r\n            <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                <div class=\"row {{row.css_classes.join(' ')}}\"\r\n                    [ngClass]=\"{'sms-section__heading': rowIndex === 0, 'sms-section__inputs':rowIndex !== 0}\"\r\n                    *ngFor=\"let row of calculatorJSON.form.right_column.form_layout_row; let rowIndex = index;\">\r\n                    <ng-container class={{column?.css_classes}}\r\n                        *ngFor=\"let column of row.form_layout_columns;let columnIndex = index;\">\r\n                        <ng-container *ngFor=\"let control of column.form_controls\">\r\n                            <div *ngIf=\"control.show\" [ngSwitch]=\"control.type\"\r\n                                [ngClass]=\"{'sms-section__label': (control.type === controlType.label && columnIndex === 0 && control.sub_type !== controlSubType.temperatureLabel), 'form-group':(rowIndex !== 0 && columnIndex !== 0 && columnIndex !== row.form_layout_columns.length-1 && control.type !== controlType.button), 'sms-section__range fw-600': (columnIndex !== 0 && columnIndex !== row.form_layout_columns.length-1 && control.type !== controlType.button && control.type !== controlType.html), 'red':checkErrorOnCalculatedResult(control) }\">\r\n                                <!-- label container -->\r\n                                <ng-container *ngSwitchCase=\"controlType.label\">\r\n                                    <ng-container\r\n                                        *ngIf=\"control.sub_type !== controlSubType.calculated_label && control.label === ''\">\r\n                                        &nbsp;\r\n                                    </ng-container>\r\n                                    <ng-container\r\n                                        *ngIf=\"control.label !== '' && control.sub_type !== controlSubType.temperatureLabel && control.sub_type !== controlSubType.degreeLabel\">\r\n                                        {{control.sub_type === controlSubType.temperatureLabel ? \"\" :control.label}}\r\n                                        <!-- required star * span -->\r\n                                        <span class=\"required\"\r\n                                            *ngIf=\"control.required && rowIndex !== 0 && columnIndex === 0\">*</span>\r\n                                    </ng-container>\r\n                                    <!-- Temperature span -->\r\n                                    <span class=\"float-left\"\r\n                                        *ngIf=\"control.sub_type === controlSubType.temperatureLabel\"\r\n                                        [innerHTML]=\"control.label\"></span>\r\n                                    <!-- Degree Label -->\r\n                                    <span class=\"float-left\" *ngIf=\"control.sub_type === controlSubType.degreeLabel\"\r\n                                        [innerHTML]=\"control.label\"></span>\r\n                                </ng-container>\r\n                                <!-- custom textbox -->\r\n                                <custom-textbox *ngSwitchCase=\"controlType.textbox\" [control]=\"control\" [form]=\"form\"\r\n                                    [isFormSubmitted]=\"isSubmitted\">\r\n                                </custom-textbox>\r\n                                <!-- numeric textbox -->\r\n                                <custom-numeric-textbox *ngSwitchCase=\"controlType.numerictextbox\" [control]=\"control\"\r\n                                    [form]=\"form\" [isFormSubmitted]=\"isSubmitted\"\r\n                                    [isFormatInputOnBlur]=\"(control.sub_type === controlSubType.temperature || control.sub_type === controlSubType.degree) ? false : true\"\r\n                                    [isNegetiveNumber]=\"control.sub_type === controlSubType.temperature ? true : false\"\r\n                                    [maxLength]=\"control.sub_type === controlSubType.degree ? 2 : 6\"\r\n                                    [decimalPoint]=\"control.decimal_point ? control.decimal_point : decimalPoint\"\r\n                                    [isUpdateDecimalPointOnUnitChange]=\"isUpdateDecimalPointOnUnitChange\"\r\n                                    [clientErrors]=\"allClientErrors\" [clientWarnings]=\"allClientWarnings\"\r\n                                    [serverErrors]=\"serverErrors\" [serverWarnings]=\"serverWarnings\"\r\n                                    (valueChange)=\"onNumericInputValueChange($event)\" (focusOut)=\"onFocusOut($event)\">\r\n                                </custom-numeric-textbox>\r\n                                <!-- HTML -->\r\n                                <ng-container *ngSwitchCase=\"controlType.html\">\r\n                                    <span [innerHTML]=\"control.label\"></span>\r\n                                </ng-container>\r\n                                <!-- dropdown -->\r\n                                <custom-drop-down *ngSwitchCase=\"controlType.dropdown\" [control]=\"control\" [form]=\"form\"\r\n                                    [isFormSubmitted]=\"isSubmitted\"\r\n                                    [options]=\"control.options && control.options.length > 0 ? getDDLOptions(control.key,control.sub_type,control.options) :  getDDLOptions(control.key,control.sub_type)\"\r\n                                    [isAddChooseOption]=\"isAddChooseOption\"\r\n                                    [chooseOptionLabel]=\"dropdownChooseOptionLabel\"\r\n                                    (selectionChange)=\"onDropdownSelectionChange($event)\"\r\n                                    (focusOut)=\"onFocusOut($event)\">\r\n                                </custom-drop-down>\r\n                                <ng-container *ngSwitchCase=\"controlType.button\">\r\n                                    <!-- normal button -->\r\n                                    <button *ngIf=\"control.sub_type === controlSubType.button\" [type]=\"control.sub_type\"\r\n                                        class=\"{{control.css_classes?.join(' ')}}\"\r\n                                        (click)=\"buttonClick($event,control)\">{{control.label}}</button>\r\n                                    <!-- button type submit submit button -->\r\n                                    <button *ngIf=\"control.sub_type !== controlSubType.button\" [type]=\"control.sub_type\"\r\n                                        class=\"{{control.css_classes?.join(' ')}}\">{{control.label}}</button>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Client side Errors -->\r\n<div class=\"error-message\" *ngIf=\"isSubmitted && isRequired\">\r\n    <!-- {{\"Please enter a valid value for the fields highlighted in red.\"}} -->\r\n    {{\"Please enter a value for required(*) fields.\"}}\r\n</div>\r\n<!-- For ArWr -->\r\n<div *ngIf=\"isWrAr && isSubmitted && (groupedAllClientErrors.length > 0 || groupedAllServerErrors && groupedAllServerErrors.length > 0)\"\r\n    class=\"error-message\">\r\n    <!-- client side grouped errors -->\r\n    <div *ngFor=\"let gError of groupedAllClientErrors; let gErrorIndex=index;\" class=\"error-body\">\r\n        <ng-container *ngIf=\"gError.title\">\r\n            <div>\r\n                <strong>{{gError.title}}</strong>\r\n            </div>\r\n            <div>\r\n                <ng-container *ngFor=\"let error of gError.errors\">\r\n                    {{error}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gError.title\">\r\n            <ng-container *ngFor=\"let error of gError.errors\">\r\n                <div class=\"\">\r\n                    {{error}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <!-- grouped server errors -->\r\n    <div *ngFor=\"let gServerError of groupedAllServerErrors; let gServerErrorIndex=index;\" class=\"error-body\">\r\n        <ng-container *ngIf=\"gServerError.title\">\r\n            <div>\r\n                <strong>{{gServerError.title}}</strong>\r\n            </div>\r\n            <div>\r\n                <ng-container *ngFor=\"let error of gServerError.errors\">\r\n                    {{error}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gServerError.title\">\r\n            <ng-container *ngFor=\"let error of gServerError.errors\">\r\n                <div class=\"\">\r\n                    {{error}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- warnings -->\r\n<div *ngIf=\"isWrAr && isSubmitted && ((groupedAllClientWarning && groupedAllClientWarning.length > 0) || (groupedAllServerWarning && groupedAllServerWarning.length > 0))\"\r\n    class=\"warning-message\">\r\n    <!-- client side grouped warnings -->\r\n    <div *ngFor=\"let gWarning of groupedAllClientWarning; let gWarningIndex=index;\" class=\"\">\r\n        <ng-container *ngIf=\"gWarning.title\">\r\n            <div>\r\n                <strong>{{gWarning.title}}</strong>\r\n            </div>\r\n            <div>\r\n                <ng-container *ngFor=\"let warning of gWarning.errors\">\r\n                    {{warning}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gWarning.title\">\r\n            <ng-container *ngFor=\"let warning of gWarning.errors\">\r\n                <div class=\"\">\r\n                    {{warning}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <!-- Grouped Server side warnings -->\r\n    <div *ngFor=\"let gServerWarning of groupedAllServerWarning; let gServerWarningIndex=index;\" class=\"\">\r\n        <ng-container *ngIf=\"gServerWarning.title\">\r\n            <div *ngIf=\"gServerWarning.title\">\r\n                <strong>{{gServerWarning.title}}</strong>\r\n            </div>\r\n            <div>\r\n                <ng-container *ngFor=\"let warning of gServerWarning.errors\">\r\n                    {{warning}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gServerWarning.title\">\r\n            <ng-container *ngFor=\"let warning of gServerWarning.errors\">\r\n                <div class=\"\">\r\n                    {{warning}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- For Other -->\r\n<!-- client side grouped errors -->\r\n<div *ngIf=\"!isWrAr && isSubmitted && groupedAllClientErrors.length > 0\" class=\"error-message\">\r\n    <div *ngIf=\"isShowClickMoreDetailNoteForClientErrors\" class=\"error-message__note\">\r\n        Click '<span>+</span>' for more details\r\n    </div>\r\n    <div *ngFor=\"let gError of groupedAllClientErrors; let gErrorIndex=index;\" class=\"error-body error-message__body\">\r\n        <ng-container *ngIf=\"gError.title\">\r\n            <div (click)=\"onShowGroupedClientError(gErrorIndex)\" [ngClass]=\"{'selected': gError.isDetailOpened}\">\r\n                <strong title=\"Click for more details\">{{gError.title}}</strong>\r\n            </div>\r\n            <div *ngIf=\"gError.isDetailOpened\">\r\n                <ng-container *ngFor=\"let error of gError.errors\">\r\n                    {{error}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gError.title\">\r\n            <ng-container *ngFor=\"let error of gError.errors\">\r\n                <div class=\"\">\r\n                    {{error}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- client side grouped warnings -->\r\n<div *ngIf=\"!isWrAr && isSubmitted && groupedAllClientWarning.length > 0\" class=\"warning-message\">\r\n    <div *ngIf=\"isShowClickMoreDetailNoteForClientWarning\" class=\"error-message__note\">\r\n        Click '<span>+</span>' for more details\r\n    </div>\r\n    <div *ngFor=\"let gWarning of groupedAllClientWarning; let gWarningIndex=index;\" class=\"warning-message__body\">\r\n        <ng-container *ngIf=\"gWarning.title\">\r\n            <div (click)=\"onShowGroupedClientWarning(gWarningIndex)\" [ngClass]=\"{'selected': gWarning.isDetailOpened}\">\r\n                <strong title=\"Click for more details\">{{gWarning.title}}</strong>\r\n            </div>\r\n            <div *ngIf=\"gWarning.isDetailOpened\">\r\n                <ng-container *ngFor=\"let warning of gWarning.errors\">\r\n                    {{warning}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gWarning.title\">\r\n            <ng-container *ngFor=\"let warning of gWarning.errors\">\r\n                <div class=\"\">\r\n                    {{warning}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- grouped server errors -->\r\n<div *ngIf=\"!isWrAr && isSubmitted && groupedAllServerErrors && groupedAllServerErrors.length > 0\"\r\n    class=\"error-message\">\r\n    <div *ngIf=\"isShowClickMoreDetailNoteForServerErrors\" class=\"error-message__note\">\r\n        Click '<span>+</span>' for more details</div>\r\n    <div *ngFor=\"let gServerError of groupedAllServerErrors; let gServerErrorIndex=index;\"\r\n        class=\"error-body error-message__body\">\r\n        <ng-container *ngIf=\"gServerError.title\">\r\n            <div (click)=\"onShowGroupedServerError(gServerErrorIndex)\"\r\n                [ngClass]=\"{'selected': gServerError.isDetailOpened}\">\r\n                <strong title=\"Click for more details\">{{gServerError.title}}</strong>\r\n            </div>\r\n            <div *ngIf=\"gServerError.isDetailOpened\">\r\n                <ng-container *ngFor=\"let error of gServerError.errors\">\r\n                    {{error}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gServerError.title\">\r\n            <ng-container *ngFor=\"let error of gServerError.errors\">\r\n                <div class=\"\">\r\n                    {{error}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- Grouped Server side warnings -->\r\n<div *ngIf=\"!isWrAr && isSubmitted && groupedAllServerWarning && groupedAllServerWarning.length > 0\"\r\n    class=\"warning-message\">\r\n    <div *ngIf=\"isShowClickMoreDetailNoteForServerWarning\" class=\"error-message__note\">\r\n        Click '<span>+</span>' for more details</div>\r\n    <div *ngFor=\"let gServerWarning of groupedAllServerWarning; let gServerWarningIndex=index;\"\r\n        class=\"warning-message__body\">\r\n        <ng-container *ngIf=\"gServerWarning.title\">\r\n            <div *ngIf=\"gServerWarning.title\" (click)=\"onShowGroupedServerWarning(gServerWarningIndex)\"\r\n                [ngClass]=\"{'selected': gServerWarning.isDetailOpened}\">\r\n                <strong title=\"Click for more details\">{{gServerWarning.title}}</strong>\r\n            </div>\r\n            <div *ngIf=\"gServerWarning.isDetailOpened\">\r\n                <ng-container *ngFor=\"let warning of gServerWarning.errors\">\r\n                    {{warning}}\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!gServerWarning.title\">\r\n            <ng-container *ngFor=\"let warning of gServerWarning.errors\">\r\n                <div class=\"\">\r\n                    {{warning}}\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<!-- Form Output -->\r\n<div class=\"container\">\r\n    <div class=\"row calculation-results\">\r\n        <ng-container *ngFor=\"let output of calculatorJSON.form_output; let outputIndex=index;\">\r\n            <div *ngIf=\"output.show\" class=\"{{output?.css_classes.join(' ')}}\">\r\n                <!-- <div class=\"{{columnWidth(calculatorJSON.form_output.length)}} {{output?.css_classes.join(' ')}}\"> -->\r\n                <!-- <div class=\"row {{output?.css_classes.join(' ')}}\"> -->\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 column\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                                <h3 class=\"cal-heading\">{{output.display_title}}&nbsp;{{output?.display_output_title}}\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngFor=\"let row of output.row;let rowIndex= index;\">\r\n                            <div *ngIf=\"(row.show != null || row.show != undefined ? row.show : true)\"\r\n                                class=\"row {{row.css_classes.join(' ')}}\"\r\n                                [ngClass]=\"{'calculation-results__heading': rowIndex === 0, 'calculation-results__outputs':true}\">\r\n                                <!-- 'calculation-results__outputs':rowIndex !== 0 -->\r\n                                <!-- show or hide output row -->\r\n                                <!-- <ng-container *ngIf=\"(row.show != null || row.show != undefined ? row.show : true)\"> -->\r\n                                <!-- output row columns -->\r\n                                <ng-container class={{column?.css_classes}}\r\n                                    *ngFor=\"let column of row.form_layout_columns; let columnIndex = index;\">\r\n                                    <ng-container *ngFor=\"let control of column.form_controls\">\r\n                                        <div *ngIf=\"control.show\" [ngSwitch]=\"control.type\"\r\n                                            [ngClass]=\"{'calculation-results__label': (control.type === controlType.label && columnIndex === 0), 'calculation-results__range fw-600': (columnIndex !== 0), 'red':checkErrorOnCalculatedResult(control) }\">\r\n                                            <!-- label output -->\r\n                                            <ng-container *ngSwitchCase=\"controlType.label\">\r\n                                                <ng-container\r\n                                                    *ngIf=\"control.label !== '' && control.sub_type !== controlSubType.temperatureLabel && control.sub_type !== controlSubType.degreeLabel\">\r\n                                                    {{control.sub_type === controlSubType.temperatureLabel ? \"\"\r\n                                                    :control.label}}\r\n                                                    <!-- required star * span -->\r\n                                                    <span class=\"required\"\r\n                                                        *ngIf=\"control.required && rowIndex !== 0 && columnIndex === 0\">*</span>\r\n                                                </ng-container>\r\n                                                <!-- Temperature span -->\r\n                                                <span *ngIf=\"control.sub_type === controlSubType.temperatureLabel\"\r\n                                                    [innerHTML]=\"control.label\"></span>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <!-- </ng-container> -->\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <!-- Additional notes -->\r\n    <div>&nbsp;</div>\r\n    <div *ngIf=\"notes.length === 1\" class=\"pt-1 pl-1 notes\">\r\n        <strong>Remark: </strong>{{notes[0]}}\r\n    </div>\r\n    <div *ngIf=\"notes.length > 1\" class=\"pt-1 pl-1 notes\">\r\n        <p><strong>Remarks:</strong></p>\r\n        <ul style=\"list-style-type:none;\" *ngFor=\"let note of notes\">\r\n            <li>{{note}}</li>\r\n        </ul>\r\n    </div>\r\n    <!-- Notes -->\r\n    <div *ngIf=\"isShowNotes\" class=\"row pt-2\">\r\n        <div class=\"col-12 col-sm-12 col-md-1 col-lg-1 col-xl-1\">\r\n            Notes:\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-11 col-lg-11 col-xl-11\">\r\n            <textarea name=\"txtAreaNotes\" id=\"txtAreaNotes\" cols=\"30\" rows=\"5\"></textarea>\r\n        </div>\r\n    </div>\r\n    <div class=\"row text-right mailto-button\">\r\n        <div class=\"col-12 col-lg-12 col-md-12 col-sm-12 col-xl-12\">\r\n            <!-- last column then add the mail to div -->\r\n            <a href=\"mailto:mhitchens@gtweed.com?subject=Submit RFQ\">Submit RFQ</a>\r\n            <a href=\"mailto:{{supportEmail}}?subject=Request Engineering Support\">Request\r\n                Engineering Support</a>\r\n        </div>\r\n    </div>\r\n</div>","// core imports\r\nimport { Injectable } from '@angular/core';\r\n// thirs party imports\r\nimport { BehaviorSubject } from 'rxjs';\r\n// application imports\r\nimport { CalculatorModel } from '../../models/calculator.model';\r\nimport { FormOutputModel } from '../../models/form-output.model';\r\nimport { FormRowModel } from '../../models/form-row.model';\r\nimport { SwitchButtonModel } from '../../models/switch-button.model';\r\nimport { TwoColumnFormModel } from '../../models/two_column_form.model';\r\nimport { Units, ControlSubType, Temperature } from '../../shared/helpers/constants';\r\nimport { HelperService } from \"../../shared/services/helper.service\";\r\nimport { FormControlModel } from '../../models/form-control.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicFormTwoColumnLayoutService {\r\n  private readonly calculatorSubject: BehaviorSubject<CalculatorModel> = new BehaviorSubject<CalculatorModel>(null);\r\n  readonly calculator$ = this.calculatorSubject.asObservable();\r\n\r\n  constructor(private helperService: HelperService) { }\r\n\r\n  private get calculator(): CalculatorModel {\r\n    return this.calculatorSubject.getValue();\r\n  }\r\n\r\n  private set calculator(val: CalculatorModel) {\r\n    this.calculatorSubject.next(val);\r\n  }\r\n\r\n  public get getCurrentValue() {\r\n    return this.calculator;\r\n  }\r\n\r\n  public sendCalculator(val: CalculatorModel) {\r\n    this.calculator = { ...val };\r\n  }\r\n\r\n  // show or hide controls based on options => Nominal, Tolerance and MinAndMax\r\n  showOrHideControlsBasedOnOption(selectedOption: number) {\r\n    // copy calculator data\r\n    let updateCalculator: CalculatorModel = { ...this.calculator };\r\n    // update selected option value\r\n    updateCalculator.toolbarOption.value = selectedOption.toString();\r\n    // copy calculator form data\r\n    const calculatorForm: TwoColumnFormModel = { ...this.calculator.form };\r\n    // set show flag of left column\r\n    const calculatorLeftColumnRows = this.setShowFlag(calculatorForm.left_column.form_layout_row, selectedOption);\r\n    // set show flag of right column\r\n    const calculatorRightColumnRows = this.setShowFlag(calculatorForm.right_column.form_layout_row, selectedOption);\r\n    // update updatedCalculatorForm object\r\n    const updatedCalculatorForm: TwoColumnFormModel = { ...calculatorForm, left_column: { form_layout_row: calculatorLeftColumnRows }, right_column: { form_layout_row: calculatorRightColumnRows } };\r\n    // form output \r\n    let formOutput: FormOutputModel[] = updateCalculator.form_output;\r\n    if (formOutput.length > 0) {\r\n      for (let index = 0; index < formOutput.length; index++) {\r\n        // copy form output object\r\n        let formOutputObj: FormOutputModel = { ...formOutput[index] };\r\n        // set show flag\r\n        const formOutputObjRow: FormRowModel[] = this.setShowFlag(formOutputObj.row, selectedOption);\r\n        // merge row of form output\r\n        formOutputObj = { ...formOutputObj, row: formOutputObjRow };\r\n        // update form output with updated show flag\r\n        formOutput[index] = formOutputObj;\r\n      }\r\n    }\r\n    // updated copied calculator object\r\n    updateCalculator = { ...updateCalculator, form: updatedCalculatorForm, form_output: formOutput };\r\n    this.calculator = { ...this.calculator, ...updateCalculator };\r\n  }\r\n\r\n  // update input controls units\r\n  updateUnitOfInputControlLabels(selectedUnit: SwitchButtonModel) {\r\n    // Immutable way of updating the object\r\n    let updateCalculator: CalculatorModel = { ...this.calculator };\r\n    // copy calculator form data\r\n    const calculatorForm: TwoColumnFormModel = { ...this.calculator.form };\r\n\r\n    // set unit of left column labels of input form\r\n    const calculatorLeftColumnRows = this.setUnit(calculatorForm.left_column.form_layout_row, selectedUnit);\r\n\r\n    // set unit of right column labels of input form\r\n    const calculatorRightColumnRows = this.setUnit(calculatorForm.right_column.form_layout_row, selectedUnit);\r\n\r\n    // set unit of calculated output\r\n    for (let index = 0; index < updateCalculator.form_output.length; index++) {\r\n      updateCalculator.form_output[index].row = this.setUnit(updateCalculator.form_output[index].row, selectedUnit);\r\n    }\r\n\r\n    // set pressure unit of the calculated output of pressure type output\r\n\r\n    // calculator form object\r\n    const updatedCalculatorForm: TwoColumnFormModel = { ...calculatorForm, left_column: { form_layout_row: calculatorLeftColumnRows }, right_column: { form_layout_row: calculatorRightColumnRows } };\r\n    updateCalculator = { ...updateCalculator, form: updatedCalculatorForm };\r\n    this.calculator = { ...updateCalculator };\r\n  }\r\n\r\n  // update temperature of label of temperature controls\r\n  updateTemperatureOfInputControlLabels(selectedTemperature: SwitchButtonModel) {\r\n    let updateCalculator: CalculatorModel = { ...this.calculator };\r\n    // copy calculator form data\r\n    const calculatorForm: TwoColumnFormModel = { ...this.calculator.form };\r\n    // set show flag of left column\r\n    const calculatorLeftColumnRows = this.setTemperature(calculatorForm.left_column.form_layout_row, selectedTemperature);\r\n    // set show flag of right column\r\n    const calculatorRightColumnRows = this.setTemperature(calculatorForm.right_column.form_layout_row, selectedTemperature);\r\n    // set unit of calculated output unit label update\r\n    for (let index = 0; index < updateCalculator.form_output.length; index++) {\r\n      updateCalculator.form_output[index].row = this.setTemperature(updateCalculator.form_output[index].row, selectedTemperature);\r\n    }\r\n    // calculator form object\r\n    const updatedCalculatorForm: TwoColumnFormModel = { ...calculatorForm, left_column: { form_layout_row: calculatorLeftColumnRows }, right_column: { form_layout_row: calculatorRightColumnRows } };\r\n    updateCalculator = { ...updateCalculator, form: updatedCalculatorForm };\r\n    this.calculator = { ...this.calculator, ...updateCalculator };\r\n  }\r\n\r\n  // form output label value from Inch to Millimeter and vice versa \r\n  convertOutputLabel(selectedUnit: SwitchButtonModel) {\r\n    // copy calculator data\r\n    let updateCalculator: CalculatorModel = { ...this.calculator };\r\n\r\n    // Convert left form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < updateCalculator.form.left_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < updateCalculator.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < updateCalculator.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = updateCalculator.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          // get fields key from resp data\r\n          if (formControl.sub_type === ControlSubType.calculated_label && formControl.label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            updateCalculator.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = (selectedUnit.id === Units.MILLI_METER ? this.helperService.convertToMillimeter((+formControl.label)) : this.helperService.convertToInch((+formControl.label)));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Comvert right form data\r\n    // loop through each form right column row\r\n    for (let rowIndex = 0; rowIndex < updateCalculator.form.right_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < updateCalculator.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < updateCalculator.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = updateCalculator.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          // get fields key from resp data\r\n          // const responseDataKeys = Object.keys(resp.data);\r\n          if (formControl.sub_type === ControlSubType.calculated_label && formControl.label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            updateCalculator.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = (selectedUnit.id === Units.MILLI_METER ? this.helperService.convertToMillimeter((+formControl.label)) : this.helperService.convertToInch((+formControl.label)));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.calculator = { ...this.calculator, ...updateCalculator };\r\n  }\r\n\r\n  // get default value of control\r\n  getDefaultControlValueFromCalculatorJSONConfig(formControlKey: string) {\r\n    // cpy calculator form data\r\n    const calculatorForm: TwoColumnFormModel = { ...this.calculator.form };\r\n    // left column\r\n    let fc: FormControlModel = this.getFormControl(calculatorForm.left_column.form_layout_row, formControlKey);\r\n    if (fc && fc.key && fc.defaultvalue) {\r\n      return fc.defaultvalue;\r\n    }\r\n    else {\r\n      // right column\r\n      fc = this.getFormControl(calculatorForm.right_column.form_layout_row, formControlKey);\r\n      if (fc && fc.key && fc.defaultvalue) {\r\n        return fc.defaultvalue;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set show flag of calculator config\r\n  private setShowFlag(rows: FormRowModel[], selectedOption: number) {\r\n    // iterate over left column rows\r\n    for (let row = 0; row < rows.length; row++) {\r\n      // iterate over left column columns\r\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\r\n        // iterate over left column controls\r\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\r\n          if (rows[row].form_layout_columns[column].form_controls[control].hasOwnProperty('show')) {\r\n            // controlGroup is an array which holds the options(Nominal = 1, Tolerance = 2 and MinandMax = 3) values on which we need to show the controls\r\n            const controlGroup: number[] = rows[row].form_layout_columns[column].form_controls[control]?.show_control_option;\r\n            if (controlGroup && controlGroup.length) { // has control group array\r\n              if (controlGroup.includes(selectedOption)) { // check form control belong to the controlGroup\r\n                rows[row].form_layout_columns[column].form_controls[control].show = true;\r\n              }\r\n              else {\r\n                rows[row].form_layout_columns[column].form_controls[control].show = false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  // set units\r\n  private setUnit(rows: FormRowModel[], selectedUnit: SwitchButtonModel) {\r\n    // iterate over left column rows\r\n    for (let row = 0; row < rows.length; row++) {\r\n      // iterate over left column columns\r\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\r\n        // iterate over column controls\r\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\r\n          // check control sub-type is unitLabel and update the label and value\r\n          if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.unitLabel) {\r\n            // set display label value\r\n            rows[row].form_layout_columns[column].form_controls[control].label = selectedUnit.display_Short_title;\r\n            if (Units.INCH === +(selectedUnit.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.INCH;\r\n            }\r\n            else if (Units.MILLI_METER === +(selectedUnit.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.MILLI_METER;\r\n            }\r\n            else {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.INCH;\r\n            }\r\n          }\r\n          else if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.cteUnitLabel) {\r\n            if (Units.INCH === +(selectedUnit.id)) {\r\n              // set display label value\r\n              rows[row].form_layout_columns[column].form_controls[control].label = \"in/in/°F\";\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.INCH;\r\n            }\r\n            else if (Units.MILLI_METER === +(selectedUnit.id)) {\r\n              // set display label value\r\n              rows[row].form_layout_columns[column].form_controls[control].label = \"mm/mm/°C\";\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.MILLI_METER;\r\n            }\r\n            else {\r\n              // set display label value\r\n              rows[row].form_layout_columns[column].form_controls[control].label = \"in/in/°F\";\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Units.INCH;\r\n            }\r\n          }\r\n\r\n          // check control sub-type is pressureLabel and update the label and value\r\n          if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.pressureLabel) {\r\n            // set display label value              \r\n            if (Units.MILLI_METER === +(selectedUnit.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].label = 'bar';\r\n            }\r\n            else {\r\n              rows[row].form_layout_columns[column].form_controls[control].label = 'psi';\r\n            }\r\n          }\r\n\r\n          // check control sub-type is outputHeaderUnitLabel and update the label and value\r\n          if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.outputHeaderUnitLabel) {\r\n            // set display label value              \r\n            if (Units.MILLI_METER === +(selectedUnit.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].label = 'mm';\r\n            }\r\n            else {\r\n              rows[row].form_layout_columns[column].form_controls[control].label = 'Inch';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  // set temperature lable\r\n  private setTemperature(rows: FormRowModel[], selectedTemperature: SwitchButtonModel) {\r\n    // iterate over left column rows\r\n    for (let row = 0; row < rows.length; row++) {\r\n      // iterate over left column columns\r\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\r\n        // iterate over column controls\r\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\r\n          // check control sub-type is unit and update the label and value\r\n          if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.temperatureLabel) {\r\n            // set display label value\r\n            rows[row].form_layout_columns[column].form_controls[control].label = selectedTemperature.display_Short_title;\r\n            if (Temperature.CELCIUS === +(selectedTemperature.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Temperature.CELCIUS;\r\n            }\r\n            else if (Temperature.FAHRENHEIT === +(selectedTemperature.id)) {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Temperature.FAHRENHEIT;\r\n            }\r\n            else {\r\n              rows[row].form_layout_columns[column].form_controls[control].value = Temperature.CELCIUS;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  // set convert output\r\n  private convertOutputToInchOrMillimeter(rows: FormRowModel[], selectedUnit: SwitchButtonModel) {\r\n    // iterate over left column rows\r\n    for (let row = 0; row < rows.length; row++) {\r\n      // iterate over left column columns\r\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\r\n        // iterate over left column controls\r\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\r\n          if (rows[row].form_layout_columns[column].form_controls[control].hasOwnProperty('sub_type')) {\r\n            // const controlKey = this.control?.key;\r\n            // temperature conversion\r\n            if (rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.calculated_label) {\r\n              const currentVal = rows[row].form_layout_columns[column].form_controls[control].value;\r\n              if (currentVal) {\r\n                const convertedValue = selectedUnit.id === Units.MILLI_METER ? this.helperService.convertToMillimeter(currentVal) : this.helperService.convertToInch(currentVal);\r\n                rows[row].form_layout_columns[column].form_controls[control].value = convertedValue;\r\n                rows[row].form_layout_columns[column].form_controls[control].label = `${convertedValue} %`;\r\n              }\r\n              else {\r\n                // default value                \r\n                rows[row].form_layout_columns[column].form_controls[control].label = \" %\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  // set temperature lable\r\n  private getFormControl(rows: FormRowModel[], formControlKey: String): FormControlModel {\r\n    let fc: FormControlModel = new FormControlModel({});\r\n    // iterate over left column rows\r\n    for (let row = 0; row < rows.length; row++) {\r\n      // iterate over left column columns\r\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\r\n        // iterate over column controls\r\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\r\n          // key matched\r\n          if (formControlKey === rows[row].form_layout_columns[column].form_controls[control].key) {\r\n            fc = rows[row].form_layout_columns[column].form_controls[control];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return fc;\r\n  }\r\n}\r\n","// core imports\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { DynamicFormTwoColumnLayoutComponent } from './dynamic-form-two-column-layout/dynamic-form-two-column-layout.component';\nimport { DynamicFormTwoColumnLayoutService } from \"./dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { SharedModule } from \"../shared/shared.module\";\n\n@NgModule({\n  declarations: [\n    DynamicFormTwoColumnLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  exports: [\n    DynamicFormTwoColumnLayoutComponent\n  ],\n  providers: [DynamicFormTwoColumnLayoutService]\n})\nexport class DynamicFormModule { }\n","import { ErrorTypes } from '../shared/helpers/constants';\r\n\r\nexport class ErrorModel {\r\n    field: string;\r\n    title: string;\r\n    detail: string;\r\n    isDetailOpened: boolean;\r\n    type: number; // error = 1 and warning = 2\r\n\r\n    constructor(options: {\r\n        field?: string,\r\n        title?: string,\r\n        detail?: string,\r\n        isDetailOpened?: boolean;\r\n        type?: number;\r\n    } = {}) {\r\n        this.field = options.field;\r\n        this.title = options.title;\r\n        this.detail = options.detail;\r\n        this.isDetailOpened = options.isDetailOpened ? options.isDetailOpened : false;\r\n        this.type = options.type || ErrorTypes.Error\r\n    }\r\n}"],"sourceRoot":"webpack:///"}