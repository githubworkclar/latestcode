{"version":3,"sources":["./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc-routing.module.ts","./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc-validation.service.ts","./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.component.ts","./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.component.html","./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.module.ts","./client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.service.ts"],"names":[],"mappings":"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","file":"rectangle-gland-calc-rectangle-gland-calc-module-es2015.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { RectangleGlandCalcComponent } from \"./rectangle-gland-calc.component\";\r\nimport { CalculatorTypes } from '../../shared/helpers/constants';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: RectangleGlandCalcComponent, children: [\r\n            { path: 'createRectangleGland', data: { calculatorType: CalculatorTypes.ORingInternalVacuumOnly }, loadChildren: () => import('./gland-size-rectangle-internal-vacuum-only/gland-size-rectangle-internal-vacuum-only.module').then(m => m.GlandSizeRectangleInternalVacuumOnlyModule) },\r\n            { path: 'createDovetailGland', data: { calculatorType: CalculatorTypes.ORingDovetailGlandVacuumOnly }, loadChildren: () => import('./gland-size-dovetail-gland-vacuum-only/gland-size-dovetail-gland-vacuum-only.module').then(m => m.GlandSizeDovetailGlandVacuumOnlyModule) },\r\n            { path: 'createHalfDovetailGland', data: { calculatorType: CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly }, loadChildren: () => import('./gland-size-half-dovetail-gland-internal-vacuum-only/gland-size-half-dovetail-gland-internal-vacuum-only.module').then(m => m.GlandSizeHalfDovetailGlandInternalVacuumOnlyModule) },\r\n            { path: 'createRectangleOdGland', data: { calculatorType: CalculatorTypes.ORingRectangularGlandExternalVacuumOnly }, loadChildren: () => import('./gland-size-rectangular-gland-external-vacuum-only/gland-size-rectangular-gland-external-vacuum-only.module').then(m => m.GlandSizeRectangularGlandExternalVacuumOnlyModule) }\r\n        ],\r\n    }\r\n];\r\n\r\n@NgModule(\r\n    {\r\n        imports: [RouterModule.forChild(routes)],\r\n        exports: [RouterModule]\r\n    }\r\n)\r\nexport class RectangleGlandCalcRoutingModule {\r\n}","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup, AbstractControl } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { MaterialChoiceModel } from '../../models/material-choice.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Temperature, Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { ErrorModel } from '../../models/error.model';\nimport { HelperService } from \"../../shared/services/helper.service\";\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RectangleGlandCalcValidationService {\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n  // operating temperture nominal validation\n  operatingTemperatureValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const materialCteNominalControl = control.get('materialCteNominal');\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\n      let error = null;\n      if (\n        materialCteNominalValue\n        && materialCteNominalValue.maxtemp\n        && operatingTemperatureNominalControl.value !== ''\n        && operatingTemperatureNominalControl.value !== null\n        && operatingTemperatureNominalControl.value !== undefined\n      ) {\n        let message = \"\";\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        else {\n          // default CELCIUS\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\n        if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n          operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\n        }\n        const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n        const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n        error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\n        operatingTemperatureNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // Function check O-ring cross section is in range or not else set error message\n  oringCrossSectionNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (\n        oringCrossSectionNominalControl && oringCrossSectionNominalControl.value !== ''\n        && oringCrossSectionNominalControl.value !== null\n        && oringCrossSectionNominalControl.value !== undefined\n      ) {\n\n        // check O-ring cross section is in range or not else set error message\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n\n        error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\n        oringCrossSectionNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // oRingId nominal validation\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\n      let error = null;\n      if (\n        oringIdNominalControl && oringIdNominalControl.value !== ''\n        && oringIdNominalControl.value !== null\n        && oringIdNominalControl.value !== undefined\n      ) {\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\n\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"errorORingIDNominalMaxValue\");\n      }\n\n      return error;\n    };\n  }\n\n  // orin id standard warning and prevent to submit the form\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let warning: ErrorModel = null;\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const oringIdNominalControl: AbstractControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      if (\n        oringCrossSectionNominalControl.value !== ''\n        && oringCrossSectionNominalControl.value !== null\n        && oringCrossSectionNominalControl.value !== undefined\n        && oringIdNominalControl.value !== ''\n        && oringIdNominalControl.value !== null\n        && oringIdNominalControl.value !== undefined\n      ) {\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\n            warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n        }\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\n            warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n        }\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"warningORingIDNominalStandard\");\n        // this.helperService.setValidationErrorToFormControl(control, \"oringIdNominal\", warning, \"warningORingIDNominalStandard\");\n      }\n      return warning;\n    };\n  }\n}\n","// core imports\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { FormGroup } from '@angular/forms';\n\n// third party imports\nimport { Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\n\n// application imports\nimport { ControlType, CalculatorTypes } from '../../shared/helpers/constants';\nimport { BaseModel } from \"../../models/base.model\";\nimport { CalculatorModel } from \"../../models/calculator.model\";\nimport { FormControlModel } from '../../models/form-control.model';\nimport { RectangleGlandCalcService } from \"./rectangle-gland-calc.service\";\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\nimport { DropDownChangeModel } from '../../models/dropdown-change.model';\n\n@Component({\n  selector: 'app-rectangle-gland-calc',\n  templateUrl: './rectangle-gland-calc.component.html',\n  styleUrls: ['./rectangle-gland-calc.component.css']\n})\nexport class RectangleGlandCalcComponent implements OnInit {\n\n  readonly GLAND_SIZE_CALCULATOR_TYPE_FORM_CONTROL_KEY = \"Gland_Size_Calculator\";\n  currrentSelectedCalculatorId: number = 0;\n  isJSONConfigFetched: boolean = false;\n  jsonConfiguration: BaseModel;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n\n  // calculator dropdown formgroup\n  calculatorTypeDDLFormGroup: FormGroup;\n  calculatorTypeDDl: FormControlModel[];\n  // currentSelectedCalculator: FormControlModel;\n  // subscription\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private rectangleGlandCalcService: RectangleGlandCalcService,\n    private router: Router,\n    private controlBaseService: ControlBaseService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      let calculatorId = 0;\n      if (this.activatedRoute.snapshot.firstChild && this.activatedRoute.snapshot.firstChild.data) {\n        calculatorId = this.activatedRoute.snapshot.firstChild.data.calculatorType;\n      }\n\n      if (calculatorId) {\n        this.currrentSelectedCalculatorId = calculatorId;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    // get JSON config from server\n    this.rectangleGlandCalcService.getGlandSizeCalcConfig().subscribe(\n      (resp) => {\n        this.isJSONConfigFetched = true;\n        this.jsonConfiguration = resp as BaseModel;\n        // bind calculator type ddl \n        const calculatorTypes: FormControlModel[] = [...this.getCalculatorTypeArray(this.GLAND_SIZE_CALCULATOR_TYPE_FORM_CONTROL_KEY)];\n        this.calculatorTypeDDl = calculatorTypes;\n        // create form group for calculator dropdown - to handle the dropdown model binding using reactiveform model\n        let calculatorTypeDDLGroup: FormControlModel[] = [];\n        // below calculatorTypeDDLGroup.push also sets the default dropdown selection\n        // create form groupd with initial value of control \"calculatorTypes[0]\"\n        if (this.currrentSelectedCalculatorId && this.currrentSelectedCalculatorId >= 0) {\n\n          // get calculator index by calculator id\n          const getCalcuilatorindex = calculatorTypes.findIndex((calc: FormControlModel) => {\n            if (calc.form_control_id === this.currrentSelectedCalculatorId) {\n              return calc;\n            }\n          });\n\n          // set selected calcalcutor in calculator dropdown\n          if (getCalcuilatorindex) {\n            calculatorTypeDDLGroup.push(calculatorTypes[getCalcuilatorindex]);\n          }\n          else {\n            // set selected calcalcutor in calculator dropdown\n            calculatorTypeDDLGroup.push(calculatorTypes[0]);\n          }\n        }\n        else {\n          // set selected calcalcutor in calculator dropdown\n          calculatorTypeDDLGroup.push(calculatorTypes[0]);\n        }\n\n        // create form group with default option selection\n        this.createCalculatorTypeFormGroup(calculatorTypeDDLGroup);\n        // calculator change\n        // send o-ring config value to subscribers\n        this.rectangleGlandCalcService.sendGlandSizeCalcConfigValue(this.jsonConfiguration);\n      },\n      (error: HttpErrorResponse) => {\n        throw new Error(error.message);\n      }\n    );\n  }\n\n  // component destroy handler\n  ngOnDestroy(): void {\n    this.isJSONConfigFetched = false;\n    if (this.activatedRouteSubscription) {\n      this.activatedRouteSubscription.unsubscribe();\n    }\n  }\n\n  // calculator types\n  getCalculatorTypeArray(formControlKey: string): FormControlModel[] {\n    let calculatorTypeDDl: FormControlModel[] = [];\n    for (let index = 0; index < this.jsonConfiguration.calculators.length; index++) {\n      const fc: FormControlModel = new FormControlModel({ form_control_id: this.jsonConfiguration.calculators[index].id, key: formControlKey, label: this.jsonConfiguration.calculators[index].display_calculator_title, value: this.jsonConfiguration.calculators[index] });\n      calculatorTypeDDl.push(fc);\n    }\n    return calculatorTypeDDl\n  };\n\n  // create form group\n  // params => formControls\n  createCalculatorTypeFormGroup(formControls: FormControlModel[]) {\n    // calculator type dropdown form group\n    this.calculatorTypeDDLFormGroup = this.controlBaseService.toFormGroup(formControls);\n  }\n\n  // calculator change handler\n  onCalculatorChange(event: DropDownChangeModel) {\n    const calculator = event.value as CalculatorModel;\n    switch (+(calculator.id)) {\n      case CalculatorTypes.ORingInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createRectangleGland']);\n        break;\n      case CalculatorTypes.ORingDovetailGlandVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createDovetailGland']);\n        break;\n      case CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createHalfDovetailGland']);\n        break;\n      case CalculatorTypes.ORingRectangularGlandExternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createRectangleOdGland']);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row ignorePdf\">\n        <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9 p-1\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <p class=\"info-tab pt-0\">Use this tool for designing new glands based upon desired o-ring sizing.\n                        Please contact Greene Tweed engineering for help or advice if required as some applications are\n                        difficult to optimize both at ambient and operating temperatures</p>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 p-1\"\n                    *ngIf=\"calculatorTypeDDl && calculatorTypeDDl.length > 0 && calculatorTypeDDLFormGroup\">\n                    <custom-drop-down [options]=\"calculatorTypeDDl\" [form]=\"calculatorTypeDDLFormGroup\"\n                        [control]=\"calculatorTypeDDl[0]\" (selectionChange)=\"onCalculatorChange($event)\">\n                    </custom-drop-down>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <div class=\"pull-left unit-section__label\">Units:</div>\n                        </div>\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <unit-button></unit-button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <div class=\"pull-left unit-section__label\">Temperature:</div>\n                        </div>\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <temperature-button></temperature-button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","// core imports\n// Gland Size Calculator module\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { RectangleGlandCalcRoutingModule } from \"./rectangle-gland-calc-routing.module\";\nimport { RectangleGlandCalcComponent } from '../rectangle-gland-calc/rectangle-gland-calc.component';\nimport { RectangleGlandCalcService } from \"./rectangle-gland-calc.service\";\nimport { RectangleGlandCalcValidationService } from \"./rectangle-gland-calc-validation.service\";\n\n@NgModule({\n  declarations: [RectangleGlandCalcComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RectangleGlandCalcRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    RectangleGlandCalcService,\n    RectangleGlandCalcValidationService\n  ]\n})\nexport class RectangleGlandCalcModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { BaseModel } from \"../../models/base.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RectangleGlandCalcService {\n  /* Private Properties   */\n  private baseUrl = AppConfig.settings.env.api;\n\n  // glandSizeCalc config state management subject and observable\n  // private glandSizeCalcConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  private readonly glandSizeCalcConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  // Expose the observable part of the glandSizeCalcConfig subject (read only stream)\n  readonly glandSizeCalcConfig$ = this.glandSizeCalcConfigSubject.asObservable();\n\n  // service state management property \"glandSizeCalcConfig\"\n  // the getter will return the last value emitted glandSizeCalcConfigSubject subject\n  private get glandSizeCalcConfig(): BaseModel {\n    return this.glandSizeCalcConfigSubject.getValue();\n  }\n\n  // assigning a value to this.glandSizeCalcConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.glandSizeCalcConfig = {})\n  private set glandSizeCalcConfig(val: BaseModel) {\n    this.glandSizeCalcConfigSubject.next(val);\n  }\n\n  /* Public Properties   */\n\n  // get config value directly using behaviour subject\n  public get getCurrentGlandSizeCalcConfigValue(): BaseModel {\n    return this.glandSizeCalcConfig;\n  }\n\n  /*  Constructor */\n  constructor(private _http: HttpClient) {\n  }\n\n  // Methods/functions\n  // send GlandSize config\n  // assigning a value to this.glandSizeCalcConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.glandSizeCalcConfig = {})\n  sendGlandSizeCalcConfigValue(val: BaseModel) {\n    this.glandSizeCalcConfig = val;\n  }\n\n  /*  Public Methods   */\n\n  // get o-ring config from server\n  getGlandSizeCalcConfig() {\n    return this._http.get(`${this.baseUrl}glandsizecalc/getjsonconfig`);\n  }\n}\n"],"sourceRoot":"webpack:///"}