{"version":3,"sources":["./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating-routing.module.ts","./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating-validation.service.ts","./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.component.ts","./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.component.html","./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.module.ts","./client/app/ar-wr-calc/ar-wr-floating/ar-wr-floating.service.ts"],"names":[],"mappings":"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","file":"ar-wr-floating-ar-wr-floating-module-es2015.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { ArWrFloatingComponent } from \"./ar-wr-floating.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ArWrFloatingComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ArWrFloatingRoutingModule { }\r\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { ErrorModel } from '../../models/error.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrFloatingValidationService {\n\n  constructor(\n    private readonly helperService: HelperService,\n    private readonly unitButtonService: UnitButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // Function serviceStorageTemperature min validation\n  serviceStorageTemperatureMinValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMinControl = control.get('serviceStorageTemperatureAmbient75FMin');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMinControl\n        && serviceStorageTemperatureAmbient75FMinControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMinError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 75°F or less\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 24°C or less\");\n        }\n\n        if (serviceStorageTemperatureAmbient75FMinError) {\n          error = serviceStorageTemperatureAmbient75FMinError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMinControl, error, \"serviceStorageTemperatureAmbientMin\");\n      return error;\n    };\n  }\n\n  // Function serviceStorageTemperature max validation\n  serviceStorageTemperatureMaxValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMaxControl = control.get('serviceStorageTemperatureAmbient75FMax');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMaxControl\n        && serviceStorageTemperatureAmbient75FMaxControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMaxError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 75°F or more\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 24°C or more\");\n        }\n\n\n        if (serviceStorageTemperatureAmbient75FMaxError) {\n          error = serviceStorageTemperatureAmbient75FMaxError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMaxControl, error, \"serviceStorageTemperatureAmbientMax\");\n      return error;\n    };\n  }\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** Doen't prevent the form submission*****************/\n  /********************************************************************/\n  // gland width validation\n  clearanceValidationBasedOnPumpAndComponentType(control: FormGroup): ErrorModel {\n    const pumpTypeControl = control.get('pumpType');\n    const componentTypeControl = control.get('componentType');\n\n    if (pumpTypeControl && pumpTypeControl.value && componentTypeControl && componentTypeControl.value) {\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      // const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const error = new ErrorModel();\n      error.field = '';\n      error.type = ErrorTypes.Warning;\n\n      const bushing = \"Follow OEM Bushing Clearance if Available\";\n      const bearing = \"Follow OEM Bearing Clearance if Available\";\n\n      if (pumpTypeControl.value.id === 3 && componentTypeControl.value.id === 1) // pumpType \"VS\" and componentType \"Wear Ring\"\n      {\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .05 mm Over Bearing Clearance (Or OEM Standard)\";\n        }\n        else {\n          // default inch unit is considered\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .002 inch Over Bearing Clearance(Or OEM Standard)\";\n        }\n      }\n      else if (componentTypeControl.value.id === 2) // componentType \"Bushing\"\n      {\n        error.detail = bushing;\n      }\n      else if (componentTypeControl.value.id === 3) // componentType Bearing\"\n      {\n        error.detail = bearing;\n      }\n      else {\n        return null;\n      }\n      return error;\n    }\n    else {\n      return null;\n    }\n  }\n}\n","// core imports\r\nimport { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n// third party imports\r\nimport { first } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n// application imports\r\nimport { DynamicFormTwoColumnLayoutService } from \"../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\r\nimport { CalculatorModel } from \"../../models/calculator.model\";\r\nimport { FormControlModel } from '../../models/form-control.model';\r\nimport { BaseModel } from '../../models/base.model';\r\nimport { FormColumnModel } from '../../models/form-column.model';\r\nimport { ErrorModel } from '../../models/error.model';\r\nimport { ArWrCalcService } from \"../ar-wr-calc.service\";\r\nimport { AuthService } from \"../../shared/services/auth.service\";\r\nimport { ControlType, ControlSubType, Units, Temperature, WrArCalc_FloatingIn_Validators, ErrorTypes, CalculatorTypes } from '../../shared/helpers/constants';\r\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\r\nimport { PrintService } from \"../../shared/services/print.service\";\r\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\r\nimport { ArWrFloatingService } from \"./ar-wr-floating.service\";\r\nimport { ArWrFloatingValidationService } from \"./ar-wr-floating-validation.service\";\r\nimport { SwitchButtonModel } from '../../models/switch-button.model';\r\nimport { HelperService } from \"../../shared/services/helper.service\";\r\nimport { WrArMaterial } from '../../models/wrArMaterial.model';\r\n\r\n@Component({\r\n  selector: 'app-ar-wr-floating',\r\n  templateUrl: './ar-wr-floating.component.html',\r\n  styleUrls: ['./ar-wr-floating.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArWrFloatingComponent implements OnInit, OnDestroy {\r\n  calculatorConfig: CalculatorModel;\r\n  arwrFloatingForm: FormGroup;\r\n  flattenedFormControls: FormControlModel[] = [];\r\n  controlType = ControlType;\r\n  isSubmitted = false;\r\n  payLoad = '';\r\n  clientErrors: ErrorModel[] = [];\r\n  clientWarnings: ErrorModel[] = [];\r\n  serverErrors: ErrorModel[] = [];\r\n  serverWarnings: ErrorModel[] = [];\r\n\r\n  // calculated data\r\n  private calculatedData: any;\r\n\r\n  get CalculatedData(): any {\r\n    return this.calculatedData;\r\n  }\r\n\r\n  set CalculatedData(val: any) {\r\n    this.calculatedData = val;\r\n  }\r\n\r\n  // subscription\r\n  arWrDataSubscription: Subscription;\r\n  unitChangeSubscription: Subscription;\r\n\r\n  // constructor\r\n  constructor(\r\n    private readonly controlBaseService: ControlBaseService,\r\n    private readonly authService: AuthService,\r\n    private readonly arWrCalcService: ArWrCalcService,\r\n    private readonly dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\r\n    private readonly printService: PrintService,\r\n    private readonly unitButtonService: UnitButtonService,\r\n    private readonly temperatureButtonService: TemperatureButtonService,\r\n    private readonly helperService: HelperService,\r\n    private readonly arWrFloatingService: ArWrFloatingService,\r\n    private readonly arWrFloatingValidationService: ArWrFloatingValidationService,\r\n  ) {\r\n    // o-ring calculator config subscription\r\n    this.arWrDataSubscription = this.arWrCalcService.arWrConfig$.subscribe((x: BaseModel) => {\r\n      if (x) {\r\n        // calculator - Wr/Ar Floating\r\n        this.calculatorConfig = x.calculators[1];\r\n        // send calculator to dynamic form service\r\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[1]);\r\n        // create form\r\n        this.createForm();\r\n      }\r\n    });\r\n\r\n    // unit change\r\n    this.onUnitChange();\r\n  }\r\n\r\n  // form control changes subcription and update the graph data\r\n  getControlValue(fieldName: string) {\r\n    if (this.arwrFloatingForm && this.arwrFloatingForm.controls[fieldName]) {\r\n      return this.arwrFloatingForm.controls[fieldName].value;\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // onInit\r\n  ngOnInit(): void {\r\n    this.onReset();\r\n    this.isSubmitted = false;\r\n    this.CalculatedData = {};\r\n  }\r\n\r\n  // unit change perform operations\r\n  onUnitChange() {\r\n    // reset \r\n    this.resetFormAndCalculation();\r\n\r\n    // unit switch button click/change subscription\r\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\r\n      if (x) {\r\n        // reset \r\n        this.resetFormAndCalculation();\r\n\r\n        // set temperature\r\n        this.setTemperature();\r\n\r\n        if (this.CalculatedData) {\r\n          // calculated change detection when by changing the object\r\n          this.CalculatedData = Object.assign({}, this.CalculatedData);\r\n        }\r\n\r\n        // get rotor and stator cte dropdown controls\r\n        const selectedCustomRotatingMaterialControl = this.arwrFloatingForm?.controls[\"customRotatingMaterial\"];\r\n        const selectedCustomStationaryMaterialControl = this.arwrFloatingForm?.controls[\"customStationaryMaterial\"];\r\n\r\n        // clear rotor CTE custom input values\r\n        if (selectedCustomRotatingMaterialControl) {\r\n          selectedCustomRotatingMaterialControl.setValue(\"\");\r\n        }\r\n\r\n        // clear stator CTE custom input values\r\n        if (selectedCustomStationaryMaterialControl) {\r\n          selectedCustomStationaryMaterialControl.setValue(\"\");\r\n        }\r\n\r\n        // convert the form data\r\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.arwrFloatingForm, x);\r\n\r\n        // rotating material dropdown selected and not custom selected\r\n        const selectedRotatingMaterialControl = this.arwrFloatingForm?.controls[\"rotatingMaterial\"];\r\n        const selectedStationaryMaterialControl = this.arwrFloatingForm?.controls[\"stationaryMaterial\"];\r\n\r\n        // rotating material dropdown selected and not custom selected\r\n        // convert 10 power -6 to XX.XX\r\n        if (selectedRotatingMaterialControl && selectedRotatingMaterialControl.value && selectedRotatingMaterialControl.value.value > 0) {\r\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, \"rotatingMaterial\", \"customRotatingMaterial\", selectedRotatingMaterialControl.value);\r\n        }\r\n\r\n        // stationary material dropdown selected and not custom selected\r\n        // convert 10 power -6 to XX.XX\r\n        if (selectedStationaryMaterialControl && selectedStationaryMaterialControl.value && selectedStationaryMaterialControl.value.value > 0) {\r\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, \"stationaryMaterial\", \"customStationaryMaterial\", selectedStationaryMaterialControl.value);\r\n        }\r\n\r\n        if (convertedForm) {\r\n          this.arwrFloatingForm = convertedForm;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // set temperature\r\n  setTemperature() {\r\n    let currentUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n    let currentTemp: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\r\n\r\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.INCH) {\r\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.FAHRENHEIT) {\r\n        this.helperService.setAndSendTemperatureManually(Temperature.FAHRENHEIT);\r\n      }\r\n    }\r\n\r\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.MILLI_METER) {\r\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.CELCIUS) {\r\n        this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.CalculatedData = {};\r\n    // reset error, warnings\r\n    this.resetErroAndWarnings();\r\n    // reset calculated output\r\n    this.resetCalculatedLabelValue();\r\n\r\n    if (!this.calculatorConfig) {\r\n      return;\r\n    }\r\n\r\n\r\n    if (!this.arwrFloatingForm || !this.arwrFloatingForm.value) {\r\n      return;\r\n    }\r\n\r\n    this.payLoad = this.arwrFloatingForm.value;\r\n    this.isSubmitted = true;\r\n\r\n    // client errors that doesnot prevent to submit forms/calculation\r\n    // glandWidth validation\r\n    if (this.calculatorConfig.form.form_validation.includes(WrArCalc_FloatingIn_Validators.CLEARANCE_VALIDATION)) {\r\n      const clearanceBasedOnPumpAndComponentTypeError = this.arWrFloatingValidationService.clearanceValidationBasedOnPumpAndComponentType(this.arwrFloatingForm);\r\n      if (clearanceBasedOnPumpAndComponentTypeError) {\r\n        this.addClientErrors(clearanceBasedOnPumpAndComponentTypeError);\r\n      }\r\n    }\r\n\r\n    // stop here if form is invalid/Not_valid\r\n    if (!this.arwrFloatingForm || this.arwrFloatingForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // perform calculation\r\n    this.arWrFloatingService.floatingCalculation(this.arwrFloatingForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe(\r\n      (resp: any) => {\r\n        // response\r\n        if (resp.data) {\r\n          // set CalculatedData\r\n          // this will set the graph data also\r\n          this.CalculatedData = Object.assign({}, resp.data);\r\n\r\n          if (resp.data.error && resp.data.error.length > 0) {\r\n            this.serverErrors = resp.data.error.slice();\r\n          }\r\n\r\n          if (resp.data.warning && resp.data.warning.length > 0) {\r\n            this.serverWarnings = resp.data.warning;\r\n          }\r\n\r\n          const responseDataKeys = Object.keys(resp.data);\r\n\r\n          // Bind output form data\r\n          // loop through each output\r\n          for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n            // loop through rows\r\n            for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n              // loop through columns\r\n              for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n                // loop through controls\r\n                for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n                  // get form control of JSON\r\n                  const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n                  // get fields key from resp data\r\n                  // const responseDataKeys = Object.keys(resp.data);\r\n                  for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\r\n                    if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\r\n                      // output values validation\r\n                      // Check cross section thickness validation\r\n                      const outMachineCompositeODInch = resp.data['machineCompositeODInch'];\r\n                      const outFinishMachineCompositeIDAfterInstallationInch = resp.data['finishMachineCompositeIDAfterInstallationInch'];\r\n                      let crosssectionThickness = 0.236;\r\n                      if (this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER) {\r\n                        crosssectionThickness = 0.6;\r\n                      }\r\n                      if (!((outMachineCompositeODInch - outFinishMachineCompositeIDAfterInstallationInch) > crosssectionThickness)) {\r\n                        const crossSectionThicknessError = new ErrorModel();\r\n                        crossSectionThicknessError.field = '';\r\n                        crossSectionThicknessError.type = ErrorTypes.Error;\r\n                        crossSectionThicknessError.detail = \"Check cross section thickness.\";\r\n                        this.addClientErrors(crossSectionThicknessError);\r\n                      }\r\n\r\n                      // set JSON output label\r\n                      // bind calculated result to output label\r\n                      this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)) : resp.data[responseDataKeys[keyIndex]]}`;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // reset auth token \r\n          this.setAuth();\r\n        }\r\n      }, (error: any) => {\r\n        // reset auth token \r\n        this.setAuth();\r\n        // TODO: show error if any\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // create form group\r\n  createForm() {\r\n    // get form controls nested array\r\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\r\n      row.form_layout_columns.map((column: FormColumnModel) => {\r\n        let formControls: FormControlModel[] = [];\r\n        for (let index = 0; index < column.form_controls.length; index++) {\r\n          // get existing inputted values of form \r\n          if (this.arwrFloatingForm) {\r\n            const fc = this.arwrFloatingForm.get(column.form_controls[index].key);\r\n            if (fc) {\r\n              column.form_controls[index].value = fc.value;\r\n            }\r\n          }\r\n          // create reactive form of only those control which are show = true\r\n          if (column.form_controls[index].show) {\r\n            formControls.push(column.form_controls[index]);\r\n          }\r\n        }\r\n        return formControls;\r\n      }));\r\n\r\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\r\n      row.form_layout_columns.map((column: FormColumnModel) => {\r\n        let formControls: FormControlModel[] = [];\r\n        for (let index = 0; index < column.form_controls.length; index++) {\r\n          // get existing inputted values of form \r\n          if (this.arwrFloatingForm) {\r\n            const fc = this.arwrFloatingForm.get(column.form_controls[index].key);\r\n            if (fc) {\r\n              column.form_controls[index].value = fc.value;\r\n            }\r\n          }\r\n          // createreaxctive form of only those control which are show = true\r\n          if (column.form_controls[index].show) {\r\n            formControls.push(column.form_controls[index]);\r\n          }\r\n        }\r\n        return formControls;\r\n      }));\r\n\r\n    // make form control flatten array\r\n    this.flattenedFormControls = [];\r\n    // add calculator toolbar option\r\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\r\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\r\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\r\n    // exclude formcontrol which is type of label\r\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\r\n      // exclude labels and buttons from formgroup\r\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\r\n        return fc;\r\n      }\r\n    });\r\n\r\n    this.arwrFloatingForm = this.controlBaseService.toFormGroup(filteredControls);\r\n    // get and set validations\r\n    const validations: ValidatorFn[] = [];\r\n    // get validation key from json config object\r\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\r\n\r\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\r\n      const validationFuncKey = jsonConfigValidationsArray[index];\r\n      switch (validationFuncKey) {\r\n        case WrArCalc_FloatingIn_Validators.SERVICE_STORAGE_TEMPERATURE_MIN:\r\n          validations.push(this.arWrFloatingValidationService.serviceStorageTemperatureMinValidation());\r\n          break;\r\n        case WrArCalc_FloatingIn_Validators.SERVICE_STORAGE_TEMPERATURE_MAX:\r\n          validations.push(this.arWrFloatingValidationService.serviceStorageTemperatureMaxValidation());\r\n          break;\r\n      }\r\n    }\r\n    // set custom validations with params\r\n    this.arwrFloatingForm.setValidators(validations);\r\n  }\r\n\r\n  // reset auth token\r\n  setAuth() {\r\n    this.authService.authenticate().pipe(first())\r\n      .subscribe(r => r);\r\n  }\r\n\r\n  // add client errors\r\n  addClientErrors(error: ErrorModel) {\r\n    if (this.clientErrors.length > 0) {\r\n      for (let index = 0; index < this.clientErrors.length; index++) {\r\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\r\n          this.clientErrors.push(error);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.clientErrors.push(error);\r\n    }\r\n\r\n    this.clientErrors = this.clientErrors.slice();\r\n  }\r\n\r\n  // add client warnings\r\n  addClientWarnings(warning: ErrorModel) {\r\n    if (this.clientWarnings.length > 0) {\r\n      for (let index = 0; index < this.clientWarnings.length; index++) {\r\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\r\n          this.clientWarnings.push(warning);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.clientWarnings.push(warning);\r\n    }\r\n\r\n    this.clientWarnings = this.clientWarnings.slice();\r\n  }\r\n\r\n  // reset error, warnings of client and server\r\n  resetErroAndWarnings() {\r\n    this.clientErrors = [];\r\n    this.clientWarnings = [];\r\n    this.serverErrors = [];\r\n    this.serverWarnings = [];\r\n  }\r\n\r\n  // reset calculated label or output value in JSOn config\r\n  resetCalculatedLabelValue() {\r\n    this.CalculatedData = {};\r\n    // reset left form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // reset calculated result to output label\r\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset right form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset output form data\r\n    // loop through each output\r\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n      // loop through rows\r\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n        // loop through columns\r\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n          // loop through controls\r\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n            // get form control of JSON\r\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n            if (formControl.sub_type === ControlSubType.calculated_label) {\r\n              // set JSON output label\r\n              // bind calculated result to output label\r\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetFormAndCalculation() {\r\n    // reset form submitted status to false \r\n    this.isSubmitted = false;\r\n\r\n    // reset client errors and warnings\r\n    this.clientErrors = [];\r\n    this.clientWarnings = [];\r\n    this.serverErrors = [];\r\n    this.serverWarnings = [];\r\n\r\n    if (!this.calculatorConfig) {\r\n      return;\r\n    }\r\n\r\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\r\n    // reset left form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            // bind calculated result to output label\r\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset right form data\r\n    // loop through each form left column row\r\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\r\n      // loop through columns\r\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n        // loop through controls\r\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n          // get form control of JSON\r\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n          if (formControl.sub_type === ControlSubType.calculated_label) {\r\n            // set JSON output label\r\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset output form data\r\n    // loop through each output\r\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\r\n      // loop through rows\r\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\r\n        // loop through columns\r\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\r\n          // loop through controls\r\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\r\n            // get form control of JSON\r\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\r\n            // get fields key from resp data\r\n            if (formControl.sub_type === ControlSubType.calculated_label) {\r\n              // set JSON output label\r\n              // bind calculated result to output label\r\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = ``;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset calculated data received after calculation\r\n    this.CalculatedData = null;\r\n  }\r\n\r\n  // on reset button handler\r\n  onReset() {\r\n    if (!this.arwrFloatingForm) {\r\n      return;\r\n    }\r\n\r\n    // get form controls key\r\n    const formControlKeys = Object.keys(this.arwrFloatingForm.controls);\r\n    // loop through the reactive form/formgroup controls \r\n    for (let index = 0; index < formControlKeys.length; index++) {\r\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\r\n      if (formControlDefaultValue) {\r\n        this.arwrFloatingForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\r\n      }\r\n      else {\r\n        this.arwrFloatingForm.controls[formControlKeys[index]].setValue('');\r\n      }\r\n    }\r\n\r\n    this.resetFormAndCalculation();\r\n  }\r\n\r\n  // print button event handler\r\n  onPrint() {\r\n    this.printService.generatePdf(\"WrArFloating\");\r\n  }\r\n\r\n  // dropdown change event handler of the dynamic form\r\n  dropdownSelectionChange(event: any) {\r\n    // clearance dropdown selected value\r\n    this.calculateAndSetClearanceTarget();\r\n\r\n    // get and set rotating material change when custom no selected\r\n    if (event.formControl.key === \"rotatingMaterial\" && event.value.value > 0) {\r\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, event.formControl.key, \"customRotatingMaterial\", event.value);\r\n    }\r\n\r\n    // get and set stationary material change when custom no selected\r\n    if (event.formControl.key === \"stationaryMaterial\" && event.value.value > 0) {\r\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrFloatingForm, event.formControl.key, \"customStationaryMaterial\", event.value);\r\n    }\r\n  }\r\n\r\n  // numeric input value change event handler of the dynamic form\r\n  numericInputValueChange(event: any) {\r\n    if (event.key.toLowerCase() === (\"rotatingElementODMax\").toLowerCase()) {\r\n      this.calculateAndSetClearanceTarget();\r\n    }\r\n  }\r\n\r\n  // calculate clearanceCLR based on the \"rotatingElementODMax\"\r\n  private calculateAndSetClearanceTarget() {\r\n    // clearance dropdown selected value\r\n    const customClearanceTargetDDLFC = this.arwrFloatingForm.controls[\"clearanceTarget\"];\r\n    // stabdard clearance\r\n    if (customClearanceTargetDDLFC && customClearanceTargetDDLFC.value.value > 0) {\r\n      const customClearanceTargetFC = this.arwrFloatingForm.controls[\"customClearanceTarget\"];\r\n      // standard option selected\r\n      this.arWrCalcService.getClearance(this.arwrFloatingForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue, CalculatorTypes.WrArFloating).subscribe((x: any) => {\r\n        if (x && customClearanceTargetFC && (customClearanceTargetFC.value != x)) {\r\n          customClearanceTargetFC.setValue(x.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // component destroy\r\n  ngOnDestroy(): void {\r\n    if (this.arWrDataSubscription) {\r\n      this.arWrDataSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"row wr-ar-pressin\">\n    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n        <form *ngIf=\"calculatorConfig && arwrFloatingForm\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"arwrFloatingForm\"\n            novalidate class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\" [form]=\"arwrFloatingForm\"\n                        [isSubmitted]=\"isSubmitted\" (reset)=\"onReset()\" (print)=\"onPrint()\">\n                    </calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                    <dynamic-form-two-column-layout [form]=\"arwrFloatingForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [isShowNotes]=\"true\" [decimalPoint]=\"3\"\n                        [isUpdateDecimalPointOnUnitChange]=\"false\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\" [isWrAr]=\"true\"\n                        (dropdownSelectionChange)=\"dropdownSelectionChange($event)\"\n                        (numericInputValueChange)=\"numericInputValueChange($event)\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { ArWrFloatingRoutingModule } from \"./ar-wr-floating-routing.module\";\nimport { ArWrFloatingService } from \"./ar-wr-floating.service\";\nimport { ArWrFloatingValidationService } from \"./ar-wr-floating-validation.service\";\nimport { ArWrFloatingComponent } from './ar-wr-floating.component';\n\n\n\n@NgModule({\n  declarations: [ArWrFloatingComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArWrFloatingRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ArWrFloatingService,\n    ArWrFloatingValidationService\n  ]\n})\nexport class ArWrFloatingModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { FormGroup } from '@angular/forms';\nimport { PressInDTO } from 'client/app/models/pressInDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrFloatingService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  public floatingCalculation(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n\n    return this._http.post(`${this.baseUrl}wrar/floatingCalculation`, body);\n  }\n}\n"],"sourceRoot":"webpack:///"}