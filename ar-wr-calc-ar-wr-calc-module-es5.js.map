{"version":3,"sources":["webpack:///client/app/ar-wr-calc/ar-wr-calc-routing.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-calc.component.ts","webpack:///client/app/ar-wr-calc/ar-wr-calc.component.html","webpack:///client/app/ar-wr-calc/ar-wr-calc.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-calc.service.ts","webpack:///client/app/ar-wr-calc/header/header.component.ts","webpack:///client/app/ar-wr-calc/header/header.component.html","webpack:///client/app/models/pressInDTO.ts","webpack:///client/app/models/wrArMaterialCteDTO.ts","webpack:///server/src/constants.ts"],"names":["routes","path","component","children","data","calculatorType","WrArPressIn","loadChildren","then","m","ArWrPressInModule","WrArFloating","ArWrFloatingModule","ArWrCalcRoutingModule","forChild","imports","exports","ArWrCalcComponent","arWrCalcService","router","controlBaseService","activatedRoute","arWrDropDownDataService","unitButtonService","temperatureButtonService","helperService","O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY","previuosSelectedCalculatorId","currrentSelectedCalculatorId","isJSONConfigFetched","flattenedFormControls","controlType","wrArTabs","linkLabel","rootModuleRoute","childrenModuleRoute","pathExactmatch","defaultMeasure","activatedRouteSubscription","events","pipe","event","subscribe","calculatorId","snapshot","firstChild","setDefaultMeasure","initializeComponent","getDropdownItems","setInitialTemperature","getArWrPressInCalcConfig","resp","jsonConfiguration","calculatorTypeDDLGroup","sendArWrConfigValue","error","Error","message","sendDropdownItems","currentUnit","getCurrentUnitValue","currentTemp","getCurrentTemperatureValue","id","INCH","FAHRENHEIT","setAndSendTemperatureManually","MILLI_METER","CELCIUS","selector","templateUrl","styleUrls","encapsulation","None","ArWrCalcModule","declarations","providers","ArWrCalcService","_http","baseUrl","settings","env","api","oRingConfigSubject","arWrConfig$","asObservable","val","arWrConfig","get","form","unit","unitTemp","body","value","toString","post","material","controlKey","bindControlKey","controlValue","getMaterialCTE","x","controls","setValue","convertFromNegetivePowerOfSix","rotorCTE","toFixed","statorCTE","getValue","next","providedIn","HeaderComponent","PressInDTO","options","pumpType","componentType","composite","interferenceTarget","customInterferenceTarget","clearanceTarget","customClearanceTarget","rotatingElementODMin","rotatingElementODMax","rotatingMaterial","customRotatingMaterial","stationaryElementIDMin","stationaryElementIDMax","stationaryMaterial","customStationaryMaterial","stationaryBoreDepthMin","serviceStorageTemperatureAmbient75FMin","serviceStorageTemperatureAmbient75FMax","WrArMaterialCteDTO","Units","Temperature","CalculatorOption","ErrorTypes","WrArCalcTypes","customValue","CalculatorTypes"],"mappings":"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","file":"ar-wr-calc-ar-wr-calc-module-es5.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CalculatorTypes } from '../shared/helpers/constants';\r\n\r\n// application imports\r\nimport { ArWrCalcComponent } from \"./ar-wr-calc.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ArWrCalcComponent, children: [\r\n            {\r\n                path: 'pressin',\r\n                data: {\r\n                    calculatorType: CalculatorTypes.WrArPressIn\r\n                },\r\n                loadChildren: () => import('./ar-wr-press-in/ar-wr-press-in.module').then(m => m.ArWrPressInModule)\r\n            },\r\n            {\r\n                path: 'floating',\r\n                data: {\r\n                    calculatorType: CalculatorTypes.WrArFloating\r\n                },\r\n                loadChildren: () => import('./ar-wr-floating/ar-wr-floating.module').then(m => m.ArWrFloatingModule)\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ArWrCalcRoutingModule { }","// core imports\nimport { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { FormGroup } from '@angular/forms';\n\n// third party imports\nimport { Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\n\n// application imports\nimport { ControlType, CalculatorTypes, Units, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../shared/helpers/constants';\nimport { BaseModel } from \"../models/base.model\";\nimport { CalculatorModel } from \"../models/calculator.model\";\nimport { FormControlModel } from '../models/form-control.model';\nimport { ArWrCalcService } from \"./ar-wr-calc.service\";\nimport { TabModel } from '../models/tab.model';\nimport { SwitchButtonModel } from '../models/switch-button.model';\nimport { ControlBaseService } from \"../shared/services/control-base.service\";\nimport { ArWrDropDownDataService } from '../shared/services/ar-wr-drop-down-data.service';\nimport { UnitButtonService } from \"../shared/components/unit-button/unit-button.service\";\nimport { TemperatureButtonService } from \"../shared/components/temperature-button/temperature-button.service\";\nimport { Temperature } from 'server/src/constants';\nimport { HelperService } from \"../shared/services/helper.service\";\n\n@Component({\n  selector: 'app-ar-wr-calc',\n  templateUrl: './ar-wr-calc.component.html',\n  styleUrls: ['./ar-wr-calc.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ArWrCalcComponent implements OnInit {\n\n  readonly O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY = \"WrAr_CALCULATOR_TYPE\";\n  previuosSelectedCalculatorId = 0;\n  currrentSelectedCalculatorId = 0;\n  isJSONConfigFetched = false;\n  jsonConfiguration: BaseModel;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  wrArTabs: TabModel[] = [\n    { linkLabel: \"Press-In\", rootModuleRoute: \"pressin\", childrenModuleRoute: \"/wrar/pressin\", pathExactmatch: true },\n    { linkLabel: \"Floating\", rootModuleRoute: \"floating\", childrenModuleRoute: \"/wrar/floating\", pathExactmatch: true }];\n\n  // calculator dropdown formgroup\n  calculatorTypeDDLFormGroup: FormGroup;\n  calculatorTypeDDl: FormControlModel[];\n  // currentSelectedCalculator: FormControlModel;\n  defaultMeasure: SwitchButtonModel = null;\n  // subscription\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private readonly arWrCalcService: ArWrCalcService,\n    private readonly router: Router,\n    private readonly controlBaseService: ControlBaseService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly arWrDropDownDataService: ArWrDropDownDataService,\n    private readonly unitButtonService: UnitButtonService,\n    private readonly temperatureButtonService: TemperatureButtonService,\n    private readonly helperService: HelperService\n  ) {\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      let calculatorId = 0;\n      if (this.activatedRoute.snapshot.firstChild && this.activatedRoute.snapshot.firstChild.data) {\n        calculatorId = this.activatedRoute.snapshot.firstChild.data.calculatorType;\n      }\n\n      if (calculatorId) {\n        this.previuosSelectedCalculatorId = this.currrentSelectedCalculatorId;\n        this.currrentSelectedCalculatorId = calculatorId;\n        this.defaultMeasure = this.helperService.setDefaultMeasure();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.initializeComponent();\n    this.getDropdownItems();\n    this.setInitialTemperature();\n  }\n\n  initializeComponent() {\n    // get JSON config from server\n    this.arWrCalcService.getArWrPressInCalcConfig().subscribe(\n      (resp) => {\n        this.isJSONConfigFetched = true;\n        this.jsonConfiguration = resp as BaseModel;\n        // bind calculator type ddl \n        // // const calculatorTypes: FormControlModel[] = [...this.getCalculatorTypeArray(this.O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY)];\n        // // this.calculatorTypeDDl = calculatorTypes;\n        // create form group for calculator dropdown - to handle the dropdown model binding using reactiveform model\n        const calculatorTypeDDLGroup: FormControlModel[] = [];\n        // below calculatorTypeDDLGroup.push also sets the default dropdown selection\n        // create form groupd with initial value of control \"calculatorTypes[0]\"\n        // if (this.currrentSelectedCalculatorId && this.currrentSelectedCalculatorId >= 0) {\n\n        // get calculator index by calculator id\n        //   const getCalcuilatorindex = calculatorTypes.findIndex((calc: FormControlModel) => {\n        //     if (calc.form_control_id === this.currrentSelectedCalculatorId) {\n        //       return calc;\n        //     }\n        //   });\n\n        //   // set selected calcalcutor in calculator dropdown\n        //   if (getCalcuilatorindex) {\n        //     calculatorTypeDDLGroup.push(calculatorTypes[getCalcuilatorindex]);\n        //   }\n        //   else {\n        //     // set selected calcalcutor in calculator dropdown\n        //     calculatorTypeDDLGroup.push(calculatorTypes[0]);\n        //   }\n        // }\n        // else {\n        //   // set selected calcalcutor in calculator dropdown\n        //   calculatorTypeDDLGroup.push(calculatorTypes[0]);\n        // }\n\n        // create form group with default option selection\n        // this.createCalculatorTypeFormGroup(calculatorTypeDDLGroup);\n        // calculator change\n        // send o-ring config value to subscribers\n        this.arWrCalcService.sendArWrConfigValue(this.jsonConfiguration);\n      },\n      (error: HttpErrorResponse) => {\n        throw new Error(error.message);\n      }\n    );\n  }\n\n  // get material choice\n  getDropdownItems() {\n    this.arWrDropDownDataService.getDropdownItems().subscribe((resp: any[]) => {\n      this.arWrDropDownDataService.sendDropdownItems(resp);\n    });\n  }\n\n  // set initial temperature for currently selected Unit => Imperial / Metric\n  setInitialTemperature() {\n    let currentUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n    let currentTemp: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.INCH) {\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.FAHRENHEIT) {\n        this.helperService.setAndSendTemperatureManually(Temperature.FAHRENHEIT);\n      }\n    }\n    else if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.MILLI_METER) {\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.CELCIUS) {\n        this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\n      }\n    }\n    else {\n      this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\n    }\n  }\n}\n","<app-header></app-header>\n<section class=\"content\">\n    <section class=\"container p-0\">\n        <div class=\"clearfix\"></div>\n        <app-tab-nav class=\"ignorePdf\" [tabMenu]=\"wrArTabs\"></app-tab-nav>\n        <div class=\"container\">\n            <div class=\"row ignorePdf\">\n                <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9 p-1\">\n                    &nbsp;\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                                    <div class=\"pull-left unit-section__label\">Measure:</div>\n                                </div>\n                                <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                                    <measure-button [defaultMeasure]=\"defaultMeasure\"></measure-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </section>\n</section>","// core imports\n// o-ring tool calculators module\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../shared/shared.module\";\nimport { DynamicFormModule } from \"../dynamic-form/dynamic-form.module\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { ArWrCalcRoutingModule } from \"./ar-wr-calc-routing.module\";\nimport { ArWrCalcComponent } from './ar-wr-calc.component';\nimport { ArWrCalcService } from \"./ar-wr-calc.service\";\n\n@NgModule({\n  declarations: [\n    ArWrCalcComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArWrCalcRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [ArWrCalcService]\n})\nexport class ArWrCalcModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../app.config.service';\nimport { BaseModel } from \"../models/base.model\";\nimport { FormGroup } from '@angular/forms';\nimport { SwitchButtonModel } from '../models/switch-button.model';\nimport { PressInDTO } from '../models/pressInDTO';\nimport { CalculatorTypes } from '../shared/helpers/constants';\nimport { WrArMaterialCteDTO } from '../models/wrArMaterialCteDTO';\nimport { WrArMaterial } from '../models/wrArMaterial.model';\nimport { UnitButtonService } from \"../shared/components/unit-button/unit-button.service\";\nimport { HelperService } from \"../shared/services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrCalcService {\n  /* Private Properties   */\n\n  private readonly baseUrl = AppConfig.settings.env.api;\n\n  // oRing config state management subject and observable\n  private readonly oRingConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  // Expose the observable part of the arWrConfig subject (read only stream)\n  readonly arWrConfig$ = this.oRingConfigSubject.asObservable();\n\n  // service state management property \"arWrConfig\"\n  // the getter will return the last value emitted oRingConfigSubject subject\n  private get arWrConfig(): BaseModel {\n    return this.oRingConfigSubject.getValue();\n  }\n\n  // assigning a value to this.arWrConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.arWrConfig = {})\n  private set arWrConfig(val: BaseModel) {\n    this.oRingConfigSubject.next(val);\n  }\n\n  /* Public Properties   */\n\n  // get config value directly using behaviour subject\n  public get getCurrentArWrConfigValue(): BaseModel {\n    return this.arWrConfig;\n  }\n\n  /*  Constructor */\n  constructor(\n    private readonly _http: HttpClient,\n    private readonly unitButtonService: UnitButtonService,\n    private readonly helperService: HelperService\n  ) {\n  }\n\n  // Methods/functions\n  // send oring config\n  // assigning a value to this.arWrConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.arWrConfig = {})\n  sendArWrConfigValue(val: BaseModel) {\n    this.arWrConfig = val;\n  }\n\n  /*  Public Methods   */\n\n  // get o-ring config from server\n  getArWrPressInCalcConfig() {\n    return this._http.get(`${this.baseUrl}wrar/getjsonconfig`);\n  }\n\n  public getInterference(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    return this._http.post(`${this.baseUrl}wrar/getInterference`, body);\n  }\n\n  public getClearance(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel, calculatorType: number = CalculatorTypes.WrArPressIn) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.calculatorType = calculatorType;\n    return this._http.post(`${this.baseUrl}wrar/getClearance`, body);\n  }\n\n  // get material cte data\n  public getMaterialCTE(unit: SwitchButtonModel, material: any) {\n    let body: WrArMaterialCteDTO = new WrArMaterialCteDTO();\n    body.unit = unit.id.toString();\n    body.material = material;\n    return this._http.post(`${this.baseUrl}wrar/getCTEMaterialDetail`, body);\n  }\n\n  // get and set rotor and stator CTE only\n  public getAndSetMaterialCTE(form: FormGroup, controlKey: string, bindControlKey: string, controlValue: any) {\n    this.getMaterialCTE(this.unitButtonService.getCurrentUnitValue, controlValue).subscribe((x: WrArMaterial) => {\n      // rotor CTE\n      if (controlKey === \"rotatingMaterial\") {\n        form.controls[bindControlKey].setValue(this.helperService.convertFromNegetivePowerOfSix(x.rotorCTE).toFixed(2));\n      }\n      else if (controlKey === \"stationaryMaterial\") { // stator CTE\n        form.controls[bindControlKey].setValue(this.helperService.convertFromNegetivePowerOfSix(x.statorCTE).toFixed(2));\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"gt-banner\">\n    <div class=\"container\">\n        <div class=\"gt-header-graphic\"></div>\n        <div class=\"heading\">\n            WR® / AR® Calculator\n        </div>\n        <div class=\"gt-header-logo\"></div>\n    </div>\n</div>","export class PressInDTO {\r\n    unit: string;\r\n    unitTemp: string;\r\n    pumpType: any;\r\n    componentType: any;\r\n    composite: any;\r\n    interferenceTarget: any;\r\n    customInterferenceTarget: any;\r\n    clearanceTarget: any;\r\n    customClearanceTarget: any;\r\n    rotatingElementODMin: any;\r\n    rotatingElementODMax: any;\r\n    rotatingMaterial: any;\r\n    customRotatingMaterial: any;\r\n    stationaryElementIDMin: any;\r\n    stationaryElementIDMax: any;\r\n    stationaryMaterial: any;\r\n    customStationaryMaterial: any;\r\n    stationaryBoreDepthMin: any;\r\n    serviceStorageTemperatureAmbient75FMin: any;\r\n    serviceStorageTemperatureAmbient75FMax: any;\r\n    calculatorType: number;\r\n\r\n    constructor(options: {\r\n        unit?: string,\r\n        unitTemp?: string,\r\n        pumpType?: any,\r\n        componentType?: any,\r\n        composite?: any,\r\n        interferenceTarget?: any,\r\n        customInterferenceTarget?: any,\r\n        clearanceTarget?: any,\r\n        customClearanceTarget?: any,\r\n        rotatingElementODMin?: any,\r\n        rotatingElementODMax?: any,\r\n        rotatingMaterial?: any,\r\n        customRotatingMaterial?: any,\r\n        stationaryElementIDMin?: any,\r\n        stationaryElementIDMax?: any,\r\n        stationaryMaterial?: any,\r\n        customStationaryMaterial?: any,\r\n        stationaryBoreDepthMin?: any,\r\n        serviceStorageTemperatureAmbient75FMin?: any,\r\n        serviceStorageTemperatureAmbient75FMax?: any,\r\n        calculatorType?: number\r\n    } = {}) {\r\n        this.unit = options.unit;\r\n        this.unitTemp = options.unitTemp;\r\n        this.pumpType = options.pumpType;\r\n        this.componentType = options.componentType;\r\n        this.composite = options.composite;\r\n        this.interferenceTarget = options.interferenceTarget;\r\n        this.customInterferenceTarget = options.customInterferenceTarget;\r\n        this.clearanceTarget = options.clearanceTarget;\r\n        this.customClearanceTarget = options.customClearanceTarget;\r\n        this.rotatingElementODMin = options.rotatingElementODMin;\r\n        this.rotatingElementODMax = options.rotatingElementODMax;\r\n        this.rotatingMaterial = options.rotatingMaterial;\r\n        this.customRotatingMaterial = options.customRotatingMaterial;\r\n        this.stationaryElementIDMin = options.stationaryElementIDMin;\r\n        this.stationaryElementIDMax = options.stationaryElementIDMax;\r\n        this.stationaryMaterial = options.stationaryMaterial;\r\n        this.customStationaryMaterial = options.customStationaryMaterial;\r\n        this.stationaryBoreDepthMin = options.stationaryBoreDepthMin;\r\n        this.serviceStorageTemperatureAmbient75FMin = options.serviceStorageTemperatureAmbient75FMin;\r\n        this.serviceStorageTemperatureAmbient75FMax = options.serviceStorageTemperatureAmbient75FMax;\r\n        this.calculatorType = options.calculatorType;\r\n    }\r\n}","export class WrArMaterialCteDTO {\r\n    unit: string;\r\n    material: any;\r\n\r\n    constructor(options: {\r\n        unit?: string,\r\n        material?: any,\r\n        customMaterial?: any,\r\n    } = {}) {\r\n        this.unit = options.unit;\r\n        this.material = options.material;\r\n    }\r\n}","export enum Units {\r\n    INCH = 1,\r\n    MILLI_METER = 2\r\n}\r\n\r\nexport enum Temperature {\r\n    FAHRENHEIT = 1,\r\n    CELCIUS = 2\r\n}\r\n\r\nexport enum CalculatorOption {\r\n    Nominal = 1,\r\n    WithTolerance = 2,\r\n    WithMinMax = 3\r\n}\r\n\r\nexport enum ErrorTypes {\r\n    Error = 1,\r\n    Warning = 2\r\n}\r\n\r\n\r\nexport enum WrArCalcTypes {\r\n    PressIn = \"pressIn\",\r\n    Floating = \"floating\"\r\n}\r\n\r\nexport const customValue = 0;\r\n\r\n\r\nexport enum CalculatorTypes {\r\n    ORingInternalVacuumOnly = 1,\r\n    ORingDovetailGlandVacuumOnly = 2,\r\n    ORingHalfDovetailGlandInternalVacuumOnly = 3,\r\n    ORingRectangularGlandExternalVacuumOnly = 4,\r\n    WrArPressIn = 5,\r\n    WrArFloating = 6\r\n}"]}