{"version":3,"sources":["webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/rectangular-o-ring-calc-routing.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/rectangular-o-ring-calc.component.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/rectangular-o-ring-calc.component.html","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/rectangular-o-ring-calc.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/rectangular-o-ring-calc.service.ts"],"names":["routes","path","component","children","data","calculatorType","ORingInternalVacuumOnly","loadChildren","then","m","ORingInternalVacuumOnlyModule","ORingDovetailGlandVacuumOnly","ORingDovetailGlandVacuumOnlyModule","ORingHalfDovetailGlandInternalVacuumOnly","ORingHalfDovetailGlandInternalVacuumOnlyModule","ORingRectangularGlandExternalVacuumOnly","ORingRectangularGlandExternalVacuumOnlyModule","RectangularORingCalcRoutingModule","forChild","imports","exports","RectangularORingCalcComponent","rectangularORingCalcService","router","controlBaseService","activatedRoute","O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY","currrentSelectedCalculatorId","isJSONConfigFetched","flattenedFormControls","controlType","activatedRouteSubscription","events","pipe","event","subscribe","calculatorId","snapshot","firstChild","getRectangularORingCalcConfig","resp","jsonConfiguration","calculatorTypes","getCalculatorTypeArray","calculatorTypeDDl","calculatorTypeDDLGroup","getCalcuilatorindex","findIndex","calc","form_control_id","push","createCalculatorTypeFormGroup","sendORingConfigValue","error","Error","message","unsubscribe","formControlKey","index","calculators","length","fc","id","key","label","display_calculator_title","value","formControls","calculatorTypeDDLFormGroup","toFormGroup","calculator","navigate","selector","templateUrl","styleUrls","RectangularORingCalcModule","declarations","providers","RectangularORingCalcService","_http","baseUrl","settings","env","api","oRingConfigSubject","oRingConfig$","asObservable","val","oRingConfig","get","getValue","next","providedIn"],"mappings":"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","file":"rectangular-o-ring-calc-rectangular-o-ring-calc-module-es5.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { RectangularORingCalcComponent } from \"./rectangular-o-ring-calc.component\";\r\nimport { CalculatorTypes } from '../../shared/helpers/constants';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: RectangularORingCalcComponent, children: [\r\n            { path: 'createRectangularORing', data: { calculatorType: CalculatorTypes.ORingInternalVacuumOnly }, loadChildren: () => import('./o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.module').then(m => m.ORingInternalVacuumOnlyModule) },\r\n            { path: 'createDovetailORing', data: { calculatorType: CalculatorTypes.ORingDovetailGlandVacuumOnly }, loadChildren: () => import('./o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.module').then(m => m.ORingDovetailGlandVacuumOnlyModule) },\r\n            { path: 'createHalfDovetailGland', data: { calculatorType: CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly }, loadChildren: () => import('./o-ring-half-dovetail-gland-internal-vacuum-only/o-ring-half-dovetail-gland-internal-vacuum-only.module').then(m => m.ORingHalfDovetailGlandInternalVacuumOnlyModule) },\r\n            { path: 'createRectangleOdGland', data: { calculatorType: CalculatorTypes.ORingRectangularGlandExternalVacuumOnly }, loadChildren: () => import('./o-ring-rectangular-gland-external-vacuum-only/o-ring-rectangular-gland-external-vacuum-only.module').then(m => m.ORingRectangularGlandExternalVacuumOnlyModule) }\r\n        ],\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class RectangularORingCalcRoutingModule { }","// core imports\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { FormGroup } from '@angular/forms';\n\n// application imports\nimport { ControlType, CalculatorTypes } from '../../shared/helpers/constants';\nimport { BaseModel } from \"../../models/base.model\";\nimport { CalculatorModel } from \"../../models/calculator.model\";\nimport { FormControlModel } from '../../models/form-control.model';\nimport { RectangularORingCalcService } from \"./rectangular-o-ring-calc.service\";\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\nimport { Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\nimport { DropDownChangeModel } from '../../models/dropdown-change.model';\n\n@Component({\n  selector: 'app-rectangular-o-ring-calc',\n  templateUrl: './rectangular-o-ring-calc.component.html',\n  styleUrls: ['./rectangular-o-ring-calc.component.css']\n})\nexport class RectangularORingCalcComponent implements OnInit, OnDestroy {\n  readonly O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY = \"O_RING_CALCULATOR_TYPE\";\n  currrentSelectedCalculatorId: number = 0;\n  isJSONConfigFetched: boolean = false;\n  jsonConfiguration: BaseModel;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n\n  // calculator dropdown formgroup\n  calculatorTypeDDLFormGroup: FormGroup;\n  calculatorTypeDDl: FormControlModel[];\n  // currentSelectedCalculator: FormControlModel;\n  // subscription\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private router: Router,\n    private controlBaseService: ControlBaseService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      // console.log('route data');\n      // console.log(this.activatedRoute.root);\n      let calculatorId = 0;\n      if (this.activatedRoute.snapshot.firstChild && this.activatedRoute.snapshot.firstChild.data) {\n        calculatorId = this.activatedRoute.snapshot.firstChild.data.calculatorType;\n      }\n\n      if (calculatorId) {\n        this.currrentSelectedCalculatorId = calculatorId;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    // get JSON config from server\n    this.rectangularORingCalcService.getRectangularORingCalcConfig().subscribe(\n      (resp) => {\n        this.isJSONConfigFetched = true;\n        this.jsonConfiguration = resp as BaseModel;\n        // bind calculator type ddl \n        const calculatorTypes: FormControlModel[] = [...this.getCalculatorTypeArray(this.O_RING_CALCULATOR_TYPE_FORM_CONTROL_KEY)];\n        this.calculatorTypeDDl = calculatorTypes;\n        // create form group for calculator dropdown - to handle the dropdown model binding using reactiveform model\n        let calculatorTypeDDLGroup: FormControlModel[] = [];\n        // below calculatorTypeDDLGroup.push also sets the default dropdown selection\n        // create form groupd with initial value of control \"calculatorTypes[0]\"\n        if (this.currrentSelectedCalculatorId && this.currrentSelectedCalculatorId >= 0) {\n\n          // get calculator index by calculator id\n          const getCalcuilatorindex = calculatorTypes.findIndex((calc: FormControlModel) => {\n            if (calc.form_control_id === this.currrentSelectedCalculatorId) {\n              return calc;\n            }\n          });\n\n          // set selected calcalcutor in calculator dropdown\n          if (getCalcuilatorindex) {\n            calculatorTypeDDLGroup.push(calculatorTypes[getCalcuilatorindex]);\n          }\n          else {\n            // set selected calcalcutor in calculator dropdown\n            calculatorTypeDDLGroup.push(calculatorTypes[0]);\n          }\n        }\n        else {\n          // set selected calcalcutor in calculator dropdown\n          calculatorTypeDDLGroup.push(calculatorTypes[0]);\n        }\n\n        // create form group with default option selection\n        this.createCalculatorTypeFormGroup(calculatorTypeDDLGroup);\n        // calculator change\n        // send o-ring config value to subscribers\n        this.rectangularORingCalcService.sendORingConfigValue(this.jsonConfiguration);\n      },\n      (error: HttpErrorResponse) => {\n        throw new Error(error.message);\n      }\n    );\n  }\n\n  // component destroy handler\n  ngOnDestroy(): void {\n    this.isJSONConfigFetched = false;\n    if (this.activatedRouteSubscription) {\n      this.activatedRouteSubscription.unsubscribe();\n    }\n  }\n\n  // calculator types\n  getCalculatorTypeArray(formControlKey: string): FormControlModel[] {\n    let calculatorTypeDDl: FormControlModel[] = [];\n    for (let index = 0; index < this.jsonConfiguration.calculators.length; index++) {\n      const fc: FormControlModel = new FormControlModel({ form_control_id: this.jsonConfiguration.calculators[index].id, key: formControlKey, label: this.jsonConfiguration.calculators[index].display_calculator_title, value: this.jsonConfiguration.calculators[index] });\n      calculatorTypeDDl.push(fc);\n    }\n    return calculatorTypeDDl\n  };\n\n  // create form group\n  // params => formControls\n  createCalculatorTypeFormGroup(formControls: FormControlModel[]) {\n    // calculator type dropdown form group\n    this.calculatorTypeDDLFormGroup = this.controlBaseService.toFormGroup(formControls);\n  }\n\n  // calculator change handler\n  onCalculatorChange(event: DropDownChangeModel) {\n    const calculator = event.value as CalculatorModel;\n    switch (+(calculator.id)) {\n      case CalculatorTypes.ORingInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateoringglands', 'createRectangularORing']);\n        break;\n      case CalculatorTypes.ORingDovetailGlandVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateoringglands', 'createDovetailORing']);\n        break;\n      case CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateoringglands', 'createHalfDovetailGland']);\n        break;\n      case CalculatorTypes.ORingRectangularGlandExternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateoringglands', 'createRectangleOdGland']);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"container\">\r\n    <div class=\"row ignorePdf\">\r\n        <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9 p-1\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\r\n                    <p class=\"info-tab pt-0\">Use this tool for analyzing your current gland and o-ring combination.\r\n                        Modifications to\r\n                        the o-ring size recommended to optimize the users design to improve lifetime of seal. Please\r\n                        contact\r\n                        Greene Tweed engineering for help or advice if required as some applications are difficult to\r\n                        optimize\r\n                        both at ambient and operating temperatures</p>\r\n                </div>\r\n                <div class=\"col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 p-1\"\r\n                    *ngIf=\"calculatorTypeDDl && calculatorTypeDDl.length > 0 && calculatorTypeDDLFormGroup\">\r\n                    <custom-drop-down [options]=\"calculatorTypeDDl\" [form]=\"calculatorTypeDDLFormGroup\"\r\n                        [control]=\"calculatorTypeDDl[0]\" (selectionChange)=\"onCalculatorChange($event)\">\r\n                    </custom-drop-down>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\r\n                            <div class=\"pull-left unit-section__label\">Units:</div>\r\n                        </div>\r\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\r\n                            <unit-button></unit-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\r\n                            <div class=\"pull-left unit-section__label\">Temperature:</div>\r\n                        </div>\r\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\r\n                            <temperature-button></temperature-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","// core imports\r\n// o-ring tool calculators module\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n// application imports\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\r\nimport { RectangularORingCalcRoutingModule } from \"../rectangular-o-ring-calc/rectangular-o-ring-calc-routing.module\";\r\nimport { RectangularORingCalcComponent } from '../rectangular-o-ring-calc/rectangular-o-ring-calc.component';\r\nimport { RectangularORingCalcService } from \"./rectangular-o-ring-calc.service\";\r\n\r\n@NgModule({\r\n  declarations: [RectangularORingCalcComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RectangularORingCalcRoutingModule,\r\n    SharedModule,\r\n    DynamicFormModule\r\n  ],\r\n  providers: [RectangularORingCalcService]\r\n})\r\nexport class RectangularORingCalcModule { }\r\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { BaseModel } from \"../../models/base.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RectangularORingCalcService {\n\n  /* Private Properties   */\n\n  private baseUrl = AppConfig.settings.env.api;\n\n  // oRing config state management subject and observable\n  // private oRingConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  private readonly oRingConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  // Expose the observable part of the oRingConfig subject (read only stream)\n  readonly oRingConfig$ = this.oRingConfigSubject.asObservable();\n\n  // service state management property \"oRingConfig\"\n  // the getter will return the last value emitted oRingConfigSubject subject\n  private get oRingConfig(): BaseModel {\n    return this.oRingConfigSubject.getValue();\n  }\n\n  // assigning a value to this.oRingConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.oRingConfig = {})\n  private set oRingConfig(val: BaseModel) {\n    this.oRingConfigSubject.next(val);\n  }\n\n  /* Public Properties   */\n\n  // get config value directly using behaviour subject\n  public get getCurrentORingConfigValue(): BaseModel {\n    return this.oRingConfig;\n  }\n\n  /*  Constructor */\n  constructor(private _http: HttpClient) {\n  }\n\n  // Methods/functions\n  // send oring config\n  // assigning a value to this.oRingConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.oRingConfig = {})\n  sendORingConfigValue(val: BaseModel) {\n    this.oRingConfig = val;\n  }\n\n  /*  Public Methods   */\n\n  // get o-ring config from server\n  getRectangularORingCalcConfig() {\n    return this._http.get(`${this.baseUrl}oringglandanalysistool/rectangularglandinternalvacuumonly`);\n  }\n}\n"]}