{"version":3,"sources":["webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in-routing.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in-validation.service.ts","webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.component.ts","webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.component.html","webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.module.ts","webpack:///client/app/ar-wr-calc/ar-wr-press-in/ar-wr-press-in.service.ts"],"names":["routes","path","component","pathMatch","ArWrPressInRoutingModule","forChild","imports","exports","ArWrPressInValidationService","helperService","unitButtonService","control","serviceStorageTemperatureAmbient75FMinControl","get","currentSelectedUnit","getCurrentUnitValue","error","value","serviceStorageTemperatureAmbient75FMinError","oringCrossSectionNominalLargerThanRangeError","id","INCH","MILLI_METER","setValidationErrorToFormControl","serviceStorageTemperatureAmbient75FMaxControl","serviceStorageTemperatureAmbient75FMaxError","pumpTypeControl","componentTypeControl","field","type","Warning","bushing","bearing","detail","providedIn","ArWrPressInComponent","controlBaseService","authService","arWrCalcService","dynamicFormTwoColumnLayoutService","printService","temperatureButtonService","arWrPressInService","arWrPressInValidationService","flattenedFormControls","controlType","isSubmitted","payLoad","clientErrors","clientWarnings","serverErrors","serverWarnings","arWrDataSubscription","arWrConfig$","subscribe","x","calculatorConfig","calculators","sendCalculator","createForm","onUnitChange","fieldName","arwrPessInForm","controls","onReset","CalculatedData","resetFormAndCalculation","unitChangeSubscription","unit$","setTemperature","Object","assign","selectedCustomRotatingMaterialControl","selectedCustomStationaryMaterialControl","setValue","convertedForm","convertFormUnitControlValuesAndSet","form","selectedRotatingMaterialControl","selectedStationaryMaterialControl","getAndSetMaterialCTE","currentUnit","currentTemp","getCurrentTemperatureValue","FAHRENHEIT","setAndSendTemperatureManually","CELCIUS","resetErroAndWarnings","resetCalculatedLabelValue","form_validation","includes","CLEARANCE_VALIDATION","clearanceBasedOnPumpAndComponentTypeError","clearanceValidationBasedOnPumpAndComponentType","addClientErrors","invalid","pressInCalculation","resp","data","length","slice","warning","responseDataKeys","keys","outputIndex","form_output","rowIndex","row","columnIndex","form_layout_columns","controlIndex","form_controls","formControl","keyIndex","sub_type","calculated_label","key","toLocaleLowerCase","label","undefined","isNaN","parseFloat","toFixed","show","setAuth","console","log","leftFormControls","left_column","form_layout_row","map","column","formControls","index","fc","push","rightFormControls","right_column","flatten","filteredControls","filter","button","toFormGroup","validations","jsonConfigValidationsArray","validationFuncKey","SERVICE_STORAGE_TEMPERATURE_MIN","serviceStorageTemperatureMinValidation","SERVICE_STORAGE_TEMPERATURE_MAX","serviceStorageTemperatureMaxValidation","setValidators","authenticate","pipe","r","formControlKeys","formControlDefaultValue","getDefaultControlValueFromCalculatorJSONConfig","generatePdf","unsubscribe","event","calculateAndSetInterference","calculateAndSetClearanceTarget","toLowerCase","customInterferenceTargetDDLFC","customInterferenceTargetFC","getInterference","TargetValue","customClearanceTargetDDLFC","customClearanceTargetFC","getClearance","calculatedData","val","selector","templateUrl","styleUrls","encapsulation","None","ArWrPressInModule","declarations","providers","ArWrPressInService","_http","baseUrl","settings","env","api","unit","unitTemp","body","toString","post"],"mappings":"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","file":"ar-wr-press-in-ar-wr-press-in-module-es5.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { ArWrPressInComponent } from \"./ar-wr-press-in.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ArWrPressInComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ArWrPressInRoutingModule { }","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { ErrorModel } from '../../models/error.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { HelperService } from \"../../shared/services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrPressInValidationService {\n  constructor(\n    private readonly helperService: HelperService,\n    private readonly unitButtonService: UnitButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // Function serviceStorageTemperature min validation\n  serviceStorageTemperatureMinValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMinControl = control.get('serviceStorageTemperatureAmbient75FMin');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMinControl\n        && serviceStorageTemperatureAmbient75FMinControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMinError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 75°F or less\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMinError = largerThanValidation(serviceStorageTemperatureAmbient75FMinControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMin\", \"Minimum Temperature\", \"Must be 24°C or less\");\n        }\n\n        if (serviceStorageTemperatureAmbient75FMinError) {\n          error = serviceStorageTemperatureAmbient75FMinError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMinControl, error, \"serviceStorageTemperatureAmbientMin\");\n      return error;\n    };\n  }\n\n  // Function serviceStorageTemperature max validation\n  serviceStorageTemperatureMaxValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const serviceStorageTemperatureAmbient75FMaxControl = control.get('serviceStorageTemperatureAmbient75FMax');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (serviceStorageTemperatureAmbient75FMaxControl\n        && serviceStorageTemperatureAmbient75FMaxControl.value\n      ) {\n        // check O-ring cross section is in range or not else set error message\n        let serviceStorageTemperatureAmbient75FMaxError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"75\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 75°F or more\");\n        }\n        else if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          serviceStorageTemperatureAmbient75FMaxError = lessThanValidation(serviceStorageTemperatureAmbient75FMaxControl.value, \"24\", \"serviceStorageTemperatureAmbient75FMax\", \"Maximum Temperature\", \"Must be 24°C or more\");\n        }\n\n\n        if (serviceStorageTemperatureAmbient75FMaxError) {\n          error = serviceStorageTemperatureAmbient75FMaxError;\n        }\n      }\n\n      this.helperService.setValidationErrorToFormControl(serviceStorageTemperatureAmbient75FMaxControl, error, \"serviceStorageTemperatureAmbientMax\");\n      return error;\n    };\n  }\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** Doen't prevent the form submission*****************/\n  /********************************************************************/\n  // gland width validation\n  clearanceValidationBasedOnPumpAndComponentType(control: FormGroup): ErrorModel {\n    const pumpTypeControl = control.get('pumpType');\n    const componentTypeControl = control.get('componentType');\n\n    if (pumpTypeControl && pumpTypeControl.value && componentTypeControl && componentTypeControl.value) {\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      // const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const error = new ErrorModel();\n      error.field = '';\n      error.type = ErrorTypes.Warning;\n\n      const bushing = \"Follow OEM Bushing Clearance if Available\";\n      const bearing = \"Follow OEM Bearing Clearance if Available\";\n\n      if (pumpTypeControl.value.id === 3 && componentTypeControl.value.id === 1) // pumpType \"VS\" and componentType \"Wear Ring\"\n      {\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .05 mm Over Bearing Clearance (Or OEM Standard)\";\n        }\n        else {\n          // default inch unit is considered\n          error.detail = \"Normal Wear Ring Clearance For VS Pumps is .002 inch Over Bearing Clearance(Or OEM Standard)\";\n        }\n      }\n      else if (componentTypeControl.value.id === 2) // componentType \"Bushing\"\n      {\n        error.detail = bushing;\n      }\n      else if (componentTypeControl.value.id === 3) // componentType Bearing\"\n      {\n        error.detail = bearing;\n      }\n      else {\n        return null;\n      }\n      return error;\n    }\n    else {\n      return null;\n    }\n  }\n}\n","// core imports\nimport { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../models/calculator.model\";\nimport { FormControlModel } from '../../models/form-control.model';\nimport { BaseModel } from '../../models/base.model';\nimport { FormColumnModel } from '../../models/form-column.model';\nimport { ErrorModel } from '../../models/error.model';\nimport { ArWrCalcService } from \"../ar-wr-calc.service\";\nimport { AuthService } from \"../../shared/services/auth.service\";\nimport { ControlType, CalculatorOption, ControlSubType, Units, Temperature, WrArCalc_PressIn_Validators } from '../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\nimport { PrintService } from \"../../shared/services/print.service\";\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\nimport { ArWrPressInValidationService } from \"./ar-wr-press-in-validation.service\";\nimport { ArWrPressInService } from \"./ar-wr-press-in.service\";\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { HelperService } from \"../../shared/services/helper.service\";\nimport { WrArMaterial } from '../../models/wrArMaterial.model';\n\n@Component({\n  selector: 'app-ar-wr-press-in',\n  templateUrl: './ar-wr-press-in.component.html',\n  styleUrls: ['./ar-wr-press-in.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ArWrPressInComponent implements OnInit, OnDestroy {\n\n  calculatorConfig: CalculatorModel;\n  arwrPessInForm: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted = false;\n  payLoad = '';\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  arWrDataSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n\n  // constructor\n  constructor(\n    private readonly controlBaseService: ControlBaseService,\n    private readonly authService: AuthService,\n    private readonly arWrCalcService: ArWrCalcService,\n    private readonly dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private readonly printService: PrintService,\n    private readonly unitButtonService: UnitButtonService,\n    private readonly temperatureButtonService: TemperatureButtonService,\n    private readonly helperService: HelperService,\n    private readonly arWrPressInService: ArWrPressInService,\n    private readonly arWrPressInValidationService: ArWrPressInValidationService\n  ) {\n    // o-ring calculator config subscription\n    this.arWrDataSubscription = this.arWrCalcService.arWrConfig$.subscribe((x: BaseModel) => {\n      if (x) {\n        // calculator - internal vacuum only\n        this.calculatorConfig = x.calculators[0];\n        // send calculator to dynamic form service\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[0]);\n        // create form\n        this.createForm();\n      }\n    });\n\n    // unit change\n    this.onUnitChange();\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.arwrPessInForm && this.arwrPessInForm.controls[fieldName]) {\n      return this.arwrPessInForm.controls[fieldName].value;\n    }\n    else {\n      return \"\";\n    }\n  }\n\n  // onInit\n  ngOnInit(): void {\n    this.onReset();\n    this.isSubmitted = false;\n    this.CalculatedData = {};\n  }\n\n  // unit change perform operations\n  onUnitChange() {\n    // reset \n    this.resetFormAndCalculation();\n\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        // reset \n        this.resetFormAndCalculation();\n\n        // set temperature\n        this.setTemperature();\n\n        if (this.CalculatedData) {\n          // calculated change detection when by changing the object\n          this.CalculatedData = Object.assign({}, this.CalculatedData);\n        }\n\n        // get rotor and stator cte dropdown controls\n        const selectedCustomRotatingMaterialControl = this.arwrPessInForm?.controls[\"customRotatingMaterial\"];\n        const selectedCustomStationaryMaterialControl = this.arwrPessInForm?.controls[\"customStationaryMaterial\"];\n\n        // clear rotor CTE custom input values\n        if (selectedCustomRotatingMaterialControl) {\n          selectedCustomRotatingMaterialControl.setValue(\"\");\n        }\n\n        // clear stator CTE custom input values\n        if (selectedCustomStationaryMaterialControl) {\n          selectedCustomStationaryMaterialControl.setValue(\"\");\n        }\n\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.arwrPessInForm, x);\n\n        // rotating material dropdown selected and not custom selected\n        const selectedRotatingMaterialControl = this.arwrPessInForm?.controls[\"rotatingMaterial\"];\n        const selectedStationaryMaterialControl = this.arwrPessInForm?.controls[\"stationaryMaterial\"];\n        // convert 10 power -6 to XX.XX\n        if (selectedRotatingMaterialControl && selectedRotatingMaterialControl.value && selectedRotatingMaterialControl.value.value > 0) {\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, \"rotatingMaterial\", \"customRotatingMaterial\", selectedRotatingMaterialControl.value);\n        }\n\n        // stationary material dropdown selected and not custom selected\n        // convert 10 power -6 to XX.XX\n        if (selectedStationaryMaterialControl && selectedStationaryMaterialControl.value && selectedStationaryMaterialControl.value.value > 0) {\n          this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, \"stationaryMaterial\", \"customStationaryMaterial\", selectedStationaryMaterialControl.value);\n        }\n\n        if (convertedForm) {\n          this.arwrPessInForm = convertedForm;\n        }\n      }\n    });\n  }\n\n  // set temperature\n  setTemperature() {\n    let currentUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n    let currentTemp: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.INCH) {\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.FAHRENHEIT) {\n        this.helperService.setAndSendTemperatureManually(Temperature.FAHRENHEIT);\n      }\n    }\n\n    if (currentUnit && currentUnit.id > 0 && currentUnit.id === Units.MILLI_METER) {\n      if (currentTemp && currentTemp.id > 0 && currentTemp.id !== Temperature.CELCIUS) {\n        this.helperService.setAndSendTemperatureManually(Temperature.CELCIUS);\n      }\n    }\n  }\n\n  onSubmit() {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n\n    if (!this.arwrPessInForm || !this.arwrPessInForm.value) {\n      return;\n    }\n\n    this.payLoad = this.arwrPessInForm.value;\n    this.isSubmitted = true;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandWidth validation\n    if (this.calculatorConfig.form.form_validation.includes(WrArCalc_PressIn_Validators.CLEARANCE_VALIDATION)) {\n      const clearanceBasedOnPumpAndComponentTypeError = this.arWrPressInValidationService.clearanceValidationBasedOnPumpAndComponentType(this.arwrPessInForm);\n      if (clearanceBasedOnPumpAndComponentTypeError) {\n        this.addClientErrors(clearanceBasedOnPumpAndComponentTypeError);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (!this.arwrPessInForm || this.arwrPessInForm.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.arWrPressInService.pressInCalculation(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe(\n      (resp: any) => {\n        // response\n        if (resp.data) {\n          // set CalculatedData\n          // this will set the graph data also\n          this.CalculatedData = Object.assign({}, resp.data);\n\n          if (resp.data.error && resp.data.error.length > 0) {\n            this.serverErrors = resp.data.error.slice();\n          }\n\n          if (resp.data.warning && resp.data.warning.length > 0) {\n            this.serverWarnings = resp.data.warning;\n          }\n\n          const responseDataKeys = Object.keys(resp.data);\n\n          // Bind output form data\n          // loop through each output\n          for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n            // loop through rows\n            for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n              // loop through columns\n              for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n                // loop through controls\n                for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                  // get form control of JSON\n                  const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                  // get fields key from resp data\n                  // const responseDataKeys = Object.keys(resp.data);\n                  for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                    if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                      // set JSON output label\n                      // bind calculated result to output label\n                      if (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"pressureInfoRT\").toLocaleLowerCase()\n                        || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatedInterfacePressureAtHighestTemperature\").toLocaleLowerCase()\n                        || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatedCollapsePressureatHighestTemperature\").toLocaleLowerCase()\n                      ) {\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}`;\n                      }\n                      else if (\n                        this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER &&\n                        (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"machineCompositeODTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"finishMachineCompositeIDAfterInstallationInchTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"machineCompositeOALTol\").toLocaleLowerCase()\n                          || responseDataKeys[keyIndex].toLocaleLowerCase() === (\"estimatingIDAfterInstallationTol\").toLocaleLowerCase())\n                      ) {\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(2) : resp.data[responseDataKeys[keyIndex]]}`;\n                      }\n                      else if (responseDataKeys[keyIndex].toLocaleLowerCase() === (\"thermalFitTemp\").toLocaleLowerCase()) {\n                        // show or Hide output \"For Thermal Fitting, Heat Carrier to a Minimum\"\n                        if (resp.data[responseDataKeys[keyIndex]]) {\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].show = true;\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed();\n                        }\n                        else {\n                          this.calculatorConfig.form_output[outputIndex].row[rowIndex].show = false;\n                        }\n                      }\n                      else {\n                        // this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)) : resp.data[responseDataKeys[keyIndex]]}`;\n                        this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] && resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(3) : resp.data[responseDataKeys[keyIndex]]}`;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          // reset auth token \n          this.setAuth();\n        }\n      }, (error: any) => {\n        // reset auth token \n        this.setAuth();\n        // TODO: show error if any\n        console.log(error);\n      });\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.arwrPessInForm) {\n            const fc = this.arwrPessInForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.arwrPessInForm) {\n            const fc = this.arwrPessInForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.arwrPessInForm = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_MIN:\n          validations.push(this.arWrPressInValidationService.serviceStorageTemperatureMinValidation());\n          break;\n        case WrArCalc_PressIn_Validators.SERVICE_STORAGE_TEMPERATURE_MAX:\n          validations.push(this.arWrPressInValidationService.serviceStorageTemperatureMaxValidation());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.arwrPessInForm.setValidators(validations);\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.resetErroAndWarnings();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = (outputIndex === 0 ? '' : ``);\n            }\n          }\n        }\n      }\n    }\n\n    // reset calculated data received after calculation\n    this.CalculatedData = null;\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.arwrPessInForm) {\n      return;\n    }\n    // get form controls key\n    const formControlKeys = Object.keys(this.arwrPessInForm.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.arwrPessInForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.arwrPessInForm.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"WrArPressIn\");\n  }\n\n  // component destroy\n  ngOnDestroy(): void {\n    if (this.arWrDataSubscription) {\n      this.arWrDataSubscription.unsubscribe();\n    }\n\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n  }\n\n  // dropdown change event handler of the dynamic form\n  dropdownSelectionChange(event: any) {\n    this.calculateAndSetInterference();\n    this.calculateAndSetClearanceTarget();\n\n    // get and set rotating material change when custom no selected\n    if (event.formControl.key === \"rotatingMaterial\" && event.value.value > 0) {\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, event.formControl.key, \"customRotatingMaterial\", event.value);\n    }\n\n    // get and set stationary material change when custom no selected\n    if (event.formControl.key === \"stationaryMaterial\" && event.value.value > 0) {\n      this.arWrCalcService.getAndSetMaterialCTE(this.arwrPessInForm, event.formControl.key, \"customStationaryMaterial\", event.value);\n    }\n  }\n\n  // numeric input value change event handler of the dynamic form\n  numericInputValueChange(event: any) {\n    // Interference\n    if (event.key.toLowerCase() === (\"stationaryElementIDMax\").toLowerCase()) {\n      this.calculateAndSetInterference();\n    }\n\n    // clearanceCLR\n    if (event.key.toLowerCase() === (\"rotatingElementODMax\").toLowerCase()) {\n      this.calculateAndSetClearanceTarget();\n    }\n  }\n\n  // calculate Interference based on the \"stationaryElementIDMax\"\n  private calculateAndSetInterference() {\n    // inferference dropdown selected value\n    const customInterferenceTargetDDLFC = this.arwrPessInForm.controls[\"interferenceTarget\"];\n    // standard interference    \n    if (customInterferenceTargetDDLFC && customInterferenceTargetDDLFC.value.value > 0) {\n      const customInterferenceTargetFC = this.arwrPessInForm.controls[\"customInterferenceTarget\"];\n      this.arWrCalcService.getInterference(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((x: any) => {\n        // standard option selected\n        if (x && x.TargetValue && customInterferenceTargetFC && (customInterferenceTargetFC.value != x.TargetValue)) {\n          customInterferenceTargetFC.setValue(x.TargetValue.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\n        }\n      });\n    }\n  }\n\n  // calculate clearanceCLR based on the \"rotatingElementODMax\"\n  private calculateAndSetClearanceTarget() {\n    // clearance dropdown selected value\n    const customClearanceTargetDDLFC = this.arwrPessInForm.controls[\"clearanceTarget\"];\n    // stabdard clearance\n    if (customClearanceTargetDDLFC && customClearanceTargetDDLFC.value.value > 0) {\n      const customClearanceTargetFC = this.arwrPessInForm.controls[\"customClearanceTarget\"];\n      // standard option selected\n      this.arWrCalcService.getClearance(this.arwrPessInForm, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((x: any) => {\n        if (x && customClearanceTargetFC && (customClearanceTargetFC.value != x)) {\n          customClearanceTargetFC.setValue(x.toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3)));\n        }\n      });\n    }\n  }\n}\n","<div class=\"row wr-ar-pressin\">\n    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n        <form *ngIf=\"calculatorConfig && arwrPessInForm\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"arwrPessInForm\" novalidate\n            class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\" [form]=\"arwrPessInForm\"\n                        [isSubmitted]=\"isSubmitted\" (reset)=\"onReset()\" (print)=\"onPrint()\">\n                    </calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                    <dynamic-form-two-column-layout [form]=\"arwrPessInForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [isShowNotes]=\"true\" [decimalPoint]=\"3\"\n                        [isUpdateDecimalPointOnUnitChange]=\"false\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\" [isWrAr]=\"true\"\n                        (dropdownSelectionChange)=\"dropdownSelectionChange($event)\"\n                        (numericInputValueChange)=\"numericInputValueChange($event)\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { ArWrPressInRoutingModule } from \"./ar-wr-press-in-routing.module\";\nimport { ArWrPressInComponent } from './ar-wr-press-in.component';\nimport { ArWrPressInService } from \"./ar-wr-press-in.service\";\nimport { ArWrPressInValidationService } from \"./ar-wr-press-in-validation.service\";\n\n@NgModule({\n  declarations: [ArWrPressInComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArWrPressInRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ArWrPressInService,\n    ArWrPressInValidationService\n  ]\n})\nexport class ArWrPressInModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { FormGroup } from '@angular/forms';\nimport { PressInDTO } from 'client/app/models/pressInDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrPressInService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  public pressInCalculation(form: FormGroup, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: PressInDTO = new PressInDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    // body.calculationType = calculationType.GLAND_SIZING;\n\n    return this._http.post(`${this.baseUrl}wrar/pressInCalculation`, body);\n  }\n}\n"]}