{"version":3,"sources":["./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only-routing.module.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only-validation.service.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component.html","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.module.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.service.ts"],"names":[],"mappings":"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","file":"o-ring-dovetail-gland-vacuum-only-o-ring-dovetail-gland-vacuum-only-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ORingDovetailGlandVacuumOnlyComponent } from \"./o-ring-dovetail-gland-vacuum-only.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ORingDovetailGlandVacuumOnlyComponent, pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ORingDovetailGlandVacuumOnlyRoutingModule { }","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, lessThanEqualValidation, largerThanEqualValidation } from \"../../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { MaterialChoiceModel } from '../../../models/material-choice.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { Temperature, Units, ErrorTypes, CalculatorOption } from '../../../shared/helpers/constants';\nimport { ErrorModel } from '../../../models/error.model';\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { MinValue } from \"../../../models/oring-dovetail-min.model\";\nimport { MaxValue } from \"../../../models/oring-dovetail-max.model\";\nimport { RadiiRecomendationNominal } from \"../../../models/radii-recomendation-nominal.model\";\nimport { RadiiRecomendationMin } from \"../../../models/radii-recomendation-min.model\";\nimport { RadiiRecomendationMax } from \"../../../models/radii-recomendation-max.model\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { IBottomRadiiWarningRanges } from '../../../models/Ibottom-radii-warning-ranges';\n\n// constants\nconst glandAngleClientValidationTitle = \"Gland Angle\";\nconst glandAngleRangeValidationMessage = \"For a dovetail gland, input ranges from 45 to 75 degrees though recommended gland angles are from 55-66 degrees. Please contact Greene Tweed engineering for further recommendations.\";\nconst glandWidthClientValidationTitle = \"Gland Width\";\nconst glandWidthClientValidationMessage = \"Inputs create a non-physical gland. Consider increasing Gland Width.\";\nconst bottomRadiiClientValidationTitle = \"Bottom Radii\";\nconst bottomRadiiNonPhysicalValidationMessage = \"Inputs create a non-physical gland. Consider reducing Bottom Radii to below 33% of Gland Depth.\";\nconst topRadiiClientValidationTitle = \"Top Radii\";\nconst topRadiiNonPhysicalValidationMessage = \"Inputs create a non-physical gland. Consider reducing Top Radius to below 13% of Gland Depth.\";\nconst glandAngleRecommendedGlandAngleWarningTitle = \"Gland Angle\";\nconst glandAngleRecommendedGlandAngleWarningMessage = \"For a dovetail gland, input ranges from 45 to 75 degrees though recommended gland angles are from 55-66 degrees. Please contact Greene Tweed engineering for further recommendations.\";\nconst topRadiiReduceLifeWarningTitle = \"Top Radii\";\nconst topRadiiReduceLifeWarningMessage = \"Gland inputs may reduce the lifetime of the seal. Consider reducing Top Radii to below 13% of Gland Depth.\";\nconst bottomRadiiReduceLifeWarningTitle = \"Bottom Radii\";\nconst bottomRadiiReduceLifeWarningMessage = \"Gland inputs may reduce the lifetime of the seal. Consider reducing Bottom Radii to below 33% of Gland Depth.\";\nconst glandWidthNoReliableWarningTitle = \"Gland Width\";\nconst glandWidthNoReliableWarningMessage = \"The gland fill calculations will be considered not reliable as the o-ring could not expand fully into the gland.\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingDovetailGlandVacuumOnlyValidationService {\n\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation/Errors *********************/\n  /************* That do not Prevent the form submission***************/\n  /********************************************************************/\n  // glandAngleNominal validation\n  glandAngleNominalValidation(control: FormGroup): ErrorModel {\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n    let error = null;\n\n    // glandAngleNominal\n    if (glandAngleNominalControl.value) {\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleNominalControl.value, \"44\", \"glandAngleNominal\", glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleNominalControl.value, \"76\", \"glandAngleNominal\", glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n\n    return error;\n  }\n\n  // gland angle min value validation\n  glandAngleMinValidation(control: FormGroup, option: string): ErrorModel {\n    let error: ErrorModel = null;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.Nominal) {\n      return null;\n    }\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(control);\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandAngleMinControlValue = control.get('glandAngleMin').value ? (+control.get('glandAngleMin').value) : null;\n    }\n\n    if (glandAngleMinControlValue) {\n      // min value validation\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"44\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleMinControlValue.toString(), \"76\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n\n    return error;\n  }\n\n  // gland angle max value validation\n  glandAngleMaxValidation(control: FormGroup, option: string): ErrorModel {\n    let error: ErrorModel = null;\n    let glandAngleMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.Nominal) {\n      return null;\n    }\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate max values\n      const maxValues: MaxValue = this.generateMaxValues(control);\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandAngleMaxControlValue = control.get('glandAngleMax').value ? (+control.get('glandAngleMax').value) : null;\n    }\n\n    if (glandAngleMaxControlValue) {\n      // max value validation\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"44\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleMaxControlValue.toString(), \"76\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n    return error;\n  }\n\n  //  oringCrossSectionNominalLessThan vaidate\n  oringCrossSectionNominalLessThanValidation(control: FormGroup): ErrorModel {\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    let error = null;\n    if (oringCrossSectionNominalControl && glandDepthNominalControl && oringCrossSectionNominalControl.value && glandDepthNominalControl.value) {\n      const oringCrossSectionNominalLessThanError = lessThanValidation(oringCrossSectionNominalControl.value, glandDepthNominalControl.value, \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"O-ring Cross Section should greater than or equal to gland depth.\");\n      error = oringCrossSectionNominalLessThanError;\n    }\n    return error;\n  }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // glandWidthNominal limit validation\n  glandWidthNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n\n      // glandWidthNominal\n      if (radiiRecommendedNominalValues.w) {\n        error = lessThanValidation(radiiRecommendedNominalValues.w.toString(), \"0\", \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthNominalNonPhysicalGland\");\n      return error;\n    };\n  }\n\n  // glandWidth min value validation\n  glandWidthMinValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandWidthMinControl = control.get('glandWidthMin');\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      // min value validation\n      if (radiiRecommendedMinValues.wMin) {\n        error = lessThanValidation(radiiRecommendedMinValues.wMin.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"glandWidthMin\" : \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        // if (!glandWidthMinControl.errors) {\n        //   glandWidthMinControl.setErrors(error);\n        // }\n        this.helperService.setValidationErrorToFormControl(glandWidthMinControl, error, \"errorGlandWidthMinNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthMinNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // glandWidth max value validation\n  glandWidthMaxValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandWidthMaxControl = control.get('glandWidthMax');\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if (radiiRecommendedMaxValues.wMax) {\n        // max value validation\n        error = lessThanValidation(radiiRecommendedMaxValues.wMax.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"glandWidthMax\" : \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        // if (!glandWidthMaxControl.errors) {\n        //   glandWidthMaxControl.setErrors(error);\n        // }\n        this.helperService.setValidationErrorToFormControl(glandWidthMaxControl, error, \"errorGlandWidthMaxNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthMaxNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // bottomRadiiNominal limit validation\n  bottomRadiiShouldBeLessThanBottomRadiiMinLimit(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\n      const error = lessThanValidation(bottomRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, `Bottom Radii must have a minimum ${bottomRadiiMinLimit} ${currentSelectedUnit.display_Short_title} radius due to typical machining tolerance standards.`);\n      this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiShouldBeLessThanBottomRadiiMin\");\n      return error;\n    };\n  }\n\n  // bottom radii non physical validation\n  bottomRadiiNominalNonPhysicalGland(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel;\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n\n      if (bottomRadiiNominalControl.value && glandDepthNominalControl.value) {\n        if (radiiRecommendedNominalValues.h && radiiRecommendedNominalValues.bottomRadiiPercent) {\n          const radiiRecommendedNominalValuesHLessThanZeroError = lessThanValidation(radiiRecommendedNominalValues.h.toString(), \"0\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          const radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33 = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          const bottomRadiiErrorMaxRange = (33 / 100) * parseFloat(glandDepthNominalControl.value);\n          const radiiRecommendedNominalValuesBottomRadiiErrorMaxRangeError = largerThanValidation(bottomRadiiNominalControl.value, bottomRadiiErrorMaxRange.toString(), \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          if (radiiRecommendedNominalValuesHLessThanZeroError || radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33 || radiiRecommendedNominalValuesBottomRadiiErrorMaxRangeError) {\n            error = radiiRecommendedNominalValuesHLessThanZeroError || radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33;\n          }\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiNominalNonPhysicalGland\");\n      return error;\n    };\n  }\n\n  // bottom radii min non physical validation\n  bottomRadiiMinNonPhysicalGland(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const bottomRadiiMinControl = control.get('bottomRadiiMin');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      if ((radiiRecommendedMinValues.hMin && radiiRecommendedMinValues.bottomRadiiMinPercent)) {\n        const radiiRecommendedMinValuesHMinLessThanZeroError = lessThanValidation(radiiRecommendedMinValues.hMin.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        const radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error = largerThanValidation(radiiRecommendedMinValues.bottomRadiiMinPercent.toString(), \"33\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        if (radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error) {\n          error = radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMinControl, error, \"bottomRadiiMinNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiMinNonPhysicalGland\");\n      }\n\n      return error;\n    };\n  }\n\n  // bottom radii max non physical validation\n  bottomRadiiMaxNonPhysicalGland(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const bottomRadiiMaxControl = control.get('bottomRadiiMax');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if ((radiiRecommendedMaxValues.hMax && radiiRecommendedMaxValues.bottomRadiiMaxPercent)) {\n        const radiiRecommendedMaxValuesHMaxLessThanZero = lessThanValidation(radiiRecommendedMaxValues.hMax.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        const radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error = largerThanValidation(radiiRecommendedMaxValues.bottomRadiiMaxPercent.toString(), \"33\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        if (radiiRecommendedMaxValuesHMaxLessThanZero || radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error) {\n          error = radiiRecommendedMaxValuesHMaxLessThanZero || radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMaxControl, error, \"bottomRadiiMaxNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiMaxNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // topRadiiNominal limit validation\n  topRadiiNominalShouldBeLessThanBottomRadiiMinLimit(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\n      const error = lessThanValidation(topRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"topRadiiNominal\", topRadiiClientValidationTitle, `Top Radii must have a minimum ${bottomRadiiMinLimit} ${currentSelectedUnit.display_Short_title} radius due to typical machining tolerance standards.`);\n      if (!topRadiiNominalControl.errors) {\n        topRadiiNominalControl.setErrors(error);\n      }\n      return error;\n    };\n  }\n\n  // topRadiiNominal limit validation\n  topRadiiNominalNonPhysicalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      let largerThanValidationError = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n\n      if (topRadiiNominalControl.value && glandDepthNominalControl.value) {\n        const glandDepthNominalControlValidateValue = (parseFloat(glandDepthNominalControl.value) * 22 / 100).toString();\n        largerThanValidationError = largerThanValidation(topRadiiNominalControl.value, glandDepthNominalControlValidateValue, \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if (largerThanValidationError) {\n        error = { ...largerThanValidationError };\n      }\n\n      if (!error && (radiiRecomendationNominalValues.h && radiiRecomendationNominalValues.topRadiiPercent)) {\n        const radiiRecomendationNominalValuesHError = lessThanValidation(radiiRecomendationNominalValues.h.toString(), \"0\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecomendationNominalValuesTopRadiiPercentError = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"13\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        if (radiiRecomendationNominalValuesHError || radiiRecomendationNominalValuesTopRadiiPercentError) {\n          error = radiiRecomendationNominalValuesHError || radiiRecomendationNominalValuesTopRadiiPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if (!topRadiiNominalControl.errors) {\n        topRadiiNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // topRadii min value validation\n  topRadiiMinNonPhysicalValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const topRadiiMinControl = control.get('topRadiiMin');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      // min value validation\n      if (radiiRecommendedMinValues.hMin && radiiRecommendedMinValues.topRadiiMinPercent) {\n        const radiiRecommendedMinValuesHMinLessThanZeroError = lessThanValidation(radiiRecommendedMinValues.hMin.toString(), \"0\", \"topRadiiMin\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecommendedMinValuesTopRadiiMinPercentError = largerThanValidation(radiiRecommendedMinValues.topRadiiMinPercent.toString(), \"13\", \"topRadiiMin\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n\n        if (radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesTopRadiiMinPercentError) {\n          error = radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesTopRadiiMinPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        if (!topRadiiMinControl.errors) {\n          topRadiiMinControl.setErrors(error);\n        }\n      }\n      else {\n        if (!topRadiiNominalControl.errors) {\n          topRadiiNominalControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // topRadii max value validation\n  topRadiiMaxNonPhysicalValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const topRadiiMaxControl = control.get('topRadiiMax');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if (radiiRecommendedMaxValues.hMax && radiiRecommendedMaxValues.topRadiiMaxPercent) {\n        const radiiRecommendedMinValuesHMaxLessThanZeroError = lessThanValidation(radiiRecommendedMaxValues.hMax.toString(), \"0\", \"topRadiiMax\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecommendedMaxaluesTopRadiiMinPercentError = largerThanValidation(radiiRecommendedMaxValues.topRadiiMaxPercent.toString(), \"13\", \"topRadiiMax\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n\n        if (radiiRecommendedMinValuesHMaxLessThanZeroError || radiiRecommendedMaxaluesTopRadiiMinPercentError) {\n          error = radiiRecommendedMinValuesHMaxLessThanZeroError || radiiRecommendedMaxaluesTopRadiiMinPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        if (!topRadiiMaxControl.errors) {\n          topRadiiMaxControl.setErrors(error);\n        }\n      }\n      else {\n        if (!topRadiiNominalControl.errors) {\n          topRadiiNominalControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // operating temperture nominal validation\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  operatingTemperatureValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const materialCteNominalControl = control.get('materialCteNominal');\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\n      const operatingTemperatureMinControl = control.get('operatingTemperatureMin');\n      const operatingTemperatureMaxControl = control.get('operatingTemperatureMax');\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\n      let error = null;\n      if (materialCteNominalValue && materialCteNominalValue.maxtemp) {\n\n        let message = \"\";\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        else {\n          // default CELCIUS\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n\n        // Nominal temperature min and max validation\n        if (operatingTemperatureNominalControl.value) {\n          let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          if (operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError) {\n            error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\n          }\n          operatingTemperatureNominalControl.setErrors(error);\n        }\n\n        // Min temperature min and max validation\n        if (operatingTemperatureMinControl.value) {\n          let operatingTemperatureMinInCelcius = operatingTemperatureMinControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMinInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMinControl.value).toFixed(2);\n          }\n\n          // Temperature min and max validation\n          const operatingTemperatureMinLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          const operatingTemperatureMinLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          if (operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError) {\n            error = operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError;\n          }\n          operatingTemperatureMinControl.setErrors(error);\n        }\n\n        // Max Temperature min and max validation\n        if (operatingTemperatureMaxControl.value) {\n          let operatingTemperatureMaxInCelcius = operatingTemperatureMaxControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMaxInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMaxControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureMaxLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          const operatingTemperatureMaxLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          if (operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError) {\n            error = operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError;\n          }\n          operatingTemperatureMaxControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // Function check O-ring cross section is in range or not else set error message\n  // replacement of checkCrossSection() function of existing angular 1 app\n  oringCrossSectionNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n\n        // check O-ring cross section is in range or not else set error message\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if (oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError) {\n          error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\n        }\n      }\n\n      if (!oringCrossSectionNominalControl.errors) {\n        oringCrossSectionNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // oRingId nominal validation\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\n      let error = null;\n      if (oringIdNominalControl && oringIdNominalControl.value) {\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\n\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"oringIDNominalLargerThanMaxOringID\");\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // less than zero validation\n  formLessThanZeroValidation(toolbarOptionkey: any): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      // get form controls key\n      const formControlKeys = Object.keys(control.controls);\n      // loop through the reactive form/formgroup controls \n      for (let index = 0; index < formControlKeys.length; index++) {\n        // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n        if (toolbarOptionkey === formControlKeys[index]) {\n          continue;\n        }\n\n        // skip gapNominal and operatingTemperatureNominal\n        if (formControlKeys[index] === \"gapNominal\" || formControlKeys[index] === \"gapTolerance\"\n          || formControlKeys[index] === \"gapMin\" || formControlKeys[index] === \"gapMax\"\n          || formControlKeys[index] === \"operatingTemperatureMin\"\n          || formControlKeys[index] === \"operatingTemperatureNominal\"\n          || formControlKeys[index] === \"operatingTemperatureMax\"\n        ) {\n          continue;\n        }\n\n        // any form control value is less than zero\n        const error = lessThanEqualValidation(control.controls[formControlKeys[index]].value, \"0\", formControlKeys[index], \"\", \"Input values should not be Zero or Negative, except Gap and Operating Temperature.\");\n\n        // set error to form control\n        const fc = control.get(formControlKeys[index]);\n        this.helperService.setValidationErrorToFormControl(fc, error, \"LessThanZeroValueError\");\n      }\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // tolrerance validation\n  toleranceValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const msg = \"Tolerance value should not greater or equal to respective nominal value.\";\n      const glandWidthToleranceControl = control.get('glandWidthTolerance');\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandDepthToleranceControl = control.get('glandDepthTolerance');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const glandAngleToleranceControl = control.get('glandAngleTolerance');\n      const glandAngleNominalControl = control.get('glandAngleNominal');\n      const topRadiiToleranceControl = control.get('topRadiiTolerance');\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const bottomRadiiToleranceControl = control.get('bottomRadiiTolerance');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const gapToleranceControl = control.get('gapTolerance');\n      const gapNominalControl = control.get('gapNominal');\n      const glandCenterlineToleranceControl = control.get('glandCenterlineTolerance');\n      const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n\n      if (glandWidthToleranceControl && glandWidthToleranceControl.value) {\n        error = largerThanEqualValidation(glandWidthToleranceControl.value, glandWidthNominalControl.value, \"glandWidthTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandWidthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandDepthToleranceControl && glandDepthToleranceControl.value) {\n        error = largerThanEqualValidation(glandDepthToleranceControl.value, glandDepthNominalControl.value, \"glandDepthTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandDepthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandAngleToleranceControl && glandAngleToleranceControl.value) {\n        error = largerThanEqualValidation(glandAngleToleranceControl.value, glandAngleNominalControl.value, \"glandAngleTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandAngleToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (topRadiiToleranceControl && topRadiiToleranceControl.value) {\n        error = largerThanEqualValidation(topRadiiToleranceControl.value, topRadiiNominalControl.value, \"topRadiiTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(topRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (bottomRadiiToleranceControl && bottomRadiiToleranceControl.value) {\n        error = largerThanEqualValidation(bottomRadiiToleranceControl.value, bottomRadiiNominalControl.value, \"bottomRadiiTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(bottomRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (gapToleranceControl.value != 0) {\n        error = largerThanEqualValidation(gapToleranceControl.value, gapNominalControl.value, \"gapTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(gapToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandCenterlineToleranceControl && glandCenterlineToleranceControl.value) {\n        error = largerThanEqualValidation(glandCenterlineToleranceControl.value, glandCenterlineNominalControl.value, \"glandCenterlineTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandCenterlineToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n      return error;\n    };\n  }\n\n\n\n  // orin id standard warning and prevent to submit the form\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let warning: ErrorModel = null;\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      if ((+currentSelectedUnit.id) === Units.INCH) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"oRingIDAS568AStandards\");\n      return warning;\n    };\n  }\n\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** that Doesn't prevent the form submission*****************/\n  /********************************************************************/\n\n  // glandAngleNominal warning\n  glandAngleNominalWarning(form: FormGroup): ErrorModel {\n    let error: ErrorModel = null;\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n\n    // glandAngleNominal\n    if (glandAngleNominalControl && glandAngleNominalControl.value) {\n      const glandAngleNominalError1 = largerThanEqualValidation(glandAngleNominalControl.value, \"45\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleNominalError2 = lessThanEqualValidation(glandAngleNominalControl.value, \"54\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleNominalError3 = largerThanValidation(glandAngleNominalControl.value, \"67\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleNominalError4 = lessThanEqualValidation(glandAngleNominalControl.value, \"75\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleNominalError1 && glandAngleNominalError2) || (glandAngleNominalError3 && glandAngleNominalError4)) {\n        error = glandAngleNominalError1 || glandAngleNominalError2 || glandAngleNominalError3 || glandAngleNominalError4;\n      }\n    }\n\n    return error;\n  }\n\n  // glandAngleMin\n  glandAngleMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandAngleMinControlValue = form.get('glandAngleMin').value ? (+form.get('glandAngleMin').value) : null;\n    }\n\n    if (glandAngleMinControlValue) {\n      const glandAngleMinWarning1 = largerThanEqualValidation(glandAngleMinControlValue.toString(), \"45\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMinWarning2 = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"54\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleMinWarning3 = largerThanValidation(glandAngleMinControlValue.toString(), \"67\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMinWarning4 = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"75\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleMinWarning1 && glandAngleMinWarning2) || (glandAngleMinWarning3 && glandAngleMinWarning4)) {\n        warning = glandAngleMinWarning1 || glandAngleMinWarning2 || glandAngleMinWarning3 || glandAngleMinWarning4;\n      }\n    }\n    return warning;\n  }\n\n  // glandAngleMax\n  glandAngleMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandAngleMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandAngleMaxControlValue = form.get('glandAngleMax').value ? (+form.get('glandAngleMax').value) : null;\n    }\n\n    if (glandAngleMaxControlValue) {\n      const glandAngleMaxWarning1 = largerThanEqualValidation(glandAngleMaxControlValue.toString(), \"45\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMaxWarning2 = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"54\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleMaxWarning3 = largerThanValidation(glandAngleMaxControlValue.toString(), \"67\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMaxWarning4 = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"75\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleMaxWarning1 && glandAngleMaxWarning2) || (glandAngleMaxWarning3 && glandAngleMaxWarning4)) {\n        warning = glandAngleMaxWarning1 || glandAngleMaxWarning2 || glandAngleMaxWarning3 || glandAngleMaxWarning4;\n      }\n    }\n    return warning;\n  }\n\n  // topRadiiNominal warning\n  topRadiiNominalWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiNominal\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n\n    const topRadiiNominalWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"topRadiiNominal\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiNominalWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiPercent.toString(), \"13\", \"topRadiiNominal\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.h && recommendedRadiiValues.topRadiiPercent && topRadiiNominalWarning1 && topRadiiNominalWarning2) {\n      warning = topRadiiNominalWarning1 || topRadiiNominalWarning2;\n    }\n\n    return warning;\n  }\n\n  // topRadiiMin\n  topRadiiMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiMin\n    const recommendedRadiiValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(form, option);\n\n    const topRadiiMinWarning1 = largerThanValidation(recommendedRadiiValues.hMin.toString(), \"0\", \"topRadiiMin\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiMinWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiMinPercent.toString(), \"13\", \"topRadiiMin\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.hMin && recommendedRadiiValues.topRadiiMinPercent && topRadiiMinWarning1 && topRadiiMinWarning2) {\n      warning = topRadiiMinWarning1 || topRadiiMinWarning2;\n    }\n    return warning;\n  }\n\n  // topRadiiMax\n  topRadiiMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiMax\n    const recommendedRadiiValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(form, option);\n\n    const topRadiiMaxWarning1 = largerThanValidation(recommendedRadiiValues.hMax.toString(), \"0\", \"topRadiiMax\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiMaxWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiMaxPercent.toString(), \"13\", \"topRadiiMax\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.hMax && recommendedRadiiValues.topRadiiMaxPercent && topRadiiMaxWarning1 && topRadiiMaxWarning2) {\n      warning = topRadiiMaxWarning1 || topRadiiMaxWarning2;\n    }\n    return warning;\n  }\n\n  // bottomRadiiNominal warning\n  bottomRadiiNominalWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // bottomRadiiNominal\n    const bottomRadiiNominalControlValue = form.get('bottomRadiiNominal').value;\n    const glandDepthNominalControlValue = form.get('glandDepthNominal').value;\n    const bottomRadiiRanges: IBottomRadiiWarningRanges = this.helperService.getBottomRadiiRange(glandDepthNominalControlValue);\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n\n    const bottomRadiiNominalWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiPercent.toString(), \"33\", \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiNominalRangeWarning1 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange1.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalRangeWarning2 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange1.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiNominalRangeWarning3 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange2.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalRangeWarning4 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange2.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (\n      (recommendedRadiiValues.h && recommendedRadiiValues.bottomRadiiPercent && bottomRadiiNominalWarning1 && bottomRadiiNominalWarning2)\n      || (bottomRadiiNominalRangeWarning1 && bottomRadiiNominalRangeWarning2)\n      || (bottomRadiiNominalRangeWarning3 && bottomRadiiNominalRangeWarning4)\n    ) {\n      warning = bottomRadiiNominalWarning1 || bottomRadiiNominalWarning2 || bottomRadiiNominalRangeWarning1 || bottomRadiiNominalRangeWarning2 || bottomRadiiNominalRangeWarning3 || bottomRadiiNominalRangeWarning4;\n    }\n\n    return warning;\n  }\n\n  // bottomRadiiMin\n  bottomRadiiMinWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // bottomRadiiMin\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n    const bottomRadiiMinWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiMin\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMinWarning2 = largerThanValidation(recommendedRadiiValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiMin\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.h && recommendedRadiiValues.bottomRadiiPercent && bottomRadiiMinWarning1 && bottomRadiiMinWarning2) {\n      warning = bottomRadiiMinWarning1 || bottomRadiiMinWarning2;\n    }\n    return warning;\n  }\n\n  // bottomRadiiMax\n  bottomRadiiMaxWarning(form: FormGroup): ErrorModel {\n    // bottomRadiiNominal\n    const bottomRadiiNominalControlValue = form.get('bottomRadiiNominal').value;\n    let warning: ErrorModel = null;\n    // bottomRadiiMax\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n    const glandDepthNominalControlValue = form.get('glandDepthNominal').value;\n    const bottomRadiiRanges: IBottomRadiiWarningRanges = this.helperService.getBottomRadiiRange(glandDepthNominalControlValue);\n\n    const bottomRadiiMaxWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMaxWarning2 = largerThanValidation(recommendedRadiiValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiMaxWarning3 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange1.toString(), \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMaxWarning4 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange1.toString(), \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (\n      (\n        recommendedRadiiValues.h\n        && recommendedRadiiValues.bottomRadiiPercent\n        && bottomRadiiMaxWarning1\n        && bottomRadiiMaxWarning2)\n      || (bottomRadiiMaxWarning3 && bottomRadiiMaxWarning4)\n    ) {\n      warning = bottomRadiiMaxWarning1 || bottomRadiiMaxWarning2 || bottomRadiiMaxWarning3 || bottomRadiiMaxWarning4;\n    }\n    return warning;\n  }\n\n  // common warning also exist in other calculators\n  // gland width nominal warning\n  glandWidthNominalWarning(form: FormGroup): ErrorModel {\n    let error: ErrorModel = null;\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n    if (glandWidthNominalControl && glandWidthNominalControl.value && oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n      const oringCrossSectionNominalControlValue = (1.2 * (+oringCrossSectionNominalControl.value)).toString();\n      error = largerThanValidation(glandWidthNominalControl.value, oringCrossSectionNominalControlValue, \"glandWidthNominal\", glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return error;\n  }\n\n  // common warning also exist in other calculators\n  // gland width min warning\n  glandWidthMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMinControlValue: number;\n\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n    }\n    else {\n      glandWidthMinControlValue = form.get('glandWidthMin').value ? (+form.get('glandWidthMin').value) : null;\n    }\n\n    if (glandWidthMinControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.2 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMinControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  // gland width max warning\n  glandWidthMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n    }\n    else {\n      glandWidthMaxControlValue = form.get('glandWidthMax').value ? (+form.get('glandWidthMax').value) : null;\n    }\n    if (glandWidthMaxControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.2 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMaxControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  minValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Min values should be less or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const topRadiiNominalControl = control.get('topRadiiNominal');\n    const gapNominalControl = control.get('gapNominal');\n    const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n\n    let glandWidthMinControlValue: number;\n    let glandDepthMinControlValue: number;\n    let bottomRadiiMinControlValue: number;\n    let topRadiiMinControlValue: number;\n    let gapMinControlValue: number;\n    let glandCenterlineMinControlValue: number;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(control);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n      glandDepthMinControlValue = minValues.glandDepthMin;\n      bottomRadiiMinControlValue = minValues.bottomRadiiMin;\n      topRadiiMinControlValue = minValues.topRadiiMin;\n      gapMinControlValue = minValues.gapMin;\n      glandCenterlineMinControlValue = minValues.glandCenterlineMin;\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandWidthMinControlValue = control.get('glandWidthMin').value ? (+control.get('glandWidthMin').value) : null;\n      glandDepthMinControlValue = control.get('glandDepthMin').value ? (+control.get('glandDepthMin').value) : null;\n      bottomRadiiMinControlValue = control.get('bottomRadiiMin').value ? (+control.get('bottomRadiiMin').value) : null;\n      topRadiiMinControlValue = control.get('topRadiiMin').value ? (+control.get('topRadiiMin').value) : null;\n      gapMinControlValue = control.get('gapMin').value ? (+control.get('gapMin').value) : null;\n      glandCenterlineMinControlValue = control.get('glandCenterlineMin').value ? (+control.get('glandCenterlineMin').value) : null;\n      glandAngleMinControlValue = control.get('glandAngleMin').value ? (+control.get('glandAngleMin').value) : null;\n    }\n\n    // min value validation\n    if (glandWidthMinControlValue) {\n      const error1 = largerThanValidation(glandWidthMinControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMinControlValue) {\n      const error2 = largerThanValidation(glandDepthMinControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMin\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMinControlValue) {\n      const error3 = largerThanValidation(bottomRadiiMinControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMin\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMinControlValue) {\n      const error4 = largerThanValidation(gapMinControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMin\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (topRadiiMinControlValue) {\n      const error5 = largerThanValidation(topRadiiMinControlValue.toString(), topRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"topRadiiTolerance\" : \"topRadiiMin\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n\n    if (glandCenterlineMinControlValue) {\n      const error6 = largerThanValidation(glandCenterlineMinControlValue.toString(), glandCenterlineNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandCenterlineTolerance\" : \"glandCenterlineMin\"), \"\", msg);\n      if (error6) {\n        errors.push(error6);\n      }\n    }\n\n    if (glandAngleMinControlValue) {\n      const error7 = largerThanValidation(glandAngleMinControlValue.toString(), glandAngleNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), \"\", msg);\n      if (error7) {\n        errors.push(error7);\n      }\n    }\n    return errors;\n  }\n\n  maxValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Max value should be greater or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const topRadiiNominalControl = control.get('topRadiiNominal');\n    const gapNominalControl = control.get('gapNominal');\n    const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n\n\n    let glandWidthMaxControlValue: number;\n    let glandDepthMaxControlValue: number;\n    let bottomRadiiMaxControlValue: number;\n    let topRadiiMaxControlValue: number;\n    let gapMaxControlValue: number;\n    let glandCenterlineMaxControlValue: number;\n    let glandAngleMaxControlValue: number;\n\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate max values\n      const maxValues: MaxValue = this.generateMaxValues(control);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n      glandDepthMaxControlValue = maxValues.glandDepthMax;\n      bottomRadiiMaxControlValue = maxValues.bottomRadiiMax;\n      topRadiiMaxControlValue = maxValues.topRadiiMax;\n      gapMaxControlValue = maxValues.gapMax;\n      glandCenterlineMaxControlValue = maxValues.glandCenterlineMax;\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandWidthMaxControlValue = control.get('glandWidthMax').value ? (+control.get('glandWidthMax').value) : null;\n      glandDepthMaxControlValue = control.get('glandDepthMax').value ? (+control.get('glandDepthMax').value) : null;\n      bottomRadiiMaxControlValue = control.get('bottomRadiiMax').value ? (+control.get('bottomRadiiMax').value) : null;\n      topRadiiMaxControlValue = control.get('topRadiiMax').value ? (+control.get('topRadiiMax').value) : null;\n      gapMaxControlValue = control.get('gapMax').value ? (+control.get('gapMax').value) : null;\n      glandCenterlineMaxControlValue = control.get('glandCenterlineMax').value ? (+control.get('glandCenterlineMax').value) : null;\n      glandAngleMaxControlValue = control.get('glandAngleMax').value ? (+control.get('glandAngleMax').value) : null;\n    }\n\n    // max value validation\n    if (glandWidthMaxControlValue) {\n      const error1 = lessThanValidation(glandWidthMaxControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMaxControlValue) {\n      const error2 = lessThanValidation(glandDepthMaxControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMax\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMaxControlValue) {\n      const error3 = lessThanValidation(bottomRadiiMaxControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMax\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMaxControlValue) {\n      const error4 = lessThanValidation(gapMaxControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMax\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (topRadiiMaxControlValue) {\n      const error5 = lessThanValidation(topRadiiMaxControlValue.toString(), topRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"topRadiiTolerance\" : \"topRadiiMax\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n\n    if (glandCenterlineMaxControlValue) {\n      const error6 = lessThanValidation(glandCenterlineMaxControlValue.toString(), glandCenterlineNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandCenterlineTolerance\" : \"glandCenterlineMax\"), \"\", msg);\n      if (error6) {\n        errors.push(error6);\n      }\n    }\n\n    if (glandAngleMaxControlValue) {\n      const error7 = lessThanValidation(glandAngleMaxControlValue.toString(), glandAngleNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), \"\", msg);\n      if (error7) {\n        errors.push(error7);\n      }\n    }\n    return errors;\n  }\n\n  //  Helper methods\n  // generate min values when option is Tolerance\n  generateMinValues(form: FormGroup): MinValue {\n    let minValue: MinValue = new MinValue();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n    const glandAngleToleranceControl = form.get('glandAngleTolerance');\n    const topRadiiNominalControl = form.get('topRadiiNominal');\n    const topRadiiToleranceControl = form.get('topRadiiTolerance');\n    const glandCenterlineNominalControl = form.get('glandCenterlineNominal');\n    const glandCenterlineToleranceControl = form.get('glandCenterlineTolerance');\n\n    minValue.glandWidthMin = (parseFloat(glandWidthNominalControl.value) - parseFloat(glandWidthToleranceControl.value));\n    minValue.glandDepthMin = (parseFloat(glandDepthNominalControl.value) - parseFloat(glandDepthToleranceControl.value));\n    minValue.glandAngleMin = (parseFloat(glandAngleNominalControl.value) - parseFloat(glandAngleToleranceControl.value));\n    minValue.bottomRadiiMin = (parseFloat(bottomRadiiNominalControl.value) - parseFloat(bottomRadiiToleranceControl.value));\n    minValue.topRadiiMin = (parseFloat(topRadiiNominalControl.value) - parseFloat(topRadiiToleranceControl.value));\n    minValue.gapMin = (parseFloat(gapNominalControl.value) - parseFloat(gapToleranceControl.value));\n    minValue.glandCenterlineMin = (parseFloat(glandCenterlineNominalControl.value) - parseFloat(glandCenterlineToleranceControl.value));\n    return minValue;\n  }\n\n  // generate max values when option is Tolerance\n  generateMaxValues(form: FormGroup): MaxValue {\n    let maxValue: MaxValue = new MaxValue();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n    const glandAngleToleranceControl = form.get('glandAngleTolerance');\n    const topRadiiNominalControl = form.get('topRadiiNominal');\n    const topRadiiToleranceControl = form.get('topRadiiTolerance');\n    const glandCenterlineNominalControl = form.get('glandCenterlineNominal');\n    const glandCenterlineToleranceControl = form.get('glandCenterlineTolerance');\n\n    maxValue.glandWidthMax = (parseFloat(glandWidthNominalControl.value) + parseFloat(glandWidthToleranceControl.value));\n    maxValue.glandDepthMax = (parseFloat(glandDepthNominalControl.value) + parseFloat(glandDepthToleranceControl.value));\n    maxValue.glandAngleMax = (parseFloat(glandAngleNominalControl.value) + parseFloat(glandAngleToleranceControl.value));\n    maxValue.bottomRadiiMax = (parseFloat(bottomRadiiNominalControl.value) + parseFloat(bottomRadiiToleranceControl.value));\n    maxValue.topRadiiMax = (parseFloat(topRadiiNominalControl.value) + parseFloat(topRadiiToleranceControl.value));\n    maxValue.gapMax = (parseFloat(gapNominalControl.value) + parseFloat(gapToleranceControl.value));\n    maxValue.glandCenterlineMax = (parseFloat(glandCenterlineNominalControl.value) + parseFloat(glandCenterlineToleranceControl.value));\n    return maxValue;\n  }\n\n  // radii recommended values for nominal\n  generateRadiiRecomendationNominal(form: FormGroup): RadiiRecomendationNominal {\n    let radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n\n    const glandDepthNominal = parseFloat(form.get('glandDepthNominal').value);\n    const glandWidthNominal = parseFloat(form.get('glandWidthNominal').value);\n    const topRadiiNominal = parseFloat(form.get('topRadiiNominal').value);\n    const bottomRadiiNominal = parseFloat(form.get('bottomRadiiNominal').value);\n    const glandAngleNominal = parseFloat(form.get('glandAngleNominal').value);\n\n    if (glandDepthNominal >= 0 && glandWidthNominal >= 0 && topRadiiNominal >= 0 && bottomRadiiNominal >= 0 && glandAngleNominal >= 0) {\n      radiiRecomendationNominalValues.h = glandDepthNominal - (topRadiiNominal + bottomRadiiNominal) * (1 + Math.sin((90 - glandAngleNominal) * Math.PI / 180));\n      radiiRecomendationNominalValues.w = (glandWidthNominal / 2) + glandDepthNominal / Math.tan(glandAngleNominal * Math.PI / 180) - bottomRadiiNominal / Math.tan((glandAngleNominal / 2) * Math.PI / 180);\n      radiiRecomendationNominalValues.bottomRadiiPercent = Math.round((bottomRadiiNominal / glandDepthNominal) * 100);\n      radiiRecomendationNominalValues.topRadiiPercent = Math.round((topRadiiNominal / glandDepthNominal) * 100);\n    }\n\n    return radiiRecomendationNominalValues;\n  }\n\n  // radii recommended values for min\n  generateRadiiRecomendationMin(form: FormGroup, option: string): RadiiRecomendationMin {\n    let radiiRecomendationMinValues: RadiiRecomendationMin = new RadiiRecomendationMin();\n    let glandDepthMin: number;\n    let glandWidthMin: number;\n    let topRadiiMin: number;\n    let bottomRadiiMin: number;\n    let glandAngleMin: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandDepthMin = minValues.glandDepthMin;\n      glandWidthMin = minValues.glandWidthMin;\n      topRadiiMin = minValues.topRadiiMin;\n      bottomRadiiMin = minValues.bottomRadiiMin;\n      glandAngleMin = minValues.glandAngleMin;\n    }\n    else {\n      glandDepthMin = parseFloat(form.get('glandDepthMin').value);\n      glandWidthMin = parseFloat(form.get('glandWidthMin').value);\n      topRadiiMin = parseFloat(form.get('topRadiiMin').value);\n      bottomRadiiMin = parseFloat(form.get('bottomRadiiMin').value);\n      glandAngleMin = parseFloat(form.get('glandAngleMin').value);\n    }\n\n\n    if (glandDepthMin >= 0 && glandWidthMin >= 0 && topRadiiMin >= 0 && bottomRadiiMin >= 0 && glandAngleMin >= 0) {\n      radiiRecomendationMinValues.hMin = glandDepthMin - (topRadiiMin + bottomRadiiMin) * (1 + Math.sin((90 - glandAngleMin) * Math.PI / 180));\n      radiiRecomendationMinValues.wMin = (glandWidthMin / 2) + glandDepthMin / Math.tan(glandAngleMin * Math.PI / 180) - bottomRadiiMin / Math.tan((glandAngleMin / 2) * Math.PI / 180);\n      radiiRecomendationMinValues.bottomRadiiMinPercent = Math.round((bottomRadiiMin / glandDepthMin) * 100);\n      radiiRecomendationMinValues.topRadiiMinPercent = Math.round((topRadiiMin / glandDepthMin) * 100);\n    }\n    return radiiRecomendationMinValues;\n  }\n\n  // radii recommended values for max\n  generateRadiiRecomendationMax(form: FormGroup, option: string): RadiiRecomendationMax {\n    let radiiRecomendationMaxValues: RadiiRecomendationMax = new RadiiRecomendationMax();\n    let glandDepthMax: number;\n    let glandWidthMax: number;\n    let topRadiiMax: number;\n    let bottomRadiiMax: number;\n    let glandAngleMax: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandDepthMax = maxValues.glandDepthMax;\n      glandWidthMax = maxValues.glandWidthMax;\n      topRadiiMax = maxValues.topRadiiMax;\n      bottomRadiiMax = maxValues.bottomRadiiMax;\n      glandAngleMax = maxValues.glandAngleMax;\n    }\n    else {\n      glandDepthMax = parseFloat(form.get('glandDepthMax').value);\n      glandWidthMax = parseFloat(form.get('glandWidthMax').value);\n      topRadiiMax = parseFloat(form.get('topRadiiMax').value);\n      bottomRadiiMax = parseFloat(form.get('bottomRadiiMax').value);\n      glandAngleMax = parseFloat(form.get('glandAngleMax').value);\n    }\n\n    if (glandDepthMax >= 0 && glandWidthMax >= 0 && topRadiiMax >= 0 && bottomRadiiMax >= 0 && glandAngleMax >= 0) {\n      radiiRecomendationMaxValues.hMax = glandDepthMax - (topRadiiMax + bottomRadiiMax) * (1 + Math.sin((90 - glandAngleMax) * Math.PI / 180));\n      radiiRecomendationMaxValues.wMax = (glandWidthMax / 2) + glandDepthMax / Math.tan(glandAngleMax * Math.PI / 180) - bottomRadiiMax / Math.tan((glandAngleMax / 2) * Math.PI / 180);\n      radiiRecomendationMaxValues.bottomRadiiMaxPercent = Math.round((bottomRadiiMax / glandDepthMax) * 100);\n      radiiRecomendationMaxValues.topRadiiMaxPercent = Math.round((topRadiiMax / glandDepthMax) * 100);\n    }\n\n    return radiiRecomendationMaxValues;\n  }\n}\n","// core imports\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../../models/calculator.model\";\nimport { FormControlModel } from '../../../models/form-control.model';\nimport { FormColumnModel } from '../../../models/form-column.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ErrorModel } from '../../../models/error.model';\nimport { BaseModel } from '../../../models/base.model';\nimport { RectangularORingCalcService } from \"../rectangular-o-ring-calc.service\";\nimport { AuthService } from \"../../../shared/services/auth.service\";\nimport { ControlType, Units, CalculatorOption, ControlSubType, ORingTool_DovetailGlandVacuumOnly_Validators, Temperature, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../../shared/services/control-base.service\";\nimport { PrintService } from \"../../../shared/services/print.service\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\nimport { ORingDovetailGlandVacuumOnlyService } from \"./o-ring-dovetail-gland-vacuum-only.service\";\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { CalculatorToolbarService } from \"../../../shared/components/calculator-toolbar/calculator-toolbar.service\";\n\n@Component({\n  selector: 'app-o-ring-dovetail-gland-vacuum-only',\n  templateUrl: './o-ring-dovetail-gland-vacuum-only.component.html',\n  styleUrls: ['./o-ring-dovetail-gland-vacuum-only.component.css']\n})\nexport class ORingDovetailGlandVacuumOnlyComponent implements OnInit, OnDestroy {\n  calculatorConfig: CalculatorModel;\n  dovetailGlandForm: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted: Boolean = false;\n  payLoad = '';\n  bottomRadiiMaxLimit: number = 0.035;\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  isShowPasteBtn: Boolean = false;\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  oRingDataSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n  temperatureChangeSubscription: Subscription;\n\n  constructor(\n    private controlBaseService: ControlBaseService,\n    private authService: AuthService,\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private printService: PrintService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService,\n    private oRingDovetailGlandVacuumOnlyValidationService: ORingDovetailGlandVacuumOnlyValidationService,\n    private oRingDovetailGlandVacuumOnlyService: ORingDovetailGlandVacuumOnlyService,\n    private helperService: HelperService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) {\n\n    // get o-ring-dovetail-gland-vacuum-only config value from O-Ring JSON \n    const rectangleJSONConfig = this.rectangularORingCalcService.getCurrentORingConfigValue;\n\n    // o-ring calculator config subscription\n    if (rectangleJSONConfig) {\n      this.initializeOringConfig(rectangleJSONConfig);\n    }\n    else {\n      this.oRingDataSubscription = this.rectangularORingCalcService.oRingConfig$.subscribe((x: BaseModel) => {\n        if (x) {\n          this.initializeOringConfig(x);\n        }\n      });\n    }\n\n    // unit change update calculator values handler\n    this.onUnitChangeUpdateCalculator();\n    this.onTemperatureChangeUpdateCalculator();\n\n    // onPaste event subscription\n    this.calculatorToolbarService.paste.subscribe((d: any) => {\n      if (d) {\n        this.onPaste(d);\n      }\n    });\n  }\n\n  // initialize o-ring-dovetail-gland-vacuum-only calculator by json config param\n  private initializeOringConfig(oRingJsonConfig: BaseModel) {\n    // calculator - o-ring-dovetail-gland-vacuum-only\n    const oRingDovetailGlandVacuumOnly = { ...oRingJsonConfig.calculators[1] };\n    this.calculatorConfig = oRingDovetailGlandVacuumOnly;\n    // send calculator to dynamic form service\n    this.dynamicFormTwoColumnLayoutService.sendCalculator(oRingDovetailGlandVacuumOnly);\n    // create form\n    this.createForm();\n    // show or hide form controls\n    this.onOptionChange(+this.calculatorConfig.toolbarOption.value);\n    this.setShowPasteBtnFlag();\n  }\n\n  // onInit event of component\n  ngOnInit(): void {\n    this.onReset();\n    this.CalculatedData = {};\n    this.setShowPasteBtnFlag();\n  }\n\n  // temperature change update output values handler\n  onTemperatureChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.resetFormAndCalculation();\n      }\n    });\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.dovetailGlandForm\n      && this.dovetailGlandForm.controls[fieldName]\n      && this.dovetailGlandForm.controls[fieldName].value) {\n      return (+this.dovetailGlandForm.controls[fieldName].value).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3);\n    }\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.dovetailGlandForm) {\n            const fc = this.dovetailGlandForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row?.map(row =>\n      row.form_layout_columns?.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.dovetailGlandForm) {\n            const fc = this.dovetailGlandForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.dovetailGlandForm = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_NOMINAL_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthNominalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_MIN_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMinValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_MAX_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMaxValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiShouldBeLessThanBottomRadiiMinLimit());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiNominalNonPhysicalGland());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMinNonPhysicalGland(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMaxNonPhysicalGland(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalShouldBeLessThanBottomRadiiMinLimit());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalNonPhysicalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMinNonPhysicalValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMaxNonPhysicalValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.OPERATING_TEMPERATURE_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.operatingTemperatureValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oringCrossSectionNominalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oringIDNominalLargerThanMaxOringIDValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.LESS_THAN_ZERO_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.formLessThanZeroValidation(this.calculatorConfig.toolbarOption.key));\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOLERANCE_VALIDATION:\n          // apply validation only when Tolerance option selected\n          if ((+this.calculatorConfig.toolbarOption.value) === CalculatorOption.WithTolerance) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.toleranceValidation());\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.ORING_ID_AS568A_STANDARD_WARNING:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oRingIDAS568AStandardsWarning());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.dovetailGlandForm.setValidators(validations);\n  }\n\n  // form submit event\n  onSubmit(isSubmitted = false) {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig || !this.calculatorConfig.form) {\n      return;\n    }\n\n    // this.payLoad = this.dovetailGlandForm.value;\n    this.isSubmitted = isSubmitted;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandAngle nominal validation\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_NOMINAL_VALIDATION)) {\n      const glandAngelNominalError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleNominalValidation(this.dovetailGlandForm);\n      if (glandAngelNominalError) {\n        this.addClientErrors(glandAngelNominalError);\n      }\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      // glandAngle min validation\n      if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_MIN_VALIDATION)) {\n        const glandAngelMinError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMinValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n        if (glandAngelMinError) {\n          this.addClientErrors(glandAngelMinError);\n        }\n      }\n\n      // glandAngle max validation\n      if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_MAX_VALIDATION)) {\n        const glandAngelMaxError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMaxValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n        if (glandAngelMaxError) {\n          this.addClientErrors(glandAngelMaxError);\n        }\n      }\n    }\n\n    // if validation key O_RING_CROSS_SECTION_VALIDATION exist \n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION)) {\n      const oringCrossSectionNominalLessThanError = this.oRingDovetailGlandVacuumOnlyValidationService.oringCrossSectionNominalLessThanValidation(this.dovetailGlandForm);\n      if (oringCrossSectionNominalLessThanError) {\n        this.addClientErrors(oringCrossSectionNominalLessThanError);\n      }\n    }\n\n    // min value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const minValueErrors: ErrorModel[] = this.oRingDovetailGlandVacuumOnlyValidationService.minValueValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (minValueErrors.length > 0) {\n        for (let index = 0; index < minValueErrors.length; index++) {\n          this.addClientErrors(minValueErrors[index]);\n        }\n      }\n    }\n\n    // max value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const maxValueErrors: ErrorModel[] = this.oRingDovetailGlandVacuumOnlyValidationService.maxValueValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (maxValueErrors.length > 0) {\n        for (let index = 0; index < maxValueErrors.length; index++) {\n          this.addClientErrors(maxValueErrors[index]);\n        }\n      }\n    }\n\n    // warnings\n    // glandAngle warnings\n    const glandAngleNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleNominalWarning(this.dovetailGlandForm);\n    if (glandAngleNominalWarning) {\n      this.addClientWarnings(glandAngleNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandAngleMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandAngleMinWarning) {\n        this.addClientWarnings(glandAngleMinWarning);\n      }\n\n      const glandAngleMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandAngleMaxWarning) {\n        this.addClientWarnings(glandAngleMaxWarning);\n      }\n    }\n\n    // topRadii warnings\n    const topRadiiNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalWarning(this.dovetailGlandForm);\n    if (topRadiiNominalWarning) {\n      this.addClientWarnings(topRadiiNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const topRadiiMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (topRadiiMinWarning) {\n        this.addClientWarnings(topRadiiMinWarning);\n      }\n\n      const topRadiiMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (topRadiiMaxWarning) {\n        this.addClientWarnings(topRadiiMaxWarning);\n      }\n    }\n\n    // bottomRadii warnings\n    const bottomRadiiNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiNominalWarning(this.dovetailGlandForm);\n    if (bottomRadiiNominalWarning) {\n      this.addClientWarnings(bottomRadiiNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const bottomRadiiMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMinWarning(this.dovetailGlandForm);\n      if (bottomRadiiMinWarning) {\n        this.addClientWarnings(bottomRadiiMinWarning);\n      }\n\n      const bottomRadiiMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMaxWarning(this.dovetailGlandForm);\n      if (bottomRadiiMaxWarning) {\n        this.addClientWarnings(bottomRadiiMaxWarning);\n      }\n    }\n\n    // glandWidth warnings\n    const glandWidthNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthNominalWarning(this.dovetailGlandForm);\n    if (glandWidthNominalWarning) {\n      this.addClientWarnings(glandWidthNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandWidthMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      const glandWidthMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandWidthMinWarning) {\n        this.addClientWarnings(glandWidthMinWarning);\n      }\n      if (glandWidthMaxWarning) {\n        this.addClientWarnings(glandWidthMaxWarning);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (this.dovetailGlandForm.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.oRingDovetailGlandVacuumOnlyService.createOringDovetail(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((resp: any) => {\n      if (resp.data) {\n        // set CalculatedData\n        // this will set the graph data also\n        this.CalculatedData = Object.assign({}, resp.data);\n\n        if (resp.data.error && resp.data.error.length > 0) {\n          // copy the array for change detection\n          this.serverErrors = resp.data.error.slice();\n        }\n        if (resp.data.warning && resp.data.warning.length > 0) {\n          // copy the array for change detection\n          this.serverWarnings = resp.data.warning.slice();\n        }\n\n        const responseDataKeys = Object.keys(resp.data);\n\n        // when tolerance or minAndmax option is selected than also bind calculated labels received after calculation\n        if (CalculatorOption.Nominal !== +(this.calculatorConfig.toolbarOption.value)) {\n\n          // Bind left form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n\n          // Bind right form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Bind output form data\n        // loop through each output\n        for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n\n          // set output title of operating temperature label\n          if (outputIndex > 0) {\n            const temperatureCode = ((+this.temperatureButtonService.getCurrentTemperatureValue.id) === Temperature.FAHRENHEIT) ? TemperatureFahrenheitCode.HEXA_DECIMAL_CODE : TemperatureCelsiusCode.HEXA_DECIMAL_CODE;\n\n            const operatingTemperatureMin = this.dovetailGlandForm.controls[\"operatingTemperatureMin\"];\n            const operatingTemperatureNominal = this.dovetailGlandForm.controls[\"operatingTemperatureNominal\"];\n            const operatingTemperatureMax = this.dovetailGlandForm.controls[\"operatingTemperatureMax\"];\n\n            // operating temperature min\n            if (outputIndex === 1 && operatingTemperatureMin && operatingTemperatureMin.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMin.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 1) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature nominal\n            if (outputIndex === 2 && operatingTemperatureNominal && operatingTemperatureNominal.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureNominal.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 2) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n\n            // operating temperature max\n            if (outputIndex === 3 && operatingTemperatureMax && operatingTemperatureMax.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMax.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 3) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n          }\n\n          // loop through rows\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}%`;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // reset auth token \n        this.setAuth();\n      }\n    }, (error: any) => {\n      // reset auth token \n      this.setAuth();\n      // TODO: show error if any\n      console.log(error);\n    });\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    // copy the array for change detection\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    // copy the array for change detection\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // option nominal, tolerance and (min and max) change handler\n  onOptionChange(selectedOption: number) {\n    // show or hide controls based on options\n    this.dynamicFormTwoColumnLayoutService.showOrHideControlsBasedOnOption(selectedOption);\n    // update form submission status\n    this.isSubmitted = false;\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n    // create form\n    this.createForm();\n    this.setShowPasteBtnFlag();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \" %\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"dovetailGland\");\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.dovetailGlandForm) {\n      return;\n    }\n\n    // get form controls key\n    const formControlKeys = Object.keys(this.dovetailGlandForm.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n      if (this.calculatorConfig.toolbarOption.key === formControlKeys[index]) {\n        continue;\n      }\n\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.dovetailGlandForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.dovetailGlandForm.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\n    // const responseDataKeys = Object.keys(this.CalculatedData);\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n          // }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          // get fields key from resp data\n          // const responseDataKeys = Object.keys(resp.data);\n          // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n          // }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            // const responseDataKeys = Object.keys(resp.data);\n            // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `%`;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    // Operating Temperature Min\n    this.calculatorConfig.form_output[1].display_output_title = \"\";\n    this.calculatorConfig.form_output[1].show = false;\n    // Operating Temperature Nominal\n    this.calculatorConfig.form_output[2].display_output_title = \"\";\n    // Operating Temperature Max\n    this.calculatorConfig.form_output[3].display_output_title = \"\";\n    this.calculatorConfig.form_output[3].show = false;\n\n    // reset calculated data received after calculation\n    this.CalculatedData = {};\n  }\n\n  // unit change update output values handler\n  onUnitChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      // reset \n      this.resetFormAndCalculation();\n\n      if (x) {\n        if (x.id === Units.MILLI_METER) {\n          // millimeter\n          this.bottomRadiiMaxLimit = 0.89; //0.035 * 25.40;\n        }\n        else {\n          // Inch\n          this.bottomRadiiMaxLimit = 0.035;\n        }\n\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.dovetailGlandForm, x);\n        if (convertedForm) {\n          this.dovetailGlandForm = convertedForm;\n        }\n\n        /// recalculate the data\n        this.onSubmit();\n      }\n    });\n  }\n\n  // call this function for calculatin to determine validation for dovetail radii\n  radiiRecomendation() {\n    const glandDepthNominal = parseFloat(this.dovetailGlandForm.controls[\"glandDepthNominal\"].value);\n    const glandWidthNominal = parseFloat(this.dovetailGlandForm.controls[\"glandWidthNominal\"].value);\n    const topRadiiNominal = parseFloat(this.dovetailGlandForm.controls[\"topRadiiNominal\"].value);\n    const bottomRadiiNominal = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiNominal\"].value);\n    const glandAngleNominal = parseFloat(this.dovetailGlandForm.controls[\"glandAngleNominal\"].value);\n\n    if (glandDepthNominal >= 0 && glandWidthNominal >= 0 && topRadiiNominal >= 0 && bottomRadiiNominal >= 0 && glandAngleNominal >= 0) {\n      let h = glandDepthNominal - (topRadiiNominal + bottomRadiiNominal) * (1 + Math.sin((90 - glandAngleNominal) * Math.PI / 180));\n      let w = (glandWidthNominal / 2) + glandDepthNominal / Math.tan(glandAngleNominal * Math.PI / 180) - bottomRadiiNominal / Math.tan((glandAngleNominal / 2) * Math.PI / 180);\n      let bottomRadiiPercent = Math.round((bottomRadiiNominal / glandDepthNominal) * 100);\n      let topRadiiPercent = Math.round((topRadiiNominal / glandDepthNominal) * 100);\n    }\n\n    const glandDepthMin = parseFloat(this.dovetailGlandForm.controls[\"glandDepthMin\"].value);\n    const glandWidthMin = parseFloat(this.dovetailGlandForm.controls[\"glandWidthMin\"].value);\n    const topRadiiMin = parseFloat(this.dovetailGlandForm.controls[\"topRadiiMin\"].value);\n    const bottomRadiiMin = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiMin\"].value);\n    const glandAngleMin = parseFloat(this.dovetailGlandForm.controls[\"glandAngleMin\"].value);\n    if (glandDepthMin >= 0 && glandWidthMin >= 0 && topRadiiMin >= 0 && bottomRadiiMin >= 0 && glandAngleMin >= 0) {\n      let hMin = glandDepthMin - (topRadiiMin + bottomRadiiMin) * (1 + Math.sin((90 - glandAngleMin) * Math.PI / 180));\n      let wMin = (glandWidthMin / 2) + glandDepthMin / Math.tan(glandAngleMin * Math.PI / 180) - bottomRadiiMin / Math.tan((glandAngleMin / 2) * Math.PI / 180);\n      let bottomRadiiMinPercent = Math.round((bottomRadiiMin / glandDepthMin) * 100);\n      let topRadiiMinPercent = Math.round((topRadiiMin / glandDepthMin) * 100);\n    }\n\n    const glandDepthMax = parseFloat(this.dovetailGlandForm.controls[\"glandDepthMax\"].value);\n    const glandWidthMax = parseFloat(this.dovetailGlandForm.controls[\"glandWidthMax\"].value);\n    const topRadiiMax = parseFloat(this.dovetailGlandForm.controls[\"topRadiiMax\"].value);\n    const bottomRadiiMax = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiMax\"].value);\n    const glandAngleMax = parseFloat(this.dovetailGlandForm.controls[\"glandAngleMax\"].value);\n    if (glandDepthMax >= 0 && glandWidthMax >= 0 && topRadiiMax >= 0 && bottomRadiiMax >= 0 && glandAngleMax >= 0) {\n      let hMax = glandDepthMax - (topRadiiMax + bottomRadiiMax) * (1 + Math.sin((90 - glandAngleMax) * Math.PI / 180));\n      let Max = (glandWidthMax / 2) + glandDepthMax / Math.tan(glandAngleMax * Math.PI / 180) - bottomRadiiMax / Math.tan((glandAngleMax / 2) * Math.PI / 180)\n      let bottomRadiiMaxPercent = Math.round((bottomRadiiMax / glandDepthMax) * 100);\n      let topRadiiMaxPercent = Math.round((topRadiiMax / glandDepthMax) * 100);\n    }\n  }\n\n  // on paste calculated data\n  onPaste(calculatedData: any) {\n    if (calculatedData) {\n      this.dovetailGlandForm.patchValue(calculatedData);\n      // set material choice dropdown value\n      const materialChoiceControl = this.dovetailGlandForm.get('materialCteNominal');\n      if (materialChoiceControl) {\n        const cte = this.helperService.getMaterialChoiceList('materialCteNominal');\n        const i = cte.findIndex((c) => {\n          return c.value.id === calculatedData['materialCteNominal'].id\n        });\n        if (i > -1) {\n          materialChoiceControl.setValue(cte[i].value);\n        }\n      }\n    }\n  }\n\n  // set show flag of paste button\n  setShowPasteBtnFlag() {\n    if (this.calculatorConfig && this.calculatorConfig.id) {\n      this.isShowPasteBtn = (this.helperService.isCalculatedDataExist(+this.calculatorConfig.id)) ? true : false;\n    }\n    else {\n      this.isShowPasteBtn = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n    if (this.temperatureChangeSubscription) {\n      this.temperatureChangeSubscription.unsubscribe();\n    }\n    if (this.oRingDataSubscription) {\n      this.oRingDataSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9\">\n        <form *ngIf=\"calculatorConfig && dovetailGlandForm\" (ngSubmit)=\"onSubmit(true)\" [formGroup]=\"dovetailGlandForm\"\n            novalidate class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\"\n                        [isShowOptions]=\"calculatorConfig.toolbarOption ? true : false\" [form]=\"dovetailGlandForm\"\n                        [control]=\"calculatorConfig.toolbarOption\" [isSubmitted]=\"isSubmitted\"\n                        [isShowPasteBtn]=\"isShowPasteBtn\" (optionChange)=\"onOptionChange($event)\" (reset)=\"onReset()\"\n                        (print)=\"onPrint()\"></calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <dynamic-form-two-column-layout [form]=\"dovetailGlandForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                <!-- graph -->\n                <div class=\"graph-sec\">\n                    <h3>Gland Information</h3>\n                    <div class=\"graph-bg dovtail-bg\">\n                        <div class=\"gld-id\">CL: <strong>{{getControlValue('glandCenterlineNominal')}}</strong> <br>\n                            (to centerline)</div>\n                        <div class=\"gld-width\">GLAND WIDTH: <strong>{{getControlValue('glandWidthNominal')}}</strong>\n                            <br>(to sharp corners)</div>\n                        <div class=\"gld-depth\">GLAND DEPTH:\n                            <br><strong>{{getControlValue('glandDepthNominal')}}</strong></div>\n                        <div class=\"top-radii\">TOP RADII: <strong>{{getControlValue('topRadiiNominal')}}</strong>\n                        </div>\n                        <div class=\"bottom-radii\">BOTTOM RADII:\n                            <strong>{{getControlValue('bottomRadiiNominal')}} </strong></div>\n                        <div class=\"gld-angle\">GLAND ANGLE: <strong>{{getControlValue('glandAngleNominal')}}</strong>\n                        </div>\n                        <div class=\"gap-full-comp\">GAP: <strong>{{getControlValue('gapNominal')}}</strong> <br>(may\n                            or may not exist)</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                <user-rules></user-rules>\n            </div>\n        </div>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../../dynamic-form/dynamic-form.module\";\nimport { ORingDovetailGlandVacuumOnlyRoutingModule } from \"./o-ring-dovetail-gland-vacuum-only-routing.module\";\nimport { ORingDovetailGlandVacuumOnlyComponent } from '../o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component';\nimport { ORingDovetailGlandVacuumOnlyService } from \"./o-ring-dovetail-gland-vacuum-only.service\";\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\n\n@NgModule({\n  declarations: [ORingDovetailGlandVacuumOnlyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    DynamicFormModule,\n    ORingDovetailGlandVacuumOnlyRoutingModule\n  ],\n  providers: [\n    ORingDovetailGlandVacuumOnlyService,\n    ORingDovetailGlandVacuumOnlyValidationService\n  ]\n})\nexport class ORingDovetailGlandVacuumOnlyModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { ORingDovetailGlandVacuumOnlyDTO } from \"../../../models/oRingDovetailGlandVacuum OnlyDTO\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\nimport { FormGroup } from '@angular/forms';\nimport { CalculatorOption, calculationType } from '../../../shared/helpers/constants';\nimport { MaxValue } from '../../../models/oring-dovetail-max.model';\nimport { MinValue } from '../../../models/oring-dovetail-min.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingDovetailGlandVacuumOnlyService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(private _http: HttpClient, private oRingDovetailGlandVacuumOnlyValidationService: ORingDovetailGlandVacuumOnlyValidationService) { }\n\n  public createOringDovetail(form: FormGroup, inputOption: string, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: ORingDovetailGlandVacuumOnlyDTO = new ORingDovetailGlandVacuumOnlyDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.inputOption = inputOption;\n    body.calculationType = calculationType.ORING_SIZING;\n\n    if (CalculatorOption.WithTolerance === +(inputOption)) {\n      const minValue: MinValue = this.oRingDovetailGlandVacuumOnlyValidationService.generateMinValues(form);\n      body.glandWidthMin = minValue.glandWidthMin ? minValue.glandWidthMin : 0;\n      body.glandDepthMin = minValue.glandDepthMin ? minValue.glandDepthMin : 0;\n      body.glandAngleMin = minValue.glandAngleMin ? minValue.glandAngleMin : 0;\n      body.bottomRadiiMin = minValue.bottomRadiiMin ? minValue.bottomRadiiMin : 0;\n      body.topRadiiMin = minValue.topRadiiMin ? minValue.topRadiiMin : 0;\n      body.gapMin = minValue.gapMin ? minValue.gapMin : 0;\n      body.glandCenterlineMin = minValue.glandCenterlineMin ? minValue.glandCenterlineMin : 0;\n\n      const maxValue: MaxValue = this.oRingDovetailGlandVacuumOnlyValidationService.generateMaxValues(form);\n      body.glandWidthMax = maxValue.glandWidthMax ? maxValue.glandWidthMax : 0;\n      body.glandDepthMax = maxValue.glandDepthMax ? maxValue.glandDepthMax : 0;\n      body.glandAngleMax = maxValue.glandAngleMax ? maxValue.glandAngleMax : 0;\n      body.bottomRadiiMax = maxValue.bottomRadiiMax ? maxValue.bottomRadiiMax : 0;\n      body.topRadiiMax = maxValue.topRadiiMax ? maxValue.topRadiiMax : 0;\n      body.gapMax = maxValue.gapMax ? maxValue.gapMax : 0;\n      body.glandCenterlineMax = maxValue.glandCenterlineMax ? maxValue.glandCenterlineMax : 0\n    }\n\n    return this._http.post(`${this.baseUrl}oringglandanalysistool/createOringDovetail`, body);\n  }\n}\n"],"sourceRoot":"webpack:///"}