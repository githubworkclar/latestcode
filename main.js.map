{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./client/app/app-routing.module.ts","./client/app/app.component.ts","./client/app/app.component.html","./client/app/app.config.service.ts","./client/app/app.module.ts","./client/app/footer/footer.component.ts","./client/app/footer/footer.component.html","./client/app/helpers/interceptors/error.interceptor.ts","./client/app/helpers/interceptors/jwt.interceptor.ts","./client/app/helpers/interceptors/spinner.interceptor.ts","./client/app/models/auth.model.ts","./client/app/models/dropdown-change.model.ts","./client/app/models/form-control.model.ts","./client/app/models/log.model.ts","./client/app/models/switch-button.model.ts","./client/app/models/view-error.model.ts","./client/app/shared/components/alert-modal/alert-modal.component.ts","./client/app/shared/components/alert-modal/alert-modal.component.html","./client/app/shared/components/calculator-toolbar/calculator-toolbar.component.ts","./client/app/shared/components/calculator-toolbar/calculator-toolbar.component.html","./client/app/shared/components/calculator-toolbar/calculator-toolbar.service.ts","./client/app/shared/components/custom-controls/drop-down/drop-down.component.ts","./client/app/shared/components/custom-controls/drop-down/drop-down.component.html","./client/app/shared/components/custom-controls/numeric-textbox/numeric-textbox.component.ts","./client/app/shared/components/custom-controls/numeric-textbox/numeric-textbox.component.html","./client/app/shared/components/custom-controls/switch-button/switch-button.component.ts","./client/app/shared/components/custom-controls/switch-button/switch-button.component.html","./client/app/shared/components/custom-controls/textbox/textbox.component.ts","./client/app/shared/components/custom-controls/textbox/textbox.component.html","./client/app/shared/components/dash-size-details/dash-size-details.component.ts","./client/app/shared/components/dash-size-details/dash-size-details.component.html","./client/app/shared/components/dash-size-details/dash-size-details.service.ts","./client/app/shared/components/measure-button/measure-button.component.ts","./client/app/shared/components/measure-button/measure-button.component.html","./client/app/shared/components/tab-nav/tab-nav.component.ts","./client/app/shared/components/tab-nav/tab-nav.component.html","./client/app/shared/components/temperature-button/temperature-button.component.ts","./client/app/shared/components/temperature-button/temperature-button.component.html","./client/app/shared/components/temperature-button/temperature-button.service.ts","./client/app/shared/components/toasts-container/toast-service.ts","./client/app/shared/components/toasts-container/toasts-container.component.ts","./client/app/shared/components/toasts-container/toasts-container.component.html","./client/app/shared/components/unit-button/unit-button.component.ts","./client/app/shared/components/unit-button/unit-button.component.html","./client/app/shared/components/unit-button/unit-button.service.ts","./client/app/shared/components/user-rules/user-rules.component.ts","./client/app/shared/components/user-rules/user-rules.component.html","./client/app/shared/directives/numeric.directive.ts","./client/app/shared/helpers/constants.ts","./client/app/shared/services/ar-wr-drop-down-data.service.ts","./client/app/shared/services/auth.service.ts","./client/app/shared/services/control-base.service.ts","./client/app/shared/services/custom-validation.service.ts","./client/app/shared/services/error.service.ts","./client/app/shared/services/global-error-handler.ts","./client/app/shared/services/helper.service.ts","./client/app/shared/services/logger.service.ts","./client/app/shared/services/material-choice.service.ts","./client/app/shared/services/print.service.ts","./client/app/shared/shared.module.ts","./client/environments/environment.ts","./client/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CalculatorGroup } from './shared/helpers/constants';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'oringgland',\r\n    data:\r\n    {\r\n      calculatorGroup: CalculatorGroup.ORingNGlandCalcs\r\n    },\r\n    loadChildren: () => import('./oring-and-gland-calc/oring-and-gland-calc.module').then(m => m.ORingAndGlandCalcModule)\r\n  },\r\n  {\r\n    path: 'wrar',\r\n    data: { calculatorGroup: CalculatorGroup.WrArCalcs }, loadChildren: () => import('./ar-wr-calc/ar-wr-calc.module').then(m => m.ArWrCalcModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'oringgland/evaluateglandsizecalculatorsglands/createRectangleGland',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// core imports\nimport { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n// third party imports\nimport { filter, first } from 'rxjs/operators';\nimport { Subscription, throwError } from 'rxjs';\n\n// application imports\nimport { AppConfig } from './app.config.service';\nimport { AuthModel } from \"./models/auth.model\";\nimport { MaterialChoiceModel } from './models/material-choice.model';\nimport { AuthService } from \"./shared/services/auth.service\";\nimport { MaterialChoiceService } from \"./shared/services/material-choice.service\";\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { CalculatorGroup } from './shared/helpers/constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = '';\n  authData: AuthModel;\n  isShowAppVersion = false;\n  calculatorGroup = 0;\n  // subscription\n  authDataSubscription: Subscription;\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private readonly titleService: Title,\n    private readonly authService: AuthService,\n    private readonly materialChoiceService: MaterialChoiceService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {    \n    this.authDataSubscription = this.authService.authData.subscribe(x => this.authData = x);\n\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.calculatorGroup = 0;\n      if (this.activatedRoute.snapshot.firstChild && this.activatedRoute.snapshot.firstChild.data) {\n        this.calculatorGroup = this.activatedRoute.snapshot.firstChild.data.calculatorGroup;\n        if (this.calculatorGroup === CalculatorGroup.WrArCalcs) {\n          this.isShowAppVersion = true;\n        }\n        this.setTitle();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.setAuth();\n    // get material choice\n    this.getMaterialChoice();\n  }\n\n  // set browser title\n  public setTitle() {\n    if (this.calculatorGroup === CalculatorGroup.WrArCalcs) {\n      this.titleService.setTitle(AppConfig.settings.app.wrArTitle);\n    }\n    else {\n      this.titleService.setTitle(AppConfig.settings.app.title);\n    }\n  }\n\n  // method to get authentication token and store it into cookies\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // get material choice\n  getMaterialChoice() {\n    this.materialChoiceService.getMaterialChoice().subscribe((resp: MaterialChoiceModel[]) => {\n      this.materialChoiceService.sendMaterialChoiceList(resp);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.authDataSubscription) {\n      this.authDataSubscription.unsubscribe();\n    }\n  }\n}\n","<router-outlet></router-outlet>\r\n<app-footer [isShowAppVersion]=\"isShowAppVersion\"></app-footer>\r\n<!-- ngx spinner -->\r\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#fff\" type=\"square-jelly-box\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>\r\n<!-- toaster container -->\r\n<app-toasts-container aria-live=\"polite\" aria-atomic=\"true\"></app-toasts-container>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { IAppConfig } from './app-config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfig {\n  private readonly httpClient: HttpClient;\n  static settings: IAppConfig;\n\n  constructor(handler: HttpBackend) {\n    this.httpClient = new HttpClient(handler);\n  }\n  \n  load() {\n    // let jsonFile = `assets/config/config.${environment.name}.json`;\n    // if (!environment.name || (environment.name && environment.name.toLowerCase() === 'dev')) {\n    const jsonFile = `assets/config/config.json`;\n    // }\n\n    return new Promise<void>((resolve, reject) => {\n      this.httpClient.get(jsonFile).toPromise().then((response: IAppConfig) => {\n        AppConfig.settings = response;\n        resolve();\n      }).catch((response: any) => {\n        reject(`Could not load file '${jsonFile}': ${JSON.stringify(response)}`);\n      });\n    });\n  }\n}\n","// core imports\r\nimport { APP_INITIALIZER, NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// third party imports\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\n// application imports\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppConfig } from \"./app.config.service\";\r\nimport { ErrorInterceptor } from \"./helpers/interceptors/error.interceptor\";\r\nimport { JwtInterceptor } from \"./helpers/interceptors/jwt.interceptor\";\r\nimport { SpinnerInterceptor } from \"./helpers/interceptors/spinner.interceptor\";\r\nimport { FooterComponent } from \"./footer/footer.component\";\r\nimport { SharedModule } from \"./shared/shared.module\";\r\nimport { GlobalErrorHandler } from \"./shared/services/global-error-handler\";\r\n\r\nexport function initializeApp(appConfig: AppConfig) {\r\n  return () => appConfig.load();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    SharedModule.forRoot(),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [\r\n    // {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    AppConfig,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [AppConfig], multi: true\r\n    },\r\n    // processes all errors\r\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: SpinnerInterceptor, multi: true },\r\n    // interceptor for HTTP errors\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { environment } from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  @Input() isShowAppVersion = false;\n  public version: string = environment.appVersion;\n  currentYear = (new Date()).getFullYear();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"footer\">\n    <div class=\"footer-top\">\n        <div class=\"container\">\n            <p><strong>Disclaimer: </strong>The information provided in this tool is solely for vacuum and low pressure\n                applications within semiconductor manufacturing and processing applications, and may not function in any\n                other application. The tool will be revised as new or modified information becomes available. The data\n                reflects material properties and specifications gathered by Greene, Tweed at their expense, but may not\n                represent actual situational conditions found in a particular application. Data provided is for general\n                guidance in choosing an appropriate product. Testing should be done to confirm suitability to the\n                specific purpose and more information can be had by contacting Greene, Tweed Semiconductor Engineering.\n            </p>\n            <p>\n                Greene, Tweed cannot include all actual end use conditions applied to the products in its internal\n                testing and assumes no liability and makes no warranties based upon information garnered from the tool.\n                Use of the tool is done so by the consumer at their own risk. Greene, Tweed retains all intellectual\n                property rights associated with the tool and products.\n            </p>\n            <p>Chemraz&reg is a registered Trademark of Greene, Tweed.</p>\n        </div>\n    </div>\n\n    <div class=\"container text-center\">\n        &copy; {{currentYear}} Greene, Tweed\n    </div>\n    <div *ngIf=\"isShowAppVersion\" class=\"container text-center\">\n        App Version {{version}}\n    </div>\n</div>","// core imports\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\n\r\n// third party imports\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n// application imports\r\nimport { AlertModalComponent } from \"../../shared/components/alert-modal/alert-modal.component\";\r\nimport { HTTP_SPINNER } from '../../shared/helpers/constants';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    // private isRefreshing = false;\r\n    // private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    constructor(\r\n        private modalService: NgbModal,\r\n        private spinner: NgxSpinnerService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.handle401Error();\r\n                return new Observable<HttpEvent<any>>();\r\n            }\r\n            else {\r\n                return throwError(err);\r\n            }\r\n        }));\r\n    }\r\n\r\n    // http error 401 handler\r\n    private handle401Error() {\r\n        return new Promise((resolve, reject) => {\r\n            this.spinner.hide(HTTP_SPINNER);\r\n            let options: NgbModalOptions = {};\r\n            //     If true, the backdrop element will be created for a given modal.\r\n            // Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\r\n            options.backdrop = 'static';\r\n            // If true, the modal will be closed when Escape key is pressed\r\n            options.keyboard = false;\r\n            const modalRef = this.modalService.open(AlertModalComponent, options);\r\n            modalRef.componentInstance.title = 'Alert!!';\r\n            modalRef.componentInstance.message = 'Token expired, Please refresh the page.';\r\n            modalRef.componentInstance.name = 'World';\r\n        });\r\n    }\r\n\r\n    // private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    //     if (!this.isRefreshing) {\r\n    //         this.isRefreshing = true;\r\n    //         this.refreshTokenSubject.next(null);\r\n\r\n    //         return this.authService.authenticate().pipe(first()).pipe(\r\n    //             switchMap((authData: AuthModel) => {\r\n    //                 this.isRefreshing = false;\r\n    //                 this.refreshTokenSubject.next(authData.token);\r\n    //                 return next.handle(this.addToken(request, authData.token));\r\n    //             }));\r\n\r\n    //     } else {\r\n    //         return this.refreshTokenSubject.pipe(\r\n    //             filter(token => token != null),\r\n    //             take(1),\r\n    //             switchMap(jwt => {\r\n    //                 return next.handle(this.addToken(request, jwt));\r\n    //             }));\r\n    //     }\r\n    // }\r\n\r\n    // private addToken(request: HttpRequest<any>, token: string) {\r\n    //     return request.clone({\r\n    //         setHeaders: {\r\n    //             'Authorization': `Bearer ${token}`\r\n    //         }\r\n    //     });\r\n    // }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AppConfig } from '../../app.config.service';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { AuthModel } from '../../models/auth.model';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const authObject: AuthModel = this.authService.currentAuthValue;\r\n        const baseUrl = AppConfig.settings.env.api;\r\n        const isApiUrl = request.url.startsWith(baseUrl);\r\n        // exclude assets config files\r\n        // const isAssetsConfig = request.url.startsWith('assets/config/');\r\n\r\n        if (authObject && authObject.token && isApiUrl) {\r\n            // console.log('jwt interceptor');\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${authObject.token}`,\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","// core imports\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\n\r\n// third party imports\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError, finalize, tap } from 'rxjs/operators';\r\nimport { HTTP_SPINNER } from \"../../shared/helpers/constants\";\r\n\r\n@Injectable()\r\nexport class SpinnerInterceptor implements HttpInterceptor {\r\n    count = 0;\r\n\r\n    constructor(private spinner: NgxSpinnerService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        this.spinner.show(HTTP_SPINNER);\r\n\r\n        this.count++;\r\n\r\n        return next.handle(request).pipe(tap(\r\n            event => console.log(event),\r\n            // error => console.log(error)\r\n        ), finalize(() => {\r\n            this.count--;\r\n            if (this.count == 0) {\r\n                this.spinner.hide(HTTP_SPINNER);\r\n            };\r\n        }));\r\n    }\r\n}","export class AuthModel {\r\n    token: string;\r\n\r\n    constructor(options: {\r\n        token?: string\r\n    } = {}) {\r\n        this.token = options.token;\r\n    }\r\n}","import { Form } from '@angular/forms';\r\nimport { FormControlModel } from './form-control.model';\r\n\r\nexport class DropDownChangeModel {\r\n    formControl: FormControlModel;\r\n    value: any;\r\n\r\n    constructor(options: { formControl?: FormControlModel, value?: any } = {}) {\r\n        this.formControl = options.formControl;\r\n        this.value = options.value;\r\n    }\r\n}","export class FormControlModel {\r\n    form_control_id: Number;\r\n    order: Number;\r\n    key: string; // controlID or controlName - refers to form data\r\n    label: string;\r\n    showLabel: boolean;\r\n    value: any;\r\n    defaultvalue: any;\r\n    placeholder: string;\r\n    type: string;\r\n    sub_type: string; // default 'text'\r\n    show: boolean = true;\r\n    required: boolean = false;\r\n    isDisabled: boolean = false;\r\n    validation: any[];\r\n    css_classes: string[];\r\n    show_control_option: [];\r\n    decimal_point: number;\r\n    options: IOption[]; // used for the dropdown / radio options\r\n\r\n    constructor(options: {\r\n        form_control_id?: Number,\r\n        order?: Number,\r\n        key?: string,\r\n        label?: string,\r\n        showLabel?: boolean;\r\n        value?: any,\r\n        placeholder?: string,\r\n        type?: string,\r\n        sub_type?: string,\r\n        show?: boolean,\r\n        required?: boolean,\r\n        isDisabled?: boolean,\r\n        validation?: any[],\r\n        css_classes?: string[],\r\n        decimal_point?: number,\r\n        options?: IOption[]\r\n    }) {\r\n        this.form_control_id = options.form_control_id;\r\n        this.order = options.order || 0;\r\n        this.key = options.key;\r\n        this.label = options.label;\r\n        this.showLabel = options.showLabel;\r\n        this.value = options.value;\r\n        this.placeholder = options.placeholder;\r\n        this.type = options.type;\r\n        this.sub_type = options.sub_type;\r\n        this.show = options.show;\r\n        this.required = options.required;\r\n        this.isDisabled = options.isDisabled || false;\r\n        this.validation = options.validation;\r\n        this.css_classes = options.css_classes;\r\n        this.decimal_point = options.decimal_point || null;\r\n        this.options = options.options || [];\r\n    }\r\n}\r\n\r\ninterface IOption {\r\n    id: number,\r\n    label: string,\r\n    value: any,\r\n    show: boolean\r\n}","export class LogModel {\r\n    message: string;\r\n    level: number; // error = 0, warn = 1, info = 2, verbose = 3, debug = 4, silly = 5\r\n\r\n\r\n    constructor(options: {\r\n        message?: string,\r\n        level?: number\r\n    } = {}) {\r\n        this.message = options.message;\r\n        this.level = options.level;\r\n    }\r\n}","export class SwitchButtonModel {\r\n    id: number;\r\n    title: string;\r\n    display_title: string;\r\n    display_Short_title: string;\r\n    isActive: boolean;\r\n    actionType: number;\r\n\r\n    constructor(options: {\r\n        id?: number,\r\n        title?: string,\r\n        display_title?: string,\r\n        display_Short_title?: string,\r\n        isActive?: boolean,\r\n        actionType?: number\r\n    } = {}) {\r\n        this.id = options.id;\r\n        this.title = options.title;\r\n        this.display_title = options.display_title;\r\n        this.display_Short_title = options.display_Short_title;\r\n        this.isActive = options.isActive ? options.isActive : false;\r\n        this.actionType = options.actionType || 0;\r\n    }\r\n}","import { ErrorTypes } from '../shared/helpers/constants';\r\n\r\nexport class ViewErrorModel {\r\n    field: string;\r\n    title: string;\r\n    isDetailOpened: boolean;\r\n    type: number; // error = 1 and warning = 2\r\n    errors: string[];\r\n\r\n    constructor(options: {\r\n        field?: string,\r\n        title?: string,\r\n        isDetailOpened?: boolean;\r\n        type?: number;\r\n        errors?: string[];\r\n    } = {}) {\r\n        this.field = options.field;\r\n        this.title = options.title;\r\n        this.isDetailOpened = options.isDetailOpened ? options.isDetailOpened : false;\r\n        this.type = options.type || ErrorTypes.Error;\r\n        this.errors = options.errors || [];\r\n    }\r\n}","// core imports\nimport { Component, OnInit, Input } from '@angular/core';\n\n// third party import\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'ngb-alert-modal',\n  templateUrl: './alert-modal.component.html',\n  styleUrls: ['./alert-modal.component.css']\n})\nexport class AlertModalComponent implements OnInit {\n  @Input() title: string;\n  @Input() message: string;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{title}}</h4>\n    <button type=\"button\" class=\"close\" aria-describedby=\"close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","// core imports\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\n// application imports\nimport { CalculatorToolbarService } from \"./calculator-toolbar.service\";\nimport { CalculatorOption } from \"../../helpers/constants\";\nimport { FormControlModel } from \"../../../models/form-control.model\";\nimport { CalculatorModel } from '../../../models/calculator.model';\nimport { HelperService } from \"../../services/helper.service\";\n\n@Component({\n  selector: 'calculator-toolbar',\n  templateUrl: './calculator-toolbar.component.html',\n  styleUrls: ['./calculator-toolbar.component.css']\n})\nexport class CalculatorToolbarComponent implements OnInit {\n  @Input() control: FormControlModel; // control to display\n  @Input() form: FormGroup; // form group name\n  @Input() isSubmitted: Boolean = false;\n  @Input() isShowOptions: Boolean = false;\n  @Input() isShowPasteBtn: Boolean = false;\n  @Input() isShowCopyBtn: Boolean = false;\n  @Input() calculatorConfig: CalculatorModel;\n  @Output() optionChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() reset: EventEmitter<any> = new EventEmitter<any>();\n  @Output() print: EventEmitter<any> = new EventEmitter<any>();\n  @Output() paste: EventEmitter<any> = new EventEmitter<any>();\n  @Output() copy: EventEmitter<any> = new EventEmitter<any>();\n  options = CalculatorOption;\n\n  constructor(\n    private calculatorToolbarService: CalculatorToolbarService,\n    private helperService: HelperService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  onConvertToPdf() {\n    this.print.emit();\n  }\n\n  onResetField() {\n    // this.form.reset();\n    this.reset.emit();\n  }\n\n  onOptionClick(e: any, option: number) {\n    this.optionChange.emit(option);\n  }\n\n  // return form control\n  public getFormControl(): AbstractControl {\n    if (this.control && this.control.key) {\n      return this.form.get(this.control.key);\n    }\n  }\n\n  onPaste() {\n    const calculatedData: any = this.helperService.getCalculatedStoredData((+this.calculatorConfig.id));\n    if (calculatedData) {\n      this.calculatorToolbarService.paste.emit(calculatedData);\n    }\n  }\n\n  onCopy() {\n    this.copy.emit();\n  }\n}","<div class=\"row\" [formGroup]=\"form\">\n    <div *ngIf=\"isShowOptions\" class=\"sms-radio-wrapper col-md-3\">\n        <input type=\"radio\" value=\"{{options.Nominal}}\" (click)=\"onOptionClick($event,options.Nominal)\"\n            name=\"calc-options\" [formControl]=\"getFormControl()\" [name]=\"control.key\" [id]=\"control.key + 1\">\n        Nominal\n    </div>\n    <div *ngIf=\"isShowOptions\" class=\"sms-radio-wrapper col-md-3\">\n        <input type=\"radio\" value=\"{{options.WithTolerance}}\" (click)=\"onOptionClick($event,options.WithTolerance)\"\n            name=\"calc-options\" [formControl]=\"getFormControl()\" [name]=\"control.key\" [id]=\"control.key + 2\">\n        With Tolerance\n    </div>\n    <div *ngIf=\"isShowOptions\" class=\"sms-radio-wrapper col-md-3\">\n        <input type=\"radio\" value=\"{{options.WithMinMax}}\" (click)=\"onOptionClick($event,options.WithMinMax)\"\n            name=\"calc-options\" [formControl]=\"getFormControl()\" [name]=\"control.key\" [id]=\"control.key + 3\">\n        Min and Max\n    </div>\n    <div [ngClass]=\"{'col-md-3': isShowOptions, 'col-md-12': !isShowOptions}\" class=\"sms-radio-wrapper text-right\">\n        <!-- copy button -->\n        <input class=\"reset\" type=\"button\" (click)=\"onCopy()\" value=\"Copy\" id=\"copybtn\" title=\"Copy\"\n            *ngIf=\"isShowCopyBtn\">\n        <!-- paste button -->\n        <input class=\"reset\" type=\"button\" (click)=\"onPaste()\" value=\"Paste\" id=\"pastebtn\" title=\"Paste\"\n            *ngIf=\"isShowPasteBtn\">\n        <!-- reset button -->\n        <input class=\"reset\" type=\"button\" (click)=\"onResetField()\" value=\"Reset\" id=\"resetbtn\" title=\"Reset\">\n        <!-- print icon btn -->\n        <input class=\"printbtn\" type=\"button\" (click)=\"onConvertToPdf()\" value=\"\" id=\"printbtn\">\n    </div>\n</div>","import { EventEmitter, Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalculatorToolbarService {\n\n  // paste event for copy and paste event\n  paste: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n}\n","// core imports\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n// application imports\r\nimport { FormControlModel } from \"../../../../models/form-control.model\";\r\nimport { DropDownChangeModel } from '../../../../models/dropdown-change.model';\r\n\r\n@Component({\r\n  selector: 'custom-drop-down',\r\n  templateUrl: './drop-down.component.html',\r\n  styleUrls: ['./drop-down.component.css']\r\n})\r\nexport class DropDownComponent implements OnInit {\r\n  @Input() form: FormGroup; // form group name\r\n  @Input() options: FormControlModel[];\r\n  @Input() control: FormControlModel; // control to display\r\n  @Input() isFormSubmitted: Boolean = false;\r\n  @Input() isAddChooseOption: boolean = false;\r\n  @Input() chooseOptionLabel: string = \"Please select\";\r\n  // @Output() selectionChange: EventEmitter<FormControlModel> = new EventEmitter<FormControlModel>();\r\n  @Output() selectionChange: EventEmitter<DropDownChangeModel> = new EventEmitter<DropDownChangeModel>();\r\n  @Output() focusOut: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  // getter property to get the control validity\r\n  get isValid() {\r\n    return this.f[this.control.key].valid;\r\n  }\r\n\r\n  get controlValue() {\r\n    return this.f[this.control.key].value;\r\n  }\r\n\r\n  // return form control\r\n  public getFormControl(): AbstractControl {\r\n    return this.form.get(this.control.key);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSelectionChange(event: any) {\r\n    const dropdownObject: DropDownChangeModel = new DropDownChangeModel({ formControl: this.control, value: this.controlValue });\r\n    this.selectionChange.emit(dropdownObject);\r\n    // this.selectionChange.emit(this.controlValue);\r\n  }\r\n\r\n  // focus out event\r\n  onFocusOutEvent(event: any) {\r\n    this.focusOut.emit(event);\r\n  }\r\n}","<ng-container [formGroup]=\"form\">\r\n    <select class=\"ddl-options form-control {{control.css_classes?.join(' ')}}\" (change)=\"onSelectionChange($event)\"\r\n        [formGroup]=\"form\" [formControl]=\"getFormControl()\" [ngClass]=\"{'is-invalid': isFormSubmitted && !isValid}\"\r\n        (focusout)=\"onFocusOutEvent($event)\">\r\n        <option *ngIf=\"isAddChooseOption\" value=\"\" [ngValue]=\"\" disabled>{{chooseOptionLabel}}</option>\r\n        <ng-container *ngFor=\"let option of options\">\r\n            <option *ngIf=\"(option.show != null && option.show != undefined)  ? option.show : true\" [ngValue]=\"option.value\">{{option.label}}</option>\r\n        </ng-container>\r\n    </select>\r\n</ng-container>\r\n<!-- TODO: test the selected value -->\r\n<!-- <p>Selected value: {{f[control.key].value | json}}</p> -->","// core imports\r\nimport { Component, OnInit, Input, ViewEncapsulation, OnDestroy, Output } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\r\n\r\n// third party imports\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { fromEvent } from 'rxjs';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\r\n\r\n// application imports\r\nimport { ControlTextboxModel } from \"../../../../models/control-textbox\";\r\nimport { UnitButtonService } from \"../../unit-button/unit-button.service\";\r\nimport { SwitchButtonModel } from '../../../../models/switch-button.model';\r\nimport { Units, ControlSubType, Temperature, ActionType } from \"../../../helpers/constants\";\r\nimport { HelperService } from \"../../../../shared/services/helper.service\";\r\nimport { TemperatureButtonService } from \"../../temperature-button/temperature-button.service\";\r\nimport { ErrorModel } from '../../../../models/error.model';\r\nimport { CalculatorToolbarService } from \"../../calculator-toolbar/calculator-toolbar.service\";\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'custom-numeric-textbox',\r\n  templateUrl: './numeric-textbox.component.html',\r\n  styleUrls: ['./numeric-textbox.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NumericTextboxComponent implements OnInit, OnDestroy {\r\n  @Input() control: ControlTextboxModel; // control to display\r\n  @Input() form: FormGroup; // form group name\r\n  @Input() isFormSubmitted: Boolean = false;\r\n  @Input() isFormatInputOnBlur: boolean = true;\r\n  @Input() isNegetiveNumber: boolean = false;\r\n  @Input() clientErrors: ErrorModel[] = [];\r\n  @Input() clientWarnings: ErrorModel[] = [];\r\n  @Input() serverErrors: ErrorModel[] = [];\r\n  @Input() serverWarnings: ErrorModel[] = [];\r\n  @Input() maxLength: number = 6;\r\n  @Input() decimalPoint: number = 2;\r\n  @Input() isUpdateDecimalPointOnUnitChange = true;\r\n\r\n  // events\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() focusOut: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // subscription\r\n  unitButtonChange: Subscription;\r\n  temperatureButtonChange: Subscription;\r\n  formCtrlSub: Subscription;\r\n  // resizeSub: Subscription;\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  // getter property to get the control validity\r\n  get isValid() {\r\n    // check client errors\r\n    if ((this.clientErrors && this.clientErrors.length > 0)\r\n      || (this.clientWarnings && this.clientWarnings.length > 0)\r\n      || (this.serverErrors && this.serverErrors.length > 0)\r\n      || (this.serverWarnings && this.serverWarnings.length > 0)) {\r\n\r\n      // client error index\r\n      const errorIndex = this.clientErrors.findIndex(e => {\r\n        return this.control.key === e.field;\r\n      });\r\n\r\n      // client warning index\r\n      const warningIndex = this.clientWarnings.findIndex(e => {\r\n        return this.control.key === e.field;\r\n      });\r\n\r\n      // server error index\r\n      const serverErrorIndex = this.serverErrors.findIndex(e => {\r\n        return this.control.key === e.field;\r\n      });\r\n\r\n      // server warning index\r\n      const serverWarningIndex = this.serverWarnings.findIndex(e => {\r\n        return this.control.key === e.field;\r\n      });\r\n\r\n      // if ((errorIndex > -1) || (warningIndex > -1) || (serverErrorIndex > -1) || (serverWarningIndex > -1)) {\r\n      if ((errorIndex > -1) || (serverErrorIndex > -1)) {\r\n        return false;\r\n      }\r\n      else {\r\n        return !this.form.controls[this.control.key].invalid;// this.form.controls[this.control.key].valid;\r\n      }\r\n    }\r\n    else {\r\n      return !this.form.controls[this.control.key].invalid; //this.form.controls[this.control.key].valid;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private unitButtonService: UnitButtonService,\r\n    private helperService: HelperService,\r\n    private temperatureButtonService: TemperatureButtonService,\r\n    private calculatorToolbarService: CalculatorToolbarService\r\n  ) {\r\n    this.unitChange();\r\n    this.temperatureChange();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const fc = this.getFormControl();\r\n\r\n    // input value changes\r\n    // debounce keystroke events          \r\n    this.formCtrlSub = fc.valueChanges.pipe(debounceTime(1000)).subscribe((newValue) => {\r\n      //  this.firstName = newValue;\r\n      // console.log(`numeric value   ${newValue}`);\r\n      this.valueChange.emit({ key: this.control.key, formControl: fc });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.unitButtonChange) {\r\n      this.unitButtonChange.unsubscribe();\r\n    }\r\n    if (this.temperatureButtonChange) {\r\n      this.temperatureButtonChange.unsubscribe();\r\n    }\r\n    if (this.formCtrlSub) {\r\n      this.formCtrlSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // return form control\r\n  public getFormControl(): AbstractControl {\r\n    return this.form.get(this.control.key);\r\n  }\r\n\r\n  // unit change handler\r\n  unitChange() {\r\n    // unit change subscription\r\n    this.unitButtonChange = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\r\n      if (this.isUpdateDecimalPointOnUnitChange) {\r\n        if (x) {\r\n          if (x.id === Units.MILLI_METER) {\r\n            this.decimalPoint = 2;\r\n          }\r\n          else {\r\n            this.decimalPoint = 3;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // temperature change handler\r\n  temperatureChange() {\r\n    // temperature change subscription\r\n    this.temperatureButtonChange = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\r\n      if (x) {\r\n        const controlKey = this.control?.key;\r\n\r\n        // temperature conversion\r\n        if (x.actionType !== ActionType.Paste && controlKey && this.control && this.control.sub_type === ControlSubType.temperature) {\r\n          const formControl = this.getFormControl();\r\n          const formControlValue = formControl.value;\r\n          const unit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n          if (formControlValue) {\r\n            // convert the input form control value\r\n            const convertedValue = x.id === Temperature.FAHRENHEIT ? this.helperService.convertCelciusToFahrenheit(formControlValue) : this.helperService.convertFahrenheitToCelcius(formControlValue);\r\n            formControl.setValue(convertedValue);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // on input change event\r\n  onChangeEvent(event: any) {\r\n\r\n  }\r\n\r\n  // focus out event\r\n  onFocusOutEvent(event: any) {\r\n    this.focusOut.emit(event);\r\n  }\r\n}\r\n","<ng-container [formGroup]=\"form\">\n        <input numeric [maxLength]=\"maxLength\" [decimals]=\"decimalPoint\" [isFormatInputOnBlur]=\"isFormatInputOnBlur\"\n                [isNegetiveNumber]=\"isNegetiveNumber\" type=\"control.sub_type\" [formControl]=\"getFormControl()\"\n                [placeholder]=\"control.placeholder\" [id]=\"control.key\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': isFormSubmitted && !isValid}\" (focusout)=\"onFocusOutEvent($event)\">\n</ng-container>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\nimport { SwitchButtonModel } from \"../../../../models/switch-button.model\";\n\n@Component({\n  selector: 'custom-switch-button',\n  templateUrl: './switch-button.component.html',\n  styleUrls: ['./switch-button.component.css']\n})\nexport class SwitchButtonComponent implements OnInit {\n  @Input() switchOptions: SwitchButtonModel[];\n  @Output() switchClicked: EventEmitter<SwitchButtonModel> = new EventEmitter<SwitchButtonModel>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSwitchClicked(switchIndex: number) {\n    this.setActive(switchIndex);\n    this.switchClicked.emit(this.switchOptions[switchIndex]);\n  }\n\n  setActive(switchIndex: number) {\n    for (let index = 0; index < this.switchOptions.length; index++) {\n      this.switchOptions[index].isActive = false;\n    }\n    this.switchOptions[switchIndex].isActive = true;\n  }\n}\n","<div class=\"switch-btn-section pull-left\">\n    <div class=\"pull-left switch-btn-section__option\">\n        <span *ngFor=\"let switchOption of switchOptions; let switchOptionIndex = index;\"\n            (click)=\"onSwitchClicked(switchOptionIndex)\"\n            [ngClass]=\"{'active': switchOption.isActive}\">{{switchOption.display_title}}</span>\n    </div>\n</div>","import { Component, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\n// import { formControl } from \"../../../models/form-control\";\nimport { ControlTextboxModel } from \"../../../../models/control-textbox\";\n\n@Component({\n  selector: 'custom-textbox',\n  templateUrl: './textbox.component.html',\n  styleUrls: ['./textbox.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TextboxComponent implements OnInit {\n  @Input() decimalPoint: number = 2;\n  @Input() control: ControlTextboxModel; // control to display\n  @Input() form: FormGroup; // form group name\n  @Input() isFormSubmitted: Boolean = false;\n  // @Input() columnSize: number = 12;\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  // getter property to get the control validity\n  get isValid() {\n    return this.form.controls[this.control.key].valid;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  // return form control\n  public getFormControl(): AbstractControl {\n    return this.form.get(this.control.key);\n  }\n}\n","<ng-container [formGroup]=\"form\">\n        <input type=\"control.sub_type\" [formControl]=\"getFormControl()\"\n                [placeholder]=\"control.placeholder\" [id]=\"control.key\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': isFormSubmitted && !isValid}\">\n</ng-container>","// core imports\nimport { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\n\n// third party import\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { Units, UnitsDecimalPlaces } from '../../helpers/constants';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { UnitButtonService } from \"../unit-button/unit-button.service\";\nimport { DashSizeDetailsService } from \"./dash-size-details.service\";\nimport { ORingSizesModel } from '../../../models/oRingSizes.model';\nimport { ORingSizesDetailModel } from '../../../models/oRingSizesDetail.model';\n\n@Component({\n  selector: 'app-dash-size-details',\n  templateUrl: './dash-size-details.component.html',\n  styleUrls: ['./dash-size-details.component.css']\n})\nexport class DashSizeDetailsComponent implements OnInit, OnDestroy {\n  @Output() dashSizeRowClick: EventEmitter<ORingSizesDetailModel> = new EventEmitter<ORingSizesDetailModel>();\n  fixedTo = 3;\n  unitChangeSubscription: Subscription;\n  dashSizeDetailSubscription: Subscription;\n  dashSizes: ORingSizesModel;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private unitButtonService: UnitButtonService,\n    private dashSizeDetailsService: DashSizeDetailsService) {\n    this.unitChangeUpdateCalculator();\n    this.dashSizeChange();\n  }\n\n  ngOnInit(): void {\n    this.setFixedTo();\n  }\n\n  // set decimal places value\n  setFixedTo() {\n    if (this.unitButtonService.getCurrentUnitValue.id === Units.INCH) {\n      this.fixedTo = UnitsDecimalPlaces.INCH;\n    }\n    else if (this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER) {\n      this.fixedTo = UnitsDecimalPlaces.MILLI_METER;\n    }\n    else {\n      this.fixedTo = UnitsDecimalPlaces.INCH;\n    }\n  }\n\n  pad(n, length) {\n    n = n * -1;\n    var len = length - ('' + n).length;\n    var a = (len > 0 ? new Array(++len).join('0') : '') + n;\n    return '-' + a;\n  }\n\n  // unit change update output values handler\n  unitChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.setFixedTo();\n      }\n    });\n  }\n\n  // dash size update \n  dashSizeChange() {\n    this.dashSizeDetailSubscription = this.dashSizeDetailsService.dashSizeDetail$.subscribe((x: ORingSizesModel) => {\n      if (x) {\n        this.dashSizes = x;\n      }\n    });\n  }\n\n  rowClick(data: ORingSizesDetailModel) {\n    this.dashSizeRowClick.emit(data);\n  }\n\n  ngOnDestroy(): void {\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n    if (this.dashSizeDetailSubscription) {\n      this.dashSizeDetailSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"modal-header\">\n    <h3 class=\"modal-title\">O-ring and Gland Size</h3>\n</div>\n<div class=\"modal-body\">\n    <table class='table table-bordered table-fixed' aria-describedby=\"O-ring and Gland Size\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Dash Size</th>\n                <th scope=\"col\">O-ring Cross Section Size</th>\n                <th scope=\"col\">O-ring Diameter Size</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let dashSize of dashSizes.data\" (click)='rowClick(dashSize)'>\n                <td>{{pad(dashSize.dashSize, 3)}}</td>\n                <td>{{dashSize.oringCrossSectionSize.toFixed(fixedTo)}}</td>\n                <td>{{dashSize.oringDiameterSize.toFixed(fixedTo)}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// third party imports\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { ORingSizesModel } from '../../../models/oRingSizes.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { UnitButtonService } from \"../unit-button/unit-button.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashSizeDetailsService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  private readonly dashSizeDetailSubject: BehaviorSubject<ORingSizesModel> = new BehaviorSubject<ORingSizesModel>(null);\n  // Expose the observable part of the \n  readonly dashSizeDetail$ = this.dashSizeDetailSubject.asObservable();\n\n  private get dashSizeDetail(): ORingSizesModel {\n    return this.dashSizeDetailSubject.getValue();\n  }\n\n  private set dashSizeDetail(val: ORingSizesModel) {\n    this.dashSizeDetailSubject.next(val);\n  }\n\n  /* Public Properties   */\n\n  public get getCurrentORingConfigValue(): ORingSizesModel {\n    return this.dashSizeDetail;\n  }\n\n  sendORingSizes(val: ORingSizesModel) {\n    this.dashSizeDetail = val;\n  }\n\n  constructor(private _http: HttpClient, private unitButtonService: UnitButtonService) { }\n\n  getDashSizeDetails() {\n    const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n    if (currentSelectedUnit) {\n      let body = { unit: currentSelectedUnit.id };\n      return this._http.post(`${this.baseUrl}oringglandanalysistool/dashSizeDetails`, body);\n    }\n  }\n}\n","// core imorts\nimport { Component, Input, OnInit } from '@angular/core';\n\n// application imports\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from '../../services/helper.service';\nimport { CalculatorToolbarService } from \"../calculator-toolbar/calculator-toolbar.service\";\nimport { ActionType } from '../../helpers/constants';\nimport { UnitButtonService } from \"../../components/unit-button/unit-button.service\";\n\n@Component({\n  selector: 'measure-button',\n  templateUrl: './measure-button.component.html',\n  styleUrls: ['./measure-button.component.css']\n})\nexport class MeasureButtonComponent implements OnInit {\n  _defaultMeasure: SwitchButtonModel;\n  get defaultMeasure(): SwitchButtonModel {\n    return this._defaultMeasure;\n  }\n  @Input() set defaultMeasure(value: SwitchButtonModel) {\n    if (value) {\n      this._defaultMeasure = value;\n      this.setActiveSwitchButton(this._defaultMeasure);\n    }\n  }\n  measures: SwitchButtonModel[];\n  currentMeasure: SwitchButtonModel;\n  previousMeasure: SwitchButtonModel;\n\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) { }\n\n  ngOnInit(): void {\n    // get measures \n    this.measures = this.helperService.getMeasures();\n    // get current active unit\n    const activeMeasureIndex = this.measures.findIndex(u => u.isActive === true);\n    if (activeMeasureIndex > -1) {\n      this.currentMeasure = { ...this.measures[activeMeasureIndex] };\n      this.previousMeasure = { ...this.measures[activeMeasureIndex] };\n    }\n    else {\n      // default selected unit\n      this.currentMeasure = { ...this.measures[0] };\n      this.previousMeasure = { ...this.measures[0] };\n    }\n  }\n\n  // unit switch clicked handler\n  onMeasureSwitchClicked(event: SwitchButtonModel) {\n    // reset action\n    this.resetAction();\n    // set previous \n    this.previousMeasure = { ...this.currentMeasure };\n    // set changed value to current\n    this.currentMeasure = { ...event };\n    if (this.previousMeasure && this.previousMeasure.id !== event.id) {\n      // TODO: \n      this.unitButtonService.sendUnitValue(event);\n    }\n  }\n\n  // onPaste bt click\n  // onPaste() {\n  //   this.calculatorToolbarService.paste.subscribe((x: any) => {\n  //     // reset action\n  //     this.resetAction();\n  //     if (x) {\n  //       this.setActiveMeasureOnPaste(x);\n  //     }\n  //   });\n  // }\n\n  // set active unit switch based on calculated data stored in local storage\n  setActiveMeasureOnPaste(calculatedData: any) {\n    if (this.measures && this.measures.length > 0 && calculatedData && calculatedData.unit) {\n      const activeIndex = this.measures.findIndex((u) => {\n        return u.id === (+calculatedData.unit);\n      });\n      if (activeIndex > -1) {\n        for (let index = 0; index < this.measures.length; index++) {\n          this.measures[index].isActive = false;\n        }\n        this.measures[activeIndex].isActive = true;\n        // set action type\n        this.measures[activeIndex].actionType = ActionType.Paste;\n        // set previous \n        this.previousMeasure = { ...this.currentMeasure };\n        // set changed value to current\n        this.currentMeasure = { ...this.measures[activeIndex] };\n        // send unit change\n        this.unitButtonService.sendUnitValue(this.measures[activeIndex]);\n      }\n    }\n  }\n\n  setActiveSwitchButton(switchButton: SwitchButtonModel) {\n    // get measures \n    this.measures = this.helperService.getMeasures();\n    const activeIndex = this.measures.findIndex((u) => {\n      return u.id === (+switchButton.id);\n    });\n    if (activeIndex > -1) {\n      for (let index = 0; index < this.measures.length; index++) {\n        this.measures[index].isActive = false;\n      }\n      this.measures[activeIndex].isActive = true;\n      // set previous \n      this.previousMeasure = { ...this.currentMeasure };\n      // set changed value to current\n      this.currentMeasure = { ...this.measures[activeIndex] };\n    }\n  }\n\n  resetAction() {\n    // reset action\n    for (let index = 0; index < this.measures.length; index++) {\n      this.measures[index].actionType = 0;\n    }\n  }\n}\n","<custom-switch-button [switchOptions]=\"measures\" (switchClicked)=\"onMeasureSwitchClicked($event)\">\n</custom-switch-button>","// Core imports\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n// third party imports\nimport { Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\nimport { CalculatorGroup } from '../../helpers/constants';\nimport { TabModel } from \"../../../models/tab.model\";\n\n@Component({\n  selector: 'app-tab-nav',\n  templateUrl: './tab-nav.component.html',\n  styleUrls: ['./tab-nav.component.css']\n})\nexport class TabNavComponent implements OnInit, OnDestroy {\n  @Input() tabMenu: TabModel[] = [];\n  chemrazURL: string;\n  currrentCalculatorGroup = CalculatorGroup.ORingNGlandCalcs;\n  isShowChemrazBtn = false;\n\n  // subscription\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.chemrazURL = 'https://semi-chemraz.gtweed.com/';\n\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      if (this.activatedRoute.snapshot && this.activatedRoute.snapshot.data) {\n        this.currrentCalculatorGroup = this.activatedRoute.snapshot.data.calculatorGroup;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.activatedRouteSubscription) {\n      this.activatedRouteSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  redirectTo(redirectPath: string) {\n\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12 regulator-tabs\">\n        <div class=\"regulator-tabs__main\">\n            <!-- <ul>\n                <li routerLink='/evaluateoringglands/createRectangularORing' routerLinkActive='active'\n                    [routerLinkActiveOptions]=\"{exact:false}\">\n                    <a [routerLink]=\"['evaluateoringglands']\">O-ring/GLAND Analysis Tool</a>\n                </li>\n                <li routerLink='/evaluateglandsizecalculatorsglands/createRectangleGland' routerLinkActive='active'\n                    [routerLinkActiveOptions]=\"{exact:\n                    false}\">\n                    <a [routerLink]=\"['evaluateglandsizecalculatorsglands']\">Gland Size Calculator</a>\n                </li>\n            </ul> -->\n\n            <ul>\n                <li *ngFor=\"let tab of tabMenu\" routerLink=\"{{tab.childrenModuleRoute}}\" routerLinkActive='active'\n                    [routerLinkActiveOptions]=\"{exact:tab.pathExactmatch}\">\n                    <a [routerLink]=\"[tab.rootModuleRoute]\">{{tab.linkLabel}}</a>\n                </li>\n            </ul>\n        </div>\n        <a href=\"{{chemrazURL}}\" class=\"view-chemraz-btn\" *ngIf=\"isShowChemrazBtn\"> View Chemraz Microsite &raquo;</a>\n    </div>\n</div>","// core imports\nimport { Component, OnInit } from '@angular/core';\n\n// application imports\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from '../../services/helper.service';\nimport { TemperatureButtonService } from \"./temperature-button.service\";\nimport { CalculatorToolbarService } from \"../calculator-toolbar/calculator-toolbar.service\";\nimport { ActionType } from '../../helpers/constants';\n\n@Component({\n  selector: 'temperature-button',\n  templateUrl: './temperature-button.component.html',\n  styleUrls: ['./temperature-button.component.css']\n})\nexport class TemperatureButtonComponent implements OnInit {\n  temperature: SwitchButtonModel[];\n  currentTemperature: SwitchButtonModel;\n  previousTemperature: SwitchButtonModel;\n\n  // constructor\n  constructor(\n    private helperService: HelperService,\n    private temperatureButtonService: TemperatureButtonService,\n    private calculatorToolbarService: CalculatorToolbarService) {\n    this.onPaste();\n  }\n\n  // oninit of component\n  ngOnInit(): void {\n    // temperature object\n    this.temperature = this.helperService.getTemperature();\n    // get current active unit\n    const activeTemperatureIndex = this.temperature.findIndex(u => u.isActive === true);\n    if (activeTemperatureIndex > -1) {\n      this.currentTemperature = { ...this.temperature[activeTemperatureIndex] };\n      this.previousTemperature = { ...this.temperature[activeTemperatureIndex] };\n    }\n    else {\n      // default selected temperature\n      this.currentTemperature = { ...this.temperature[0] };\n      this.previousTemperature = { ...this.temperature[0] };\n    }\n  }\n\n  // temperture switch clicked handler\n  onTemperatureSwitchClicked(event: SwitchButtonModel) {\n    // reset action\n    this.resetAction();\n    // set previous \n    this.previousTemperature = { ...this.currentTemperature };\n    // set changed value to current\n    this.currentTemperature = { ...event };\n    if (this.previousTemperature && this.previousTemperature.id !== event.id) {\n      this.temperatureButtonService.sendTemperatureValue(event);\n    }\n  }\n\n  // onPaste bt click\n  onPaste() {\n    this.calculatorToolbarService.paste.subscribe((x: any) => {\n      // reset action\n      this.resetAction();\n      if (x) {\n        this.setActiveTemperatureOnPaste(x);\n      }\n    });\n  }\n\n  // set active unitTemp switch based on calculated data stored in local storage\n  setActiveTemperatureOnPaste(calculatedData: any) {\n    if (this.temperature && this.temperature.length > 0 && calculatedData && calculatedData.unitTemp) {\n      const activeIndex = this.temperature.findIndex((u) => {\n        return u.id === (+calculatedData.unitTemp);\n      });\n      if (activeIndex > -1) {\n        for (let index = 0; index < this.temperature.length; index++) {\n          this.temperature[index].isActive = false;\n        }\n        // set action type\n        this.temperature[activeIndex].actionType = ActionType.Paste;\n        // set active button\n        this.temperature[activeIndex].isActive = true;\n        // set previous \n        this.previousTemperature = { ...this.currentTemperature };\n        // set changed value to current\n        this.currentTemperature = { ...this.temperature[activeIndex] };\n        // send unitTemp change\n        this.temperatureButtonService.sendTemperatureValue(this.temperature[activeIndex]);\n      }\n    }\n  }\n\n\n  resetAction() {\n    // reset action\n    for (let index = 0; index < this.temperature.length; index++) {\n      this.temperature[index].actionType = 0;\n    }\n  }\n}\n","<custom-switch-button [switchOptions]=\"temperature\" (switchClicked)=\"onTemperatureSwitchClicked($event)\">\n</custom-switch-button>","// core imports\nimport { Injectable } from '@angular/core';\n\n// third party imports\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { Temperature, TemperatureCelsiusCode } from '../../helpers/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemperatureButtonService {\n\n  private readonly initialValue: SwitchButtonModel = { id: Temperature.CELCIUS, title: Temperature[Temperature.CELCIUS], display_title: TemperatureCelsiusCode.HTML_CODE, display_Short_title: TemperatureCelsiusCode.HTML_CODE, isActive: true, actionType: 0 };\n  private readonly temperatureSubject: BehaviorSubject<SwitchButtonModel> = new BehaviorSubject<SwitchButtonModel>(this.initialValue);\n  readonly temperature$ = this.temperatureSubject.asObservable();\n\n  constructor() { }\n\n  /* private Properties */\n  // service state management property \"unit\"\n  // the getter will return the last value emitted unitSubject subject\n  private get temperature(): SwitchButtonModel {\n    return this.temperatureSubject.getValue();\n  }\n\n  // assigning a value to unit will push it onto the observable \n  // and down to all of its subsribers (ex: this.unit = {})\n  private set temperature(val: SwitchButtonModel) {\n    this.temperatureSubject.next(val);\n  }\n\n  // get config value directly using behaviour subject\n  public get getCurrentTemperatureValue(): SwitchButtonModel {\n    return this.temperature;\n  }\n\n  // send oring config\n  // assigning a value to unit will push it onto the observable \n  // and down to all of its subsribers (ex: this.unit = {})\n  sendTemperatureValue(val: SwitchButtonModel) {\n    // this.oRingConfigSubject.next(val);\n    this.temperature = { ...val, isActive: true };\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  showSucces(textOrTpl: string | TemplateRef<any>, options: any = { classname: 'bg-success text-light', delay: 10000 }) {\n    let paramOptions: any;\n    paramOptions = { ...paramOptions, ...options };\n    this.toasts.push({ textOrTpl, ...paramOptions });\n  }\n\n  showError(textOrTpl: string | TemplateRef<any>, options: any = { classname: 'bg-danger text-light', delay: 15000 }) {\n    // this.toasts.push({ textOrTpl, ...options });\n    let paramOptions: any;\n    paramOptions = { ...paramOptions, ...options };\n    this.toasts.push({ textOrTpl, ...paramOptions });\n  }\n\n  remove(toast: any) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}","import { Component, TemplateRef, OnInit } from '@angular/core';\n\nimport { ToastService } from './toast-service';\n\n@Component({\n  selector: 'app-toasts-container',\n  templateUrl: './toasts-container.component.html',\n  styleUrls: ['./toasts-container.component.css'],\n  host: { '[class.ngb-toasts]': 'true' }\n})\nexport class ToastsContainerComponent implements OnInit {\n\n  constructor(public toastService: ToastService) { }\n\n  ngOnInit(): void {\n  }\n\n  isTemplate(toast: any) { return toast.textOrTpl instanceof TemplateRef; }\n}\n","<ngb-toast *ngFor=\"let toast of toastService.toasts\" [class]=\"toast.classname\" [autohide]=\"true\"\n    [delay]=\"toast.delay || 5000\" (hide)=\"toastService.remove(toast)\">\n    <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\n        <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\n    </ng-template>\n\n    <ng-template #text>{{ toast.textOrTpl }}</ng-template>\n</ngb-toast>","// core imorts\nimport { Component, OnInit } from '@angular/core';\n\n// application imports\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from '../../services/helper.service';\nimport { UnitButtonService } from \"./unit-button.service\";\nimport { CalculatorToolbarService } from \"../calculator-toolbar/calculator-toolbar.service\";\nimport { ActionType } from '../../helpers/constants';\n\n@Component({\n  selector: 'unit-button',\n  templateUrl: './unit-button.component.html',\n  styleUrls: ['./unit-button.component.css']\n})\nexport class UnitButtonComponent implements OnInit {\n  units: SwitchButtonModel[];\n  currentUnit: SwitchButtonModel;\n  previousUnit: SwitchButtonModel;\n\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private calculatorToolbarService: CalculatorToolbarService) {\n    this.onPaste();\n  }\n\n  ngOnInit(): void {\n    // get units \n    this.units = this.helperService.getUnits();\n    // get current active unit\n    const activeUnitIndex = this.units.findIndex(u => u.isActive === true);\n    if (activeUnitIndex > -1) {\n      this.currentUnit = { ...this.units[activeUnitIndex] };\n      this.previousUnit = { ...this.units[activeUnitIndex] };\n    }\n    else {\n      // default selected unit\n      this.currentUnit = { ...this.units[0] };\n      this.previousUnit = { ...this.units[0] };\n    }\n  }\n\n  // unit switch clicked handler\n  onUnitSwitchClicked(event: SwitchButtonModel) {\n    // reset action\n    this.resetAction();\n    // set previous \n    this.previousUnit = { ...this.currentUnit };\n    // set changed value to current\n    this.currentUnit = { ...event };\n    if (this.previousUnit && this.previousUnit.id !== event.id) {\n      this.unitButtonService.sendUnitValue(event);\n    }\n  }\n\n  // onPaste bt click\n  onPaste() {\n    this.calculatorToolbarService.paste.subscribe((x: any) => {\n      // reset action\n      this.resetAction();\n      if (x) {\n        this.setActiveUnitOnPaste(x);\n      }\n    });\n  }\n\n  // set active unit switch based on calculated data stored in local storage\n  setActiveUnitOnPaste(calculatedData: any) {\n    if (this.units && this.units.length > 0 && calculatedData && calculatedData.unit) {\n      const activeIndex = this.units.findIndex((u) => {\n        return u.id === (+calculatedData.unit);\n      });\n      if (activeIndex > -1) {\n        for (let index = 0; index < this.units.length; index++) {\n          this.units[index].isActive = false;\n        }\n        this.units[activeIndex].isActive = true;\n        // set action type\n        this.units[activeIndex].actionType = ActionType.Paste;\n        // set previous \n        this.previousUnit = { ...this.currentUnit };\n        // set changed value to current\n        this.currentUnit = { ...this.units[activeIndex] };\n        // send unit change\n        this.unitButtonService.sendUnitValue(this.units[activeIndex]);\n      }\n    }\n  }\n\n  resetAction() {\n    // reset action\n    for (let index = 0; index < this.units.length; index++) {\n      this.units[index].actionType = 0;\n    }\n  }\n}\n","<custom-switch-button [switchOptions]=\"units\" (switchClicked)=\"onUnitSwitchClicked($event)\">\n</custom-switch-button>","// core imports\nimport { Injectable } from '@angular/core';\n\n// third party imports\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { Units, UnitsAbbreviation } from '../../helpers/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitButtonService {\n  private readonly initialValue: SwitchButtonModel = { id: Units.INCH, title: Units[Units[0]], display_title: \"Inch\", display_Short_title: UnitsAbbreviation.INCH, isActive: true, actionType: 0 };\n  private readonly unitSubject: BehaviorSubject<SwitchButtonModel> = new BehaviorSubject<SwitchButtonModel>(this.initialValue);\n  readonly unit$ = this.unitSubject.asObservable();\n\n  constructor() { }\n\n  /* private Properties */\n  // service state management property \"unit\"\n  // the getter will return the last value emitted unitSubject subject\n  private get unit(): SwitchButtonModel {\n    return this.unitSubject.getValue();\n  }\n\n  // assigning a value to unit will push it onto the observable \n  // and down to all of its subsribers (ex: this.unit = {})\n  private set unit(val: SwitchButtonModel) {\n    this.unitSubject.next(val);\n  }\n\n  // get config value directly using behaviour subject\n  public get getCurrentUnitValue(): SwitchButtonModel {\n    return this.unit;\n  }\n\n  // send oring config\n  // assigning a value to unit will push it onto the observable \n  // and down to all of its subsribers (ex: this.unit = {})\n  sendUnitValue(val: SwitchButtonModel) {\n    this.unit = { ...val, isActive: true };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'user-rules',\n  templateUrl: './user-rules.component.html',\n  styleUrls: ['./user-rules.component.css']\n})\nexport class UserRulesComponent implements OnInit {\n  collapsed: boolean = false;\n  collapsedOring: boolean = false;\n  collapsedSizing = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-rules m-b-5\" id=\"siderule\">\n    <div class=\"user-rules__header\" (click)=\"collapsed=!collapsed\"\n        [ngClass]=\"{'selected': collapsed}\">Parameters</div>\n    <div class=\"user-rules__rules in\" *ngIf=\"collapsed\">\n        <ul>\n            <li>Nominal Compression recommended for 20-25% at operating temperature.\n                <p>Depending on the operating temperature, ambient compression can be lower(but not below 15%), but with\n                    risk of sealing at ambient. </p>\n                <p>Higher compression than 25% can result in reduced lifetime of product.</p>\n            </li>\n            <li>Nominal Gland Fill recommended for 85-90% at operating temperature.\n                <p>Higher gland fill can result in reduced lifetime of product. As gland fill reaches 100% premature\n                    failure of the o-ring increases </p>\n                <p>Lower gland fill is acceptable, however gland fill improves the sealing force of the o-ring</p>\n            </li>\n            <li>Nominal Stretch recommended is 1- 3% at ambient\n                <p>Higher stretch can result in reduced lifetime of product</p>\n                <p>Less than 1% stretch is acceptable for o-rings under 1\" in diameter.</p>\n                <p>Stretch is required to account for o-ring tolerances and prevent bunching up of the o-ring in the\n                    groove</p>\n                <p>Stretch is not calculated at operating temperature. It is encapsulated by the gland, which makes\n                    gland fill and compression calculations important for improved lifetime.</p>\n            </li>\n            <li>Nominal Radial Compression recommended is 0% </li>\n        </ul>\n    </div>\n</div>\n<div class=\"user-rules m-b-5\" id=\"siderules\">\n    <div class=\"user-rules__header\" (click)=\"collapsedOring=!collapsedOring\"\n        [ngClass]=\"{'selected': collapsedOring}\">Gland Type</div>\n    <div class=\"user-rules__rules in\" *ngIf=\"collapsedOring\">\n        <ul>\n            <li>Rectangular Glands\n                <p>It is recommended for the gland width to be larger than the cross section of the o-ring</p>\n                <p>One Dimension to the ID or OD of the gland only, and then dimension the gland width. Otherwise total\n                    tolerance stackup is too large and causes problems</p>\n                <ul>\n                    <li>This enables the ID or OD tolerance to only affect stretch or radial compression</li>\n                    <li>This enables the gland width tolerance to only affect gland fill</li>\n                </ul>\n            </li>\n            <li>Dovetail Glands\n                <p>Use the centerline of the gland for machining and stretch calculations</p>\n                <p>Always call out a top radius. No top radius callout has resulted in cut o-rings during o-ring\n                    installation</p>\n                <p>Dovetail Gland Angle recommended 55-66 degrees</p>\n                <ul>\n                    <li>Use 66 degrees for ambient up to approximately 140C</li>\n                    <li>Use 55 degrees for temperatures above approximately 140C</li>\n                    <li>45 degree angles may have to be used for very small cross section</li>\n                </ul>\n            </li>\n            <li>Half Dovetail Glands\n                <p>Greene Tweed does not typically recommend\n                    the use of these glands due to very high gland\n                    fill, which leads to premature seal failures</p>\n                <ul>\n                    <li>For large chamber seals, the Greene Tweed\n                        half dovetail gland design allows for thermal\n                        expansion and could be used for easier\n                        installation compared to standard rectangular\n                        glands</li>\n                    <li>Stretch is calculated similar to full dovetail\n                        glands via centerline</li>\n\n                    <li>High Gland Fill is usually the result as there is not enough room for a full dovetail gland</li>\n                    <li>Only stretch is used to hold the seal in place during installation. If the tool is taken down\n                        and the o-ring wiped clean, it may not be reusable as the seal has likely grown slightly and\n                        therefore stretch may not exists to hold the seal during re installation</li>\n                </ul>\n            </li>\n\n            <li>Minimum radii is .005\" due to typical machining standards though sharp edges can occur on dovetail\n                grooves if not called out</li>\n        </ul>\n    </div>\n</div>\n<div class=\"user-rules m-b-5\" id=\"siderules\">\n    <div class=\"user-rules__header\" (click)=\"collapsedSizing=!collapsedSizing\"\n        [ngClass]=\"{'selected': collapsedSizing}\">O-ring Sizing</div>\n    <div class=\"user-rules__rules in\" *ngIf=\"collapsedSizing\">\n        <ul>\n            <li>All tolerances are based upon AS568A sizes\n                <p>No tolerance changes allowed</p>\n                <p>Custom o-ring sizes can result in higher tolerances</p>\n            </li>\n            <li>O-ring Cross Sections\n                <p>.070 and .103 (-000 and -100 sizes) cross sections not recommended for high temperatures</p>\n                <p>.139 (-200 size) cross sections will have sealing limitations as ambient as temperatures increase\n                    past 200C. Greene Tweed does offer custom seal designs that can seal both at 300C and at ambient\n                    temperatures.</p>\n                <p>.210 and .275 (-300 and -400 sizes) cross sections recommended for highest temperatures when the user\n                    wants to use standard o-ring sizes</p>\n            </li>\n            <li>Each material has a maximum temperature limit.</li>\n        </ul>\n    </div>\n</div>","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: \"[numeric]\"\r\n})\r\nexport class NumericDirective {\r\n  @Input('decimals') decimals: number = 0;\r\n  @Input('maxLength') maxLength: number = 6;\r\n  @Input('isFormatInputOnBlur') isFormatInputOnBlur: boolean = true;\r\n  @Input('isNegetiveNumber') isNegetiveNumber: boolean = true;\r\n\r\n  private checkAllowNegative(value: string) {\r\n    if (this.decimals <= 0) {\r\n      return String(value).match(new RegExp(/^-?\\d+$/));\r\n    } else {\r\n      var regExpString = \"^-?\\\\s*((\\\\d{0,\" +\r\n        this.maxLength +\r\n        \"}?(\\\\.\\\\d{0,\" + this.decimals +\r\n        \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + this.decimals +\r\n        \"}))))\\\\s*$\";\r\n      return String(value).match(new RegExp(regExpString));\r\n    }\r\n  }\r\n\r\n  private check(value: string) {\r\n    if (this.decimals <= 0) {\r\n      return String(value).match(new RegExp(/^\\d+$/));\r\n    } else {\r\n      var regExpString = \"^\\\\s*((\\\\d{0,\" +\r\n        this.maxLength +\r\n        \"}?(\\\\.\\\\d{0,\" +\r\n        this.decimals +\r\n        \"})?)|((\\\\d*(\\\\.\\\\d{1,\" +\r\n        this.decimals + \"}))))\\\\s*$\";\r\n      return String(value).match(new RegExp(regExpString));\r\n    }\r\n  }\r\n\r\n  private run(oldValue, event) {\r\n    setTimeout(() => {\r\n      let currentValue: string = this.el.nativeElement.value;\r\n      let allowNegative = this.isNegetiveNumber;\r\n\r\n      if (allowNegative) {\r\n        if (\r\n          ![\"\", \"-\"].includes(currentValue) &&\r\n          !this.checkAllowNegative(currentValue)\r\n        ) {\r\n          // event.preventDefault();\r\n          // event.stopPropagation();\r\n          //  event.stopImmediatePropagation();\r\n           this.el.nativeElement.value = oldValue;\r\n        }\r\n      } else {\r\n        if (currentValue !== \"\" && !this.check(currentValue)) {\r\n          // // event.preventDefault();\r\n          this.el.nativeElement.value = oldValue;\r\n          // event.stopPropagation();\r\n          //  event.stopImmediatePropagation();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(private el: ElementRef, private control: NgControl) { }\r\n\r\n  @HostListener(\"keydown\", [\"$event\"])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    this.run(this.el.nativeElement.value, event);\r\n  }\r\n\r\n  @HostListener(\"paste\", [\"$event\"])\r\n  onPaste(event: ClipboardEvent) {\r\n    this.run(this.el.nativeElement.value, event);\r\n  }\r\n\r\n  @HostListener('blur', ['$event'])\r\n  onBlur(event: FocusEvent) {\r\n    if (!this.isFormatInputOnBlur) {\r\n      return;\r\n    }\r\n    const current: string = this.el.nativeElement.value;\r\n    if (current) {\r\n      // const transformedValue = this.decimalPipe.transform(+(current), `0.${this.decimals}-${this.decimals}`);\r\n      const transformedValue = this.formatNumber(current);\r\n      this.el.nativeElement.value = transformedValue;\r\n      if (this.control.control) {\r\n        this.control.control.setValue(transformedValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  // format number to decimal places\r\n  private formatNumber(val: string) {\r\n    if (!val) {\r\n      return '';\r\n    }\r\n\r\n    var clean = val.replace(/[^0-9\\.]/g, '');\r\n    var negativeCheck = clean.split('-');\r\n    var decimalCheck = clean.split('.');\r\n    if (negativeCheck[1]) {\r\n      negativeCheck[1] = negativeCheck[1].slice(0, negativeCheck[1].length);\r\n      clean = negativeCheck[0] + '-' + negativeCheck[1];\r\n      if (negativeCheck[0].length > 0) {\r\n        clean = negativeCheck[0];\r\n      }\r\n    }\r\n    if (decimalCheck[1]) {\r\n      decimalCheck[1] = decimalCheck[1].slice(0, this.decimals);\r\n\r\n      clean = decimalCheck[0] + '.' + decimalCheck[1];\r\n    }\r\n    else {\r\n      // clean = (+decimalCheck[0]).toFixed(this.decimals);\r\n      clean = decimalCheck[0];\r\n    }\r\n\r\n    if (clean) {\r\n      clean = (+clean).toFixed(this.decimals).toString();\r\n    }\r\n\r\n    return clean;\r\n  }\r\n}","export const copyPasteObjKey = \"lastCalculatedData\";\r\n\r\nexport const HTTP_SPINNER = \"HTTP_SPINNER\";\r\n\r\n\r\nexport enum supportEmail {\r\n    EmailPressIn = 'athrash@gtweed.com',\r\n    EmailWrAr = 'tshirayama@gtweed.com'\r\n}\r\n\r\nexport enum calculatedDataKeys {\r\n    RECTANGULAR_GLAND_INTERNAL = \"RECTANGULAR_GLAND_INTERNAL\",\r\n    RECTANGULAR_GLAND_EXTERNAL = \"RECTANGULAR_GLAND_EXTERNAL\",\r\n    DOVETAIL_GLAND = \"DOVETAIL_GLAND\",\r\n    HALF_DOVETAIL_GLAND = \"HALF_DOVETAIL_GLAND\"\r\n}\r\n\r\nexport enum calculationType {\r\n    ORING_SIZING = \"oringSizing\",\r\n    GLAND_SIZING = \"glandSizing\"\r\n}\r\n\r\nexport enum rectangleType {\r\n    RECTANGLE_OD = \"rectangleOD\"\r\n}\r\n\r\nexport enum glandType {\r\n    RECTANGLE = \"rectangle\",\r\n    DOVETAIL = \"dovetail\",\r\n    HALF_DOVETAIL = \"halfDovetail\"\r\n}\r\n\r\nexport enum Validators {\r\n    NUMBER_VALIDATOR = \"NUMBER_VALIDATOR\"\r\n}\r\n\r\nexport enum ORingTool_InternalVacuumOnly_Validators {\r\n    GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION = \"GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION\",\r\n    BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    BOTTOM_RADII_NOMINAL_VALIDATION = \"BOTTOM_RADII_NOMINAL_VALIDATION\",\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION = \"O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION\",\r\n    O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION = \"O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION\",\r\n    O_RING_ID_VALIDATION = \"O_RING_ID_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    LESS_THAN_ZERO_VALIDATION = \"LESS_THAN_ZERO_VALIDATION\",\r\n    TOLERANCE_VALIDATION = \"TOLERANCE_VALIDATION\",\r\n    MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum ORingTool_DovetailGlandVacuumOnly_Validators {\r\n    GLAND_ANGLE_NOMINAL_VALIDATION = \"GLAND_ANGLE_NOMINAL_VALIDATION\",\r\n    GLAND_ANGLE_MIN_VALIDATION = \"GLAND_ANGLE_MIN_VALIDATION\",\r\n    GLAND_ANGLE_MAX_VALIDATION = \"GLAND_ANGLE_MAX_VALIDATION\",\r\n    GLAND_WIDTH_NOMINAL_VALIDATION = \"GLAND_WIDTH_NOMINAL_VALIDATION\",\r\n    GLAND_WIDTH_MIN_VALIDATION = \"GLAND_WIDTH_MIN_VALIDATION\",\r\n    GLAND_WIDTH_MAX_VALIDATION = \"GLAND_WIDTH_MAX_VALIDATION\",\r\n    BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION = \"O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION\",\r\n    O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION = \"O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    LESS_THAN_ZERO_VALIDATION = \"LESS_THAN_ZERO_VALIDATION\",\r\n    TOLERANCE_VALIDATION = \"TOLERANCE_VALIDATION\",\r\n    MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum ORingTool_Half_DovetailGlandVacuumOnly_Validators {\r\n    GLAND_ANGLE_NOMINAL_VALIDATION = \"GLAND_ANGLE_NOMINAL_VALIDATION\",\r\n    GLAND_ANGLE_MIN_VALIDATION = \"GLAND_ANGLE_MIN_VALIDATION\",\r\n    GLAND_ANGLE_MAX_VALIDATION = \"GLAND_ANGLE_MAX_VALIDATION\",\r\n    GLAND_WIDTH_NOMINAL_VALIDATION = \"GLAND_WIDTH_NOMINAL_VALIDATION\",\r\n    GLAND_WIDTH_MIN_VALIDATION = \"GLAND_WIDTH_MIN_VALIDATION\",\r\n    GLAND_WIDTH_MAX_VALIDATION = \"GLAND_WIDTH_MAX_VALIDATION\",\r\n    BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION = \"BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION = \"TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION\",\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION = \"O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION\",\r\n    O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION = \"O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    LESS_THAN_ZERO_VALIDATION = \"LESS_THAN_ZERO_VALIDATION\",\r\n    TOLERANCE_VALIDATION = \"TOLERANCE_VALIDATION\",\r\n    MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum ORingTool_RactangleExternalVacuumOnly_Validators {\r\n    GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION = \"GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION\",\r\n    BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT = \"BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT\",\r\n    BOTTOM_RADII_NOMINAL_VALIDATION = \"BOTTOM_RADII_NOMINAL_VALIDATION\",\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION = \"O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION\",\r\n    O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION = \"O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION\",\r\n    O_RING_ID_VALIDATION = \"O_RING_ID_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    LESS_THAN_ZERO_VALIDATION = \"LESS_THAN_ZERO_VALIDATION\",\r\n    TOLERANCE_VALIDATION = \"TOLERANCE_VALIDATION\",\r\n    MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION = \"MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum GlandSizeCalc_InternalVacuumOnly_Validators {\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION = \"O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum GlandSizeCalc_DovetailGlandVacuumOnly_Validators {\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION = \"O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\nexport enum GlandSizeCalc_HalfDovetailGlandVacuumOnly_Validators {\r\n    OPERATING_TEMPERATURE_VALIDATION = \"OPERATING_TEMPERATURE_VALIDATION\",\r\n    O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION = \"O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION\",\r\n    O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION = \"O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION\",\r\n    ORING_ID_AS568A_STANDARD_WARNING = \"ORING_ID_AS568A_STANDARD_WARNING\"\r\n}\r\n\r\n\r\n// WrAr\r\nexport enum WrArCalc_PressIn_Validators {\r\n    CLEARANCE_VALIDATION = \"CLEARANCE_VALIDATION\",\r\n    SERVICE_STORAGE_TEMPERATURE_MIN = \"SERVICE_STORAGE_TEMPERATURE_MIN\",\r\n    SERVICE_STORAGE_TEMPERATURE_MAX = \"SERVICE_STORAGE_TEMPERATURE_MAX\",\r\n    STATIONARY_ELEMENT_ID_MAX = \"STATIONARY_ELEMENT_ID_MAX\",\r\n    ROTATING_ELEMENT_OD_MAX = \"ROTATING_ELEMENT_OD_MAX\",\r\n    SERVICE_STORAGE_TEMPERATURE_ALLOWED_MIN = \"SERVICE_STORAGE_TEMPERATURE_ALLOWED_MIN\",\r\n    SERVICE_STORAGE_TEMPERATURE_ALLOWED_MAX = \"SERVICE_STORAGE_TEMPERATURE_ALLOWED_MAX\",\r\n    STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MIN = \"STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MIN\",\r\n    STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MAX = \"STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MAX\"\r\n}\r\n\r\nexport enum WrArCalc_FloatingIn_Validators {\r\n    CLEARANCE_VALIDATION = \"CLEARANCE_VALIDATION\",\r\n    SERVICE_STORAGE_TEMPERATURE_MIN = \"SERVICE_STORAGE_TEMPERATURE_MIN\",\r\n    SERVICE_STORAGE_TEMPERATURE_MAX = \"SERVICE_STORAGE_TEMPERATURE_MAX\",\r\n    STATIONARY_ELEMENT_ID_MAX = \"STATIONARY_ELEMENT_ID_MAX\",\r\n    ROTATING_ELEMENT_OD_MAX = \"ROTATING_ELEMENT_OD_MAX\",\r\n    SERVICE_STORAGE_TEMPERATURE_ALLOWED_MIN = \"SERVICE_STORAGE_TEMPERATURE_ALLOWED_MIN\",\r\n    SERVICE_STORAGE_TEMPERATURE_ALLOWED_MAX = \"SERVICE_STORAGE_TEMPERATURE_ALLOWED_MAX\",\r\n    STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MIN = \"STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MIN\",\r\n    STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MAX = \"STATIONARY_ELEMENT_ID_MIN_LESSER_THAT_ROTATING_MAX\"\r\n}\r\n\r\nexport enum Units {\r\n    INCH = 1,\r\n    MILLI_METER = 2\r\n}\r\n\r\nexport enum UnitsAbbreviation {\r\n    INCH = \"in\",\r\n    MILLI_METER = \"mm\"\r\n}\r\n\r\nexport enum Measures {\r\n    Imperial = 1,\r\n    Metric = 2\r\n}\r\n\r\nexport enum UnitsDecimalPlaces {\r\n    INCH = 3,\r\n    MILLI_METER = 2\r\n}\r\n\r\nexport enum Temperature {\r\n    FAHRENHEIT = 1,\r\n    CELCIUS = 2\r\n}\r\n\r\nexport enum CalculatorOption {\r\n    Nominal = 1,\r\n    WithTolerance = 2,\r\n    WithMinMax = 3\r\n}\r\n\r\nexport enum LoggingLevels {\r\n    error = 0,\r\n    warn = 1,\r\n    info = 2,\r\n    verbose = 3,\r\n    debug = 4,\r\n    silly = 5,\r\n}\r\n\r\nexport enum CalculatorTypes {\r\n    ORingInternalVacuumOnly = 1,\r\n    ORingDovetailGlandVacuumOnly = 2,\r\n    ORingHalfDovetailGlandInternalVacuumOnly = 3,\r\n    ORingRectangularGlandExternalVacuumOnly = 4,\r\n    WrArPressIn = 5,\r\n    WrArFloating = 6\r\n}\r\n\r\nexport enum CalculatorGroup {\r\n    ORingNGlandCalcs = 1,\r\n    WrArCalcs = 2\r\n}\r\n\r\n\r\nexport enum ControlType {\r\n    label = \"label\",\r\n    textbox = \"textbox\",\r\n    numerictextbox = \"numerictextbox\",\r\n    dropdown = \"dropdown\",\r\n    button = \"button\",\r\n    html = \"html\"\r\n}\r\n\r\n// enum to seperate specific purpose controls\r\nexport enum ControlSubType {\r\n    unit = \"unit\", // unit form control\r\n    unitLabel = \"unitlabel\", // unit label\r\n    outputHeaderUnitLabel = \"outputHeaderUnitLabel\", // unit label\r\n    pressureLabel = \"pressureLabel\", // unit label\r\n    temperature = \"temperature\", // temperature form control\r\n    temperatureLabel = \"temperaturelabel\", // temperature label\r\n    degree = \"degree\", // degree form control\r\n    degreeLabel = \"degreelabel\", // degree label\r\n    material_choice_dropdown = \"materialchoicedropdown\",\r\n    button = \"button\",\r\n    calculated_label = \"calculatedlabel\",\r\n    calculatedDegreeLabel = \"calculatedDegreeLabel\", // calculated degree label\r\n    arWrPumptypeDropdown = \"arWrPumptypeDropdown\",\r\n    arWrComponenttypeDropdown = \"arWrComponenttypeDropdown\",\r\n    arWrCompositetypeDropdown = \"arWrCompositetypeDropdown\",\r\n    arWrInterFerenceTargetPressInDropdown = \"arWrInterFerenceTargetPressInDropdown\",\r\n    arWrClearanceTargetDropdown = \"arWrClearanceTargetDropdown\",\r\n    arWrRotatingMaterial = \"arWrRotatingMaterial\",\r\n    arWrStationaryMaterial = \"arWrStationaryMaterial\",\r\n    cteUnitLabel = \"cteUnitLabel\", // unit label    \r\n}\r\n\r\nexport enum TextboxType {\r\n    text = \"text\",\r\n    password = \"password\",\r\n    number = \"number\"\r\n}\r\n\r\nexport enum TemperatureCelsiusCode {\r\n    UNICODE = \"U+02103\",\r\n    HEX_CODE = \"&#x2103\",\r\n    HTML_CODE = \"&#8451\",\r\n    CSS_CODE = \"\\2103\",\r\n    HEXA_DECIMAL_CODE = \"\\xB0C\"\r\n}\r\n\r\nexport enum TemperatureFahrenheitCode {\r\n    UNICODE = \"U+02109\",\r\n    HEX_CODE = \"&#x2109\",\r\n    HTML_CODE = \"&#8457\",\r\n    CSS_CODE = \"\\2109\",\r\n    HEXA_DECIMAL_CODE = \"\\xB0F\"\r\n}\r\n\r\n\r\nexport enum DropdownChooseOptionTitle {\r\n    MaterialChoiceDropdown = \"Select Material\",\r\n    DefaultDropdown = \"Select\",\r\n}\r\n\r\n\r\nexport enum ButtonActionKeys {\r\n    DashSizeDetail = \"DashSizeDetail\"\r\n}\r\n\r\nexport enum ErrorTypes {\r\n    Error = 1,\r\n    Warning = 2\r\n}\r\n\r\nexport enum ActionType {\r\n    Paste = 1\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { AppConfig } from \"../../app.config.service\";\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArWrDropDownDataService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  // properties for dropdown items\n  private readonly dropdownItemsSubject: BehaviorSubject<any> = new BehaviorSubject<any>({});\n  readonly dropdownItems$ = this.dropdownItemsSubject.asObservable();\n\n  constructor(private readonly _http: HttpClient) { }\n\n  private get dropdownItems(): any {\n    return this.dropdownItemsSubject.getValue();\n  }\n\n  private set dropdownItems(val: any) {\n    this.dropdownItemsSubject.next(val);\n  }\n\n  getCurrentDropdownItems() {\n    return this.dropdownItems;\n  }\n\n  sendDropdownItems(val: any) {\n    this.dropdownItems = val;\n  }\n\n  getDropdownsItemsByKey(key: string): any[] {\n    if (this.dropdownItems && key) {\n      return this.dropdownItems[key];\n    }\n    else {\n      return [];\n    }\n  }\n\n  getDropdownItems() {\n    return this._http.get(`${this.baseUrl}wrar/getdropdownitems`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { CookieService } from \"ngx-cookie-service\";\n\nimport { AppConfig } from '../../app.config.service';\nimport { AuthModel } from '../../models/auth.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = AppConfig.settings.env.api;\n  private authDataSubject: BehaviorSubject<AuthModel>;\n  public authData: Observable<AuthModel>;\n\n  constructor(private _http: HttpClient, private cookieService: CookieService) {\n    // get token from cookie and initialize the bahaviour subject\n    // const storedAuthData = new AuthModel({ token: localStorage.getItem('token')});\n    const storedAuthData = new AuthModel({ token: cookieService.get('token') });\n    this.authDataSubject = new BehaviorSubject<AuthModel>(storedAuthData);\n    this.authData = this.authDataSubject.asObservable();\n  }\n\n  // method to get authentication token and store it into cookies\n  authenticate() {\n    // return this._http.get(`${this.baseUrl}auth`);\n    return this._http.get(`${this.baseUrl}auth`)\n      .pipe(map((respData: AuthModel) => {\n\n        // store auth data details and jwt token in local storage to keep auth between page refreshes\n        // localStorage.setItem('token', JSON.stringify(respData));\n        // localStorage.setItem('token', respData.token);\n        // delete token\n        if (this.cookieService.check('token')) {\n          this.cookieService.delete('token', '/');\n        }\n        // set token in cookies\n        this.cookieService.set('token', respData.token);\n        this.authDataSubject.next(respData);\n\n        return respData;\n      }));\n  }\n\n  // property to get last authentication value\n  public get currentAuthValue(): AuthModel {\n    return this.authDataSubject.value;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn } from '@angular/forms';\r\n\r\nimport { FormControlModel } from \"../../models/form-control.model\";\r\nimport { CustomValidationService } from \"../../shared/services/custom-validation.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControlBaseService {\r\n\r\n  constructor(private customValidationService: CustomValidationService) { }\r\n\r\n  // iterate over each control and creates formControl\r\n  // return FormGroup of\r\n  toFormGroup(controls: FormControlModel[], formGroupValidators?: []) {\r\n    const group: any = {};\r\n\r\n    controls.forEach(control => {\r\n      if (control.validation && control.validation.length > 0) {\r\n\r\n        let validations: ValidatorFn[] = [];\r\n        for (let index = 0; index < control.validation.length; index++) {\r\n          // if not null or undefined\r\n          const validationFunc: ValidatorFn = this.customValidationService.getValidationFunc(control[index]?.validation);\r\n          if (validationFunc) {\r\n            return validations.push(validationFunc);\r\n          }\r\n        }\r\n\r\n        if (control.required) {\r\n          // merge required validation and other validation\r\n          if (validations.length > 0) {\r\n            validations = [Validators.required, ...validations];\r\n          }\r\n          else {\r\n            validations = [Validators.required];\r\n          }\r\n        }\r\n\r\n        // create form control with value\r\n        group[control.key] = new FormControl(control.value || control.defaultvalue || '', validations);\r\n\r\n        // disable controls\r\n        if (control.isDisabled) {\r\n          (group[control.key] as FormControl).disable();\r\n        }\r\n      }\r\n      else {\r\n        // create form control with value\r\n        // add validation and create form control then add to formgroup object\r\n        // adding required validation\r\n        group[control.key] = control.required ? new FormControl(control.value || control.defaultvalue || '', Validators.required)\r\n          : new FormControl(control.value || control.defaultvalue || '');\r\n\r\n        // disable controls\r\n        if (control.isDisabled) {\r\n          (group[control.key] as FormControl).disable();\r\n        }\r\n      }\r\n    });\r\n    let fg = new FormGroup(group);\r\n    fg.setValidators(formGroupValidators);\r\n    return fg;\r\n  }\r\n\r\n  // input => array or any nested array or iterable object\r\n  // return flattened array\r\n  flatten(input: any) {\r\n    const stack = [...input];\r\n    const res = [];\r\n    while (stack.length) {\r\n      // pop value from stack\r\n      const next = stack.pop();\r\n      if (Array.isArray(next)) {\r\n        // push back array items, won't modify the original input\r\n        stack.push(...next);\r\n      } else {\r\n        res.push(next);\r\n      }\r\n    }\r\n    // reverse to restore input order\r\n    return res.reverse();\r\n  }\r\n\r\n  // helper method to get the equal size columns\r\n  getColumnNumber(columnLength: number) {\r\n    if (columnLength <= 12) {\r\n      return (12 / (columnLength || 1));\r\n    }\r\n    else {\r\n      return 12;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nimport { Validators, ORingTool_InternalVacuumOnly_Validators } from \"../helpers/constants\";\nimport { lessThanValidation } from \"../directives/custom-validations/comparison-validation.directive\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidationService {\n  constructor() { }\n\n  getValidationFunc(validationKey: string): ValidatorFn {\n    switch (validationKey) {\n      // example\n      // case Validators.FORBIDDEN_NAME_VALIDATOR: // TODO: just for test remove it \n      //   return forbiddenNameValidator(/bob/i);\n      //   break;\n      case ORingTool_InternalVacuumOnly_Validators.GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION:\n        // return largerThanValidation();\n        break;\n      default:\n        return null\n        break;\n    }\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n    getClientErrorMessage(error: Error): string {\r\n        return error.message ?\r\n            error.message :\r\n            error.toString();\r\n    }\r\n\r\n    getServerErrorMessage(error: HttpErrorResponse): string {\r\n        return navigator.onLine ?\r\n            error.message :\r\n            'No Internet Connection';\r\n    }\r\n}","// core imports\r\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n// application imports\r\nimport { ErrorService } from './error.service';\r\nimport { ToastService } from '../components/toasts-container/toast-service';\r\nimport { LoggerService } from \"../services/logger.service\";\r\nimport { LogModel } from '../../models/log.model';\r\n\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n\r\n    constructor(\r\n        private injector: Injector\r\n    ) { }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n        const genericMessage = \"Something went wrong, please try again later !\";\r\n        const errorService = this.injector.get(ErrorService);\r\n        const notifier = this.injector.get(ToastService);\r\n        const logger = this.injector.get(LoggerService);\r\n\r\n        let message: string = this.getErrorMessage(error);\r\n        if (message) {\r\n            // notifier\r\n            notifier.showError(genericMessage);\r\n            console.log(message);\r\n            // notifier.showError(message);\r\n\r\n            // log the error message to server logs(Winston Logger)\r\n            // let logError: LogModel = new LogModel({ message: ` Client side error: ${message}`, level: 0 });\r\n            let logError: LogModel = new LogModel({ message: ` Client side error: ${JSON.stringify(error)}`, level: 0 });\r\n            logger.log(logError).subscribe(\r\n                (data: any) => {\r\n                    /*console.log(\"Successfully logged the error.\");*/\r\n                },\r\n                (error: any) => {\r\n                    const httpLogError = this.getErrorMessage(error);\r\n                    // let httpLogErrObj: LogModel = new LogModel({ message: httpLogError, level: 0 });\r\n                    let httpLogErrObj: LogModel = new LogModel({ message: JSON.stringify(error), level: 0 });\r\n                    logger.log(httpLogErrObj);\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    // helper to get the error message from error\r\n    private getErrorMessage(error: Error | HttpErrorResponse): string {\r\n        let errMessage = \"\";\r\n        const errorService = this.injector.get(ErrorService);\r\n        if (error instanceof HttpErrorResponse) {\r\n            // Server error\r\n            errMessage = errorService.getServerErrorMessage(error);\r\n        } else {\r\n            // Client Error\r\n            errMessage = errorService.getClientErrorMessage(error);\r\n        }\r\n        return errMessage;\r\n    }\r\n}","// core imports\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\n\n// third party imports\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n// application imports\nimport { SwitchButtonModel } from \"../../models/switch-button.model\";\nimport {\n  Units, Temperature, TemperatureCelsiusCode,\n  TemperatureFahrenheitCode, UnitsDecimalPlaces,\n  CalculatorTypes, calculatedDataKeys,\n  ControlSubType, Measures\n} from \"../../shared/helpers/constants\";\nimport { ErrorModel } from '../../models/error.model';\nimport { ViewErrorModel } from '../../models/view-error.model';\nimport { FormControlModel } from '../../models/form-control.model';\nimport { MaterialChoiceModel } from '../../models/material-choice.model';\nimport { MaterialChoiceService } from \"./material-choice.service\";\nimport { TwoColumnFormModel } from '../../models/two_column_form.model';\nimport { FormRowModel } from '../../models/form-row.model';\nimport { IBottomRadiiWarningRanges } from '../../models/Ibottom-radii-warning-ranges';\nimport { UnitButtonService } from \"../components/unit-button/unit-button.service\";\nimport { TemperatureButtonService } from \"../components/temperature-button/temperature-button.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor(\n    private readonly modalService: NgbModal,\n    private readonly materialChoiceService: MaterialChoiceService,\n    private readonly temperatureButtonService: TemperatureButtonService,\n    private readonly unitButtonService: UnitButtonService\n  ) { }\n\n  getUnits() {\n    return [\n      new SwitchButtonModel({\n        id: Units.INCH,\n        title: Units[Units[0]],\n        display_title: \"Inch\",\n        display_Short_title: \"in\",\n        isActive: true\n      }),\n      new SwitchButtonModel({\n        id: Units.MILLI_METER,\n        title: Units[Units[1]],\n        display_title: \"Millimeter\",\n        display_Short_title: \"mm\", isActive: false\n      })\n    ];\n  }\n\n  getTemperature() {\n    return [\n      new SwitchButtonModel({\n        id: Temperature.CELCIUS,\n        title: Temperature[Temperature.CELCIUS],\n        display_title: \"Celsius\",\n        display_Short_title: TemperatureCelsiusCode.HTML_CODE,\n        isActive: true\n      }),\n      new SwitchButtonModel({\n        id: Temperature.FAHRENHEIT,\n        title: Temperature[Temperature.FAHRENHEIT],\n        display_title: \"Fahrenheit\",\n        display_Short_title: TemperatureFahrenheitCode.HTML_CODE,\n        isActive: false\n      })\n    ];\n  }\n\n  getMeasures() {\n    return [\n      new SwitchButtonModel({\n        id: Measures.Imperial,\n        title: Measures[Measures[0]],\n        display_title: \"Imperial\",\n        display_Short_title: \"in\",\n        isActive: true\n      }),\n      new SwitchButtonModel({\n        id: Measures.Metric,\n        title: Measures[Measures[1]],\n        display_title: \"Metric\",\n        display_Short_title: \"mm\",\n        isActive: false\n      })\n    ];\n  }\n\n  // set default measure/unit for WrAr\n  setDefaultMeasure(): SwitchButtonModel {\n    // get measures \n    const measures = this.getMeasures();\n    this.unitButtonService.sendUnitValue(measures[0]);\n    return measures[0];\n  }\n\n  convertToInch(val: number, decimalPoint?: number) {\n    if (!val && val !== 0) {\n      return;\n    }\n    // 0.0393701 => 0.03936996\n    return (val * 0.03936996).toFixed(decimalPoint || UnitsDecimalPlaces.INCH);\n  }\n\n  convertToMillimeter(val: number, decimalPoint?: number) {\n    if (!val && val !== 0) {\n      return;\n    }\n    return (val * 25.4).toFixed(decimalPoint || UnitsDecimalPlaces.MILLI_METER);\n  }\n\n  convertFahrenheitToCelcius(inputTempInFahrenheit: string) {\n    return (+((parseFloat(inputTempInFahrenheit) - 32) * 5 / 9).toFixed(3));\n  }\n\n  /* This function convert temperature in Celsius to Fahrenheit*/\n  convertCelciusToFahrenheit(inputTempInCelsius: string) {\n    return (+((parseFloat(inputTempInCelsius) * 9 / 5) + 32).toFixed(3));\n  }\n\n  // modal open helper\n  openNgbModal(component: any) {\n    const options: NgbModalOptions = {};\n    //     If true, the backdrop element will be created for a given modal.\n    // Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n    options.backdrop = 'static';\n    // If true, the modal will be closed when Escape key is pressed\n    options.keyboard = false;\n    return this.modalService.open(component, options);\n  }\n\n  // group the client error in the respective field or if field already added then check title and error message\n  // if field already added then title and similiar error message already exist then do not add error message again\n  // if field already added then title exist and similiar error message not already exist then add error message in same title\n  // else push new error\n  // it will reduce the duplicacy of error messages\n  groupClientErrors(errors: ErrorModel[]): Promise<ViewErrorModel[]> {\n    return new Promise((resolve, reject) => {\n      let groupedErrors: ViewErrorModel[] = [];\n      // loop on client error\n      for (let index = 0; index < errors.length; index++) {\n        const clientError = errors[index];\n\n        // findIndex of field which already added in grouped errors with field key\n        const fieldErrorIndex = groupedErrors.findIndex((e) => {\n          return e.field === clientError.field;\n        });\n\n        // get index of title in grouped all client errors\n        const titleErrorIndex = groupedErrors.findIndex((e) => {\n          return e.title === clientError.title;\n        });\n\n        // if error doesnot have any titlle then need to show generic message\n        // prevent to display multiple generic errors\n        if (!clientError.title) {\n          // findIndex empty title error in the grouped client error\n          const alreadyAddedGenericErrorMessageIndex = groupedErrors.findIndex((gError: ViewErrorModel) => {\n            const similarErrorDetailIndex = gError.errors.findIndex((errorMsg: string) => {\n              if (errorMsg === clientError.detail) {\n                return errorMsg;\n              }\n            });\n\n            if (!gError.title && similarErrorDetailIndex > -1) {\n              return gError;\n            }\n          });\n\n          // if not already added client error message then add it\n          if (!(alreadyAddedGenericErrorMessageIndex > -1)) {\n            this.addErrorToGroupedArray(groupedErrors, clientError);\n          }\n        }\n        else if (clientError.title && titleErrorIndex > -1) {\n          // condition to show the generic message with grouped by title\n          // title of error already there in grouped error and already have the specific error detail or error mesage is ther then do not add it again\n          // findIndex already added client error message\n          const alreadyAddedGenericWarningMessageIndex = groupedErrors[titleErrorIndex].errors.findIndex((errorMsg: string) => {\n            if (errorMsg === clientError.detail) {\n              return errorMsg;\n            }\n          });\n\n          // if not already added client error message then add it\n          if (!(alreadyAddedGenericWarningMessageIndex > -1)) {\n            // add client error messages which have title\n            // and field already exist in the grouped client errors\n            groupedErrors[fieldErrorIndex].errors.push(clientError.detail);\n          }\n        }\n        else if (fieldErrorIndex && fieldErrorIndex > -1 && clientError.title) {\n          // add client error messages which have title\n          // and field already exist in the grouped client errors\n          groupedErrors[fieldErrorIndex].errors.push(clientError.detail);\n        }\n        else {\n          // add field error\n          this.addErrorToGroupedArray(groupedErrors, clientError);\n        }\n      }\n      return resolve(groupedErrors);\n    });\n  }\n\n  // add error to grouped client error array\n  private addErrorToGroupedArray(groupedErrors: ViewErrorModel[], clientError: ErrorModel) {\n    const viewError = new ViewErrorModel({\n      field: clientError.field,\n      title: clientError.title,\n      isDetailOpened: clientError.isDetailOpened,\n      type: clientError.type,\n      errors: [clientError.detail]\n    });\n    groupedErrors.push(viewError);\n  }\n\n  setFormValidationErrorToControl(control: FormGroup, field: string, error: ErrorModel) {\n    if (error && !control.controls[error.field].errors) {\n      // set error to form control\n      control.controls[error.field].setErrors(error);\n    }\n    else {\n      const fc = control.controls[field];\n      if (fc) {\n        // set error to form control\n        control.controls[field].setErrors(error);\n      }\n    }\n  }\n\n  // set form control errors\n  setValidationErrorToFormControl(control: AbstractControl, error: ErrorModel, errorKey?: string) {\n    // form control and form control has already setted error\n    if (control && control.errors) {\n      const errorKeys = Object.keys(control.errors);\n\n      const alreadyControlHaveErrorByKeyIndex = errorKeys.findIndex(eKey => {\n        if (eKey === errorKey) {\n          return eKey;\n        }\n      });\n\n      if (alreadyControlHaveErrorByKeyIndex > -1 && !error) {\n        // formcontrol have error and error is null then delete error from control\n        delete control.errors[errorKeys[alreadyControlHaveErrorByKeyIndex]];\n        if (!(Object.keys(control.errors).length > 0)) {\n          control.setErrors(null);\n        }\n      }\n      else if (alreadyControlHaveErrorByKeyIndex > -1 && error) {\n        // formcontrol have error and error is null then delete error from control\n        delete control.errors[errorKeys[alreadyControlHaveErrorByKeyIndex]];\n        control.errors[errorKey] = error;\n      }\n      else if (!(alreadyControlHaveErrorByKeyIndex > -1) && error) { // formcontrol not have error and error has value\n        // not already error added to control then add\n        control.errors[errorKey] = error;\n      }\n      // else {\n      //   control.setErrors(null);\n      // }\n    }\n    else {\n      if (errorKey && error) {\n        // set error to form control\n        const e = {};\n        e[errorKey] = error;\n        control.setErrors(e);\n      }\n      else {\n        control.setErrors(null);\n      }\n    }\n  }\n\n  maxOringIdValue(unit: SwitchButtonModel): number {\n    if (unit) {\n      if (unit && unit.id === Units.MILLI_METER) {\n        // millimeter\n        return 914.4;\n      }\n      else {\n        // Inch\n        return 36;\n      }\n    }\n  }\n\n  bottomRadiiMinLimit(unit: SwitchButtonModel): number {\n    if (unit) {\n      if (unit.id === Units.MILLI_METER) {\n        // millimeter\n        return 0.005 * 25.40;\n      }\n      else {\n        // Inch\n        return 0.005;\n      }\n    }\n  }\n\n  bottomRadiiMaxLimit(unit: SwitchButtonModel): number {\n    if (unit) {\n      if (unit.id === Units.MILLI_METER) {\n        // millimeter\n        return 0.89;\n      }\n      else {\n        // Inch\n        return 0.035;\n      }\n    }\n  }\n\n  // get material choice\n  getMaterialChoiceList(formControlKey: string): FormControlModel[] {\n    // convert an array object to formControl Array\n    let calculatorTypeDDl: FormControlModel[] = [];\n    const materialChoices: MaterialChoiceModel[] = this.materialChoiceService.getCurrentMaterialChoiceList();\n    if (materialChoices && materialChoices.length > 0) {\n      for (let index = 0; index < materialChoices.length; index++) {\n        const fc: FormControlModel = new FormControlModel({ key: formControlKey, label: materialChoices[index].mname, value: materialChoices[index] });\n        calculatorTypeDDl.push(fc);\n      }\n    }\n    return calculatorTypeDDl\n  }\n\n  // create and return dropdown items\n  getDropdownItems(formControlKey: string, ddlItems: FormControlModel[]): FormControlModel[] {\n    // convert an array object to formControl Array\n    let calculatorTypeDDl: FormControlModel[] = [];\n    if (ddlItems && ddlItems.length > 0) {\n      for (let index = 0; index < ddlItems.length; index++) {\n        const fc: FormControlModel = new FormControlModel({ key: formControlKey, label: ddlItems[index].label, value: ddlItems[index], show: ddlItems[index].show });\n        calculatorTypeDDl.push(fc);\n      }\n    }\n    return calculatorTypeDDl\n  }\n\n  // get calculated local stored data\n  getCalculatedStoredData(calculatorId: Number): any {\n    let calculatedData: any = null;\n    switch (calculatorId) {\n      case CalculatorTypes.ORingInternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.RECTANGULAR_GLAND_INTERNAL));\n        break;\n      case CalculatorTypes.ORingRectangularGlandExternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.RECTANGULAR_GLAND_EXTERNAL));\n        break;\n      case CalculatorTypes.ORingDovetailGlandVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.DOVETAIL_GLAND));\n        break;\n      case CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.HALF_DOVETAIL_GLAND));\n        break;\n      default:\n        break;\n    }\n    return calculatedData;\n  }\n\n  // check calculated data exist in local storage \n  isCalculatedDataExist(calculatorId: Number): Boolean {\n    if (!calculatorId) {\n      return false;\n    }\n\n    let calculatedData: any = null;\n    switch (calculatorId) {\n      case CalculatorTypes.ORingInternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.RECTANGULAR_GLAND_INTERNAL));\n        break;\n      case CalculatorTypes.ORingRectangularGlandExternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.RECTANGULAR_GLAND_EXTERNAL));\n        break;\n      case CalculatorTypes.ORingDovetailGlandVacuumOnly:\n      case CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly:\n        calculatedData = JSON.parse(localStorage.getItem(calculatedDataKeys.DOVETAIL_GLAND));\n        break;\n      default:\n        break;\n    }\n    if (calculatedData) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n\n  // convert form unit controls\n  convertFormUnitControlValuesAndSet(calculatorForm: TwoColumnFormModel, form: FormGroup, selectedUnit: SwitchButtonModel): FormGroup {\n    if (!calculatorForm && !form) {\n      return;\n    }\n\n    // set unit of left column\n    const calculatorLeftColumnRows = this.setConvertedUnitValueToForm(form, calculatorForm.left_column.form_layout_row, selectedUnit);\n    // set unit of right column\n    const calculatorRightColumnRows = this.setConvertedUnitValueToForm(form, calculatorForm.right_column.form_layout_row, selectedUnit);\n    return form;\n  }\n\n  // convert form unit controls values\n  private setConvertedUnitValueToForm(form: FormGroup, rows: FormRowModel[], selectedUnit: SwitchButtonModel) {\n    // iterate over left column rows\n    for (let row = 0; row < rows.length; row++) {\n      // iterate over left column columns\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\n        // iterate over column controls\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\n          // check form control key exist \n          const formControlKeys = Object.keys(form.controls);\n          const formKeyIndex = formControlKeys.findIndex((key) => {\n            return (key === rows[row].form_layout_columns[column].form_controls[control].key);\n          });\n\n          // check control sub-type is unit and convert and set the form control value\n          if (formKeyIndex > -1 && rows[row].form_layout_columns[column].form_controls[control].sub_type === ControlSubType.unit) {\n            const decimalPoint: number = rows[row].form_layout_columns[column].form_controls[control].decimal_point;\n            if (Units.INCH === +(selectedUnit.id)) {\n              form.controls[formControlKeys[formKeyIndex]].setValue(this.convertToInch(form.controls[formControlKeys[formKeyIndex]].value, decimalPoint));\n            }\n            else if (Units.MILLI_METER === +(selectedUnit.id)) {\n              form.controls[formControlKeys[formKeyIndex]].setValue(this.convertToMillimeter(form.controls[formControlKeys[formKeyIndex]].value, decimalPoint));\n            }\n            else {\n              form.controls[formControlKeys[formKeyIndex]].setValue(this.convertToInch(form.controls[formControlKeys[formKeyIndex]].value, decimalPoint));\n            }\n          }\n        }\n      }\n    }\n    return rows;\n  }\n\n  getBottomRadiiRange(glandDepthNominalControlValue: any): IBottomRadiiWarningRanges {\n    let ranges: IBottomRadiiWarningRanges = {\n      bottomRadiiWarningMinRange1: (3 / 100) * parseFloat(glandDepthNominalControlValue),\n      bottomRadiiWarningMaxRange1: (17 / 100) * parseFloat(glandDepthNominalControlValue),\n      bottomRadiiWarningMinRange2: (32 / 100) * parseFloat(glandDepthNominalControlValue),\n      bottomRadiiWarningMaxRange2: (33 / 100) * parseFloat(glandDepthNominalControlValue)\n    };\n    return ranges;\n  }\n\n  setAndSendTemperatureManually(temperatureId: number) {\n    if (temperatureId === Temperature.FAHRENHEIT) {\n      const fahrenheitObj = { id: Temperature.FAHRENHEIT, title: Temperature[Temperature.FAHRENHEIT], display_title: TemperatureFahrenheitCode.HTML_CODE, display_Short_title: TemperatureFahrenheitCode.HTML_CODE, isActive: true, actionType: 0 };\n      this.temperatureButtonService.sendTemperatureValue(fahrenheitObj);\n    }\n\n    if (temperatureId === Temperature.CELCIUS) {\n      const celciusObj = { id: Temperature.CELCIUS, title: Temperature[Temperature.CELCIUS], display_title: TemperatureCelsiusCode.HTML_CODE, display_Short_title: TemperatureCelsiusCode.HTML_CODE, isActive: true, actionType: 0 };\n      this.temperatureButtonService.sendTemperatureValue(celciusObj);\n    }\n  }\n\n  // convert to 10 power -6 to X.XXXXXX\n  formatToTenPowerSix(val: number): number {\n    return val ? ((val) / 1000000) : 0.000;\n  }\n\n  // convert from 10 power -6 to XX.XX or XX.X or X.X\n  convertFromNegetivePowerOfSix(value: number) {\n    return (value * 1000000);\n  }\n\n\n  // clear the calculator control label value by control key\n  resetLabel(rows: FormRowModel[], controlKey: string) {\n    // iterate over left column rows\n    for (let row = 0; row < rows.length; row++) {\n      // iterate over left column columns\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\n        // iterate over column controls\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\n          if (rows[row].form_layout_columns[column].form_controls[control].key === controlKey) {\n            rows[row].form_layout_columns[column].form_controls[control].label = '';\n          }\n        }\n      }\n    }\n    return rows;\n  }\n\n  // show or hide the calculator control by control key\n  // isOptionControl => true when form control is of type dropdown or radio \n  showOrHideFormControlByControlKey(rows: FormRowModel[], controlKey: string, optionIndex: number = -1, isOptionControl: boolean = false, isShow = false) {\n    // iterate over left column rows\n    for (let row = 0; row < rows.length; row++) {\n      // iterate over left column columns\n      for (let column = 0; column < rows[row].form_layout_columns.length; column++) {\n        // iterate over column controls\n        for (let control = 0; control < rows[row].form_layout_columns[column].form_controls.length; control++) {\n          if (rows[row].form_layout_columns[column].form_controls[control].key === controlKey) {\n            if (isOptionControl && optionIndex >= 0) {\n              rows[row].form_layout_columns[column].form_controls[control].options[optionIndex].show = isShow;\n            }\n            else {\n              rows[row].form_layout_columns[column].form_controls[control].show = isShow;\n            }\n          }\n        }\n      }\n    }\n    return rows;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { LogModel } from \"../../models/log.model\";\nimport { AppConfig } from '../../app.config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  baseUrl = AppConfig.settings.env.api;\n\n  constructor(private _http: HttpClient) {\n  }\n\n  log(body: LogModel) {\n    return this._http.post(`${this.baseUrl}logger/log`, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { AppConfig } from \"../../app.config.service\";\nimport { BehaviorSubject } from 'rxjs';\nimport { MaterialChoiceModel } from '../../models/material-choice.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialChoiceService {\n  private baseUrl = AppConfig.settings.env.api;\n  private readonly materialChoiceListSubject: BehaviorSubject<MaterialChoiceModel[]> = new BehaviorSubject<MaterialChoiceModel[]>([]);\n  readonly materialchoiceList$ = this.materialChoiceListSubject.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  private get materialchoiceList(): MaterialChoiceModel[] {\n    return this.materialChoiceListSubject.getValue();\n  }\n\n  private set materialchoiceList(val: MaterialChoiceModel[]) {\n    this.materialChoiceListSubject.next(val);\n  }\n\n  getCurrentMaterialChoiceList() {\n    return this.materialchoiceList;\n  }\n\n  sendMaterialChoiceList(val: MaterialChoiceModel[]) {\n    this.materialchoiceList = [...val];\n  }\n\n  getMaterialChoice() {\n    return this.http.get(`${this.baseUrl}common/materialchoice`);\n  }\n}\n","// core imports\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n// third party imports\nimport * as jsPDF from \"jspdf\";\nimport html2canvas from 'html2canvas';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n// (window as any).html2canvas = html2canvas;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n\n  constructor(@Inject(DOCUMENT) private document: Document,\n    private spinner: NgxSpinnerService) { }\n\n  // generate pdf\n  generatePdf(fileName: String) {\n    // show spinner\n    this.spinner.show();\n    const div = this.document.getElementsByTagName(\"body\")[0]; //document.getElementsByTagName(\"body\")[0];\n    const options = { background: \"white\", height: div.clientHeight, width: div.clientWidth };\n\n    // hide controls\n    let elements: HTMLCollectionOf<Element> = this.document.getElementsByClassName('ignorePdf');\n    Array.from(elements).forEach(element => {\n      element.classList.add(\"hide\");\n    });\n\n    html2canvas(div, options).then((canvas) => {\n      const imgWidth = 214;\n      // const pageHeight = 295;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      // const heightLeft = imgHeight;\n      // const contentDataURL = canvas.toDataURL('image/png');\n      const position = 0;\n\n      //Initialize JSPDF\n      let doc = new jsPDF(\"p\", \"mm\", \"a4\", 1);\n      //Converting canvas to Image\n      let imgData = canvas.toDataURL(\"image/PNG\");\n      //Add image Canvas to PDF\n      doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight, '', 'FAST');\n      let pdfOutput = doc.output();\n      // using ArrayBuffer will allow you to put image inside PDF\n      let buffer = new ArrayBuffer(pdfOutput.length);\n      let array = new Uint8Array(buffer);\n      for (let i = 0; i < pdfOutput.length; i++) {\n        array[i] = pdfOutput.charCodeAt(i);\n      }\n\n      //Name of pdf\n      const fileNameFullName = `${fileName}.pdf`;\n\n      // Make file\n      doc.save(fileNameFullName);\n\n      // show controls\n      Array.from(elements).forEach(element => {\n        element.classList.remove(\"hide\");\n        // element.classList.add(\"show\");\n      });\n      // show spinner\n      this.spinner.hide();\n    });\n  }\n}\n","// core imports\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule, DecimalPipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n// third party imports\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// application imports\r\nimport { UnitButtonComponent } from './components/unit-button/unit-button.component';\r\nimport { TemperatureButtonComponent } from './components/temperature-button/temperature-button.component';\r\nimport { UnitButtonService } from './components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from './components/temperature-button/temperature-button.service';\r\nimport { TextboxComponent } from \"./components/custom-controls/textbox/textbox.component\";\r\nimport { SwitchButtonComponent } from './components/custom-controls/switch-button/switch-button.component';\r\nimport { DropDownComponent } from './components/custom-controls/drop-down/drop-down.component';\r\nimport { CalculatorToolbarComponent } from './components/calculator-toolbar/calculator-toolbar.component';\r\nimport { UserRulesComponent } from './components/user-rules/user-rules.component';\r\nimport { AlertModalComponent } from './components/alert-modal/alert-modal.component';\r\nimport { NumericTextboxComponent } from \"./components/custom-controls/numeric-textbox/numeric-textbox.component\";\r\nimport { DashSizeDetailsComponent } from './components/dash-size-details/dash-size-details.component';\r\nimport { DashSizeDetailsService } from \"./components/dash-size-details/dash-size-details.service\";\r\nimport { NumericDirective } from './directives/numeric.directive';\r\nimport { MaterialChoiceService } from \"./services/material-choice.service\";\r\nimport { CustomValidationService } from \"./services/custom-validation.service\";\r\nimport { ControlBaseService } from \"./services/control-base.service\";\r\nimport { PrintService } from \"./services/print.service\";\r\nimport { ErrorService } from \"./services/error.service\";\r\nimport { GlobalErrorHandler } from \"./services/global-error-handler\";\r\nimport { ToastsContainerComponent } from './components/toasts-container/toasts-container.component';\r\nimport { ToastService } from \"./components/toasts-container/toast-service\";\r\nimport { CalculatorToolbarService } from \"./components/calculator-toolbar/calculator-toolbar.service\";\r\nimport { LoggerService } from \"./services/logger.service\";\r\nimport { MeasureButtonComponent } from './components/measure-button/measure-button.component';\r\nimport { ArWrDropDownDataService } from \"./services/ar-wr-drop-down-data.service\";\r\nimport { TabNavComponent } from \"./components/tab-nav/tab-nav.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TextboxComponent,\r\n    SwitchButtonComponent,\r\n    DropDownComponent,\r\n    CalculatorToolbarComponent,\r\n    UserRulesComponent,\r\n    AlertModalComponent,\r\n    NumericDirective,\r\n    NumericTextboxComponent,\r\n    UnitButtonComponent,\r\n    TemperatureButtonComponent,\r\n    DashSizeDetailsComponent,\r\n    ToastsContainerComponent,\r\n    MeasureButtonComponent,\r\n    TabNavComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    TextboxComponent,\r\n    SwitchButtonComponent,\r\n    DropDownComponent,\r\n    CalculatorToolbarComponent,\r\n    UserRulesComponent,\r\n    AlertModalComponent,\r\n    NumericDirective,\r\n    NumericTextboxComponent,\r\n    UnitButtonComponent,\r\n    TemperatureButtonComponent,\r\n    DashSizeDetailsComponent,\r\n    ToastsContainerComponent,\r\n    MeasureButtonComponent,\r\n    TabNavComponent\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        DecimalPipe,\r\n        CustomValidationService,\r\n        ControlBaseService,\r\n        UnitButtonService,\r\n        TemperatureButtonService,\r\n        MaterialChoiceService,\r\n        DashSizeDetailsService,\r\n        PrintService,\r\n        ErrorService,\r\n        GlobalErrorHandler,\r\n        ToastService,\r\n        CalculatorToolbarService,\r\n        LoggerService,\r\n        ArWrDropDownDataService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n// production: false,\nimport { version } from \"../../package.json\";\n\nexport const environment = {\n  appVersion: version,\n  production: false,\n  name: 'dev'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}