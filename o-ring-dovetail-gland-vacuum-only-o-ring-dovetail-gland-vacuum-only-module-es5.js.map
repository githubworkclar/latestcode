{"version":3,"sources":["webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only-routing.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only-validation.service.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component.html","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.module.ts","webpack:///client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.service.ts"],"names":["routes","path","component","pathMatch","ORingDovetailGlandVacuumOnlyRoutingModule","forChild","imports","exports","glandAngleClientValidationTitle","glandAngleRangeValidationMessage","glandWidthClientValidationTitle","glandWidthClientValidationMessage","bottomRadiiClientValidationTitle","bottomRadiiNonPhysicalValidationMessage","topRadiiClientValidationTitle","topRadiiNonPhysicalValidationMessage","glandAngleRecommendedGlandAngleWarningTitle","glandAngleRecommendedGlandAngleWarningMessage","topRadiiReduceLifeWarningTitle","topRadiiReduceLifeWarningMessage","bottomRadiiReduceLifeWarningTitle","bottomRadiiReduceLifeWarningMessage","glandWidthNoReliableWarningTitle","glandWidthNoReliableWarningMessage","ORingDovetailGlandVacuumOnlyValidationService","helperService","unitButtonService","temperatureButtonService","control","glandAngleNominalControl","get","error","value","lessThanEqual44Error","largerThanEqual76Error","option","glandAngleMinControlValue","Nominal","WithTolerance","minValues","generateMinValues","glandAngleMin","toString","glandAngleMaxControlValue","maxValues","generateMaxValues","glandAngleMax","oringCrossSectionNominalControl","glandDepthNominalControl","oringCrossSectionNominalLessThanError","glandWidthNominalControl","radiiRecommendedNominalValues","generateRadiiRecomendationNominal","w","setValidationErrorToFormControl","glandWidthMinControl","radiiRecommendedMinValues","generateRadiiRecomendationMin","wMin","WithMinMax","glandWidthMaxControl","radiiRecommendedMaxValues","generateRadiiRecomendationMax","wMax","bottomRadiiNominalControl","currentSelectedUnit","getCurrentUnitValue","bottomRadiiMinLimit","display_Short_title","h","bottomRadiiPercent","radiiRecommendedNominalValuesHLessThanZeroError","Error","radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33","bottomRadiiErrorMaxRange","parseFloat","radiiRecommendedNominalValuesBottomRadiiErrorMaxRangeError","bottomRadiiMinControl","hMin","bottomRadiiMinPercent","radiiRecommendedMinValuesHMinLessThanZeroError","radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error","bottomRadiiMaxControl","hMax","bottomRadiiMaxPercent","radiiRecommendedMaxValuesHMaxLessThanZero","radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error","topRadiiNominalControl","errors","setErrors","largerThanValidationError","radiiRecomendationNominalValues","glandDepthNominalControlValidateValue","topRadiiPercent","radiiRecomendationNominalValuesHError","radiiRecomendationNominalValuesTopRadiiPercentError","topRadiiMinControl","topRadiiMinPercent","radiiRecommendedMinValuesTopRadiiMinPercentError","topRadiiMaxControl","topRadiiMaxPercent","radiiRecommendedMinValuesHMaxLessThanZeroError","radiiRecommendedMaxaluesTopRadiiMinPercentError","materialCteNominalControl","operatingTemperatureNominalControl","operatingTemperatureMinControl","operatingTemperatureMaxControl","currentSelectedTemperature","getCurrentTemperatureValue","materialCteNominalValue","maxtemp","message","FAHRENHEIT","id","mintempF","maxtempF","mname","mintemp","operatingTemperatureNominalInCelcius","convertFahrenheitToCelcius","toFixed","operatingTemperatureNominalLessThanMaxTempError","operatingTemperatureNominalLargerThanMinTempError","operatingTemperatureMinInCelcius","operatingTemperatureMinLessThanMaxTempError","operatingTemperatureMinLargerThanMinTempError","operatingTemperatureMaxInCelcius","operatingTemperatureMaxLessThanMaxTempError","operatingTemperatureMaxLargerThanMinTempError","oringCrossSectionNominalLessThanRangeError","oringCrossSectionNominalLargerThanRangeError","INCH","MILLI_METER","oringIdNominalControl","maxOringIdValue","toolbarOptionkey","formControlKeys","Object","keys","controls","index","length","fc","msg","glandWidthToleranceControl","glandDepthToleranceControl","glandAngleToleranceControl","topRadiiToleranceControl","bottomRadiiToleranceControl","gapToleranceControl","gapNominalControl","glandCenterlineToleranceControl","glandCenterlineNominalControl","warning","field","title","detail","type","Warning","form","glandAngleNominalError1","glandAngleNominalError2","glandAngleNominalError3","glandAngleNominalError4","glandAngleMinWarning1","glandAngleMinWarning2","glandAngleMinWarning3","glandAngleMinWarning4","glandAngleMaxWarning1","glandAngleMaxWarning2","glandAngleMaxWarning3","glandAngleMaxWarning4","recommendedRadiiValues","topRadiiNominalWarning1","topRadiiNominalWarning2","topRadiiMinWarning1","topRadiiMinWarning2","topRadiiMaxWarning1","topRadiiMaxWarning2","bottomRadiiNominalControlValue","glandDepthNominalControlValue","bottomRadiiRanges","getBottomRadiiRange","bottomRadiiNominalWarning1","bottomRadiiNominalWarning2","bottomRadiiNominalRangeWarning1","bottomRadiiWarningMinRange1","bottomRadiiNominalRangeWarning2","bottomRadiiWarningMaxRange1","bottomRadiiNominalRangeWarning3","bottomRadiiWarningMinRange2","bottomRadiiNominalRangeWarning4","bottomRadiiWarningMaxRange2","bottomRadiiMinWarning1","bottomRadiiMinWarning2","bottomRadiiMaxWarning1","bottomRadiiMaxWarning2","bottomRadiiMaxWarning3","bottomRadiiMaxWarning4","oringCrossSectionNominalControlValue","glandWidthMinControlValue","glandWidthMin","glandWidthMaxControlValue","glandWidthMax","glandDepthMinControlValue","bottomRadiiMinControlValue","topRadiiMinControlValue","gapMinControlValue","glandCenterlineMinControlValue","glandDepthMin","bottomRadiiMin","topRadiiMin","gapMin","glandCenterlineMin","error1","push","error2","error3","error4","error5","error6","error7","glandDepthMaxControlValue","bottomRadiiMaxControlValue","topRadiiMaxControlValue","gapMaxControlValue","glandCenterlineMaxControlValue","glandDepthMax","bottomRadiiMax","topRadiiMax","gapMax","glandCenterlineMax","minValue","maxValue","glandDepthNominal","glandWidthNominal","topRadiiNominal","bottomRadiiNominal","glandAngleNominal","Math","sin","PI","tan","round","radiiRecomendationMinValues","radiiRecomendationMaxValues","providedIn","ORingDovetailGlandVacuumOnlyComponent","controlBaseService","authService","rectangularORingCalcService","dynamicFormTwoColumnLayoutService","printService","oRingDovetailGlandVacuumOnlyValidationService","oRingDovetailGlandVacuumOnlyService","calculatorToolbarService","flattenedFormControls","controlType","isSubmitted","payLoad","bottomRadiiMaxLimit","clientErrors","clientWarnings","serverErrors","serverWarnings","isShowPasteBtn","rectangleJSONConfig","getCurrentORingConfigValue","initializeOringConfig","oRingDataSubscription","oRingConfig$","subscribe","x","onUnitChangeUpdateCalculator","onTemperatureChangeUpdateCalculator","paste","d","onPaste","oRingJsonConfig","oRingDovetailGlandVacuumOnly","calculators","calculatorConfig","sendCalculator","createForm","onOptionChange","toolbarOption","setShowPasteBtnFlag","onReset","CalculatedData","temperatureChangeSubscription","temperature$","resetFormAndCalculation","fieldName","dovetailGlandForm","leftFormControls","left_column","form_layout_row","map","row","form_layout_columns","column","formControls","form_controls","key","show","rightFormControls","right_column","flatten","filteredControls","filter","label","button","toFormGroup","validations","jsonConfigValidationsArray","form_validation","validationFuncKey","GLAND_WIDTH_NOMINAL_VALIDATION","glandWidthNominalValidation","GLAND_WIDTH_MIN_VALIDATION","glandWidthMinValidation","GLAND_WIDTH_MAX_VALIDATION","glandWidthMaxValidation","BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT","bottomRadiiShouldBeLessThanBottomRadiiMinLimit","BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION","bottomRadiiNominalNonPhysicalGland","BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION","bottomRadiiMinNonPhysicalGland","BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION","bottomRadiiMaxNonPhysicalGland","TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT","topRadiiNominalShouldBeLessThanBottomRadiiMinLimit","TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION","topRadiiNominalNonPhysicalValidation","TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION","topRadiiMinNonPhysicalValidation","TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION","topRadiiMaxNonPhysicalValidation","OPERATING_TEMPERATURE_VALIDATION","operatingTemperatureValidation","O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION","oringCrossSectionNominalValidation","O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION","oringIDNominalLargerThanMaxOringIDValidation","LESS_THAN_ZERO_VALIDATION","formLessThanZeroValidation","TOLERANCE_VALIDATION","toleranceValidation","ORING_ID_AS568A_STANDARD_WARNING","oRingIDAS568AStandardsWarning","setValidators","resetErroAndWarnings","resetCalculatedLabelValue","includes","GLAND_ANGLE_NOMINAL_VALIDATION","glandAngelNominalError","glandAngleNominalValidation","addClientErrors","GLAND_ANGLE_MIN_VALIDATION","glandAngelMinError","glandAngleMinValidation","GLAND_ANGLE_MAX_VALIDATION","glandAngelMaxError","glandAngleMaxValidation","O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION","oringCrossSectionNominalLessThanValidation","MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","minValueErrors","minValueValidation","MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION","maxValueErrors","maxValueValidation","glandAngleNominalWarning","addClientWarnings","glandAngleMinWarning","glandAngleMaxWarning","topRadiiNominalWarning","topRadiiMinWarning","topRadiiMaxWarning","bottomRadiiNominalWarning","bottomRadiiMinWarning","bottomRadiiMaxWarning","glandWidthNominalWarning","glandWidthMinWarning","glandWidthMaxWarning","invalid","createOringDovetail","resp","data","assign","slice","responseDataKeys","rowIndex","columnIndex","controlIndex","formControl","keyIndex","sub_type","calculated_label","outputIndex","form_output","temperatureCode","HEXA_DECIMAL_CODE","operatingTemperatureMin","operatingTemperatureNominal","operatingTemperatureMax","display_output_title","undefined","isNaN","setAuth","console","log","authenticate","pipe","r","selectedOption","showOrHideControlsBasedOnOption","generatePdf","formControlDefaultValue","getDefaultControlValueFromCalculatorJSONConfig","setValue","unitChangeSubscription","unit$","convertedForm","convertFormUnitControlValuesAndSet","onSubmit","Max","calculatedData","patchValue","materialChoiceControl","cte","getMaterialChoiceList","i","findIndex","c","isCalculatedDataExist","unsubscribe","val","selector","templateUrl","styleUrls","ORingDovetailGlandVacuumOnlyModule","declarations","providers","ORingDovetailGlandVacuumOnlyService","_http","baseUrl","settings","env","api","inputOption","unit","unitTemp","body","calculationType","ORING_SIZING","post"],"mappings":"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","file":"o-ring-dovetail-gland-vacuum-only-o-ring-dovetail-gland-vacuum-only-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ORingDovetailGlandVacuumOnlyComponent } from \"./o-ring-dovetail-gland-vacuum-only.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ORingDovetailGlandVacuumOnlyComponent, pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ORingDovetailGlandVacuumOnlyRoutingModule { }","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation, lessThanEqualValidation, largerThanEqualValidation } from \"../../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { MaterialChoiceModel } from '../../../models/material-choice.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { Temperature, Units, ErrorTypes, CalculatorOption } from '../../../shared/helpers/constants';\nimport { ErrorModel } from '../../../models/error.model';\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { MinValue } from \"../../../models/oring-dovetail-min.model\";\nimport { MaxValue } from \"../../../models/oring-dovetail-max.model\";\nimport { RadiiRecomendationNominal } from \"../../../models/radii-recomendation-nominal.model\";\nimport { RadiiRecomendationMin } from \"../../../models/radii-recomendation-min.model\";\nimport { RadiiRecomendationMax } from \"../../../models/radii-recomendation-max.model\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { IBottomRadiiWarningRanges } from '../../../models/Ibottom-radii-warning-ranges';\n\n// constants\nconst glandAngleClientValidationTitle = \"Gland Angle\";\nconst glandAngleRangeValidationMessage = \"For a dovetail gland, input ranges from 45 to 75 degrees though recommended gland angles are from 55-66 degrees. Please contact Greene Tweed engineering for further recommendations.\";\nconst glandWidthClientValidationTitle = \"Gland Width\";\nconst glandWidthClientValidationMessage = \"Inputs create a non-physical gland. Consider increasing Gland Width.\";\nconst bottomRadiiClientValidationTitle = \"Bottom Radii\";\nconst bottomRadiiNonPhysicalValidationMessage = \"Inputs create a non-physical gland. Consider reducing Bottom Radii to below 33% of Gland Depth.\";\nconst topRadiiClientValidationTitle = \"Top Radii\";\nconst topRadiiNonPhysicalValidationMessage = \"Inputs create a non-physical gland. Consider reducing Top Radius to below 13% of Gland Depth.\";\nconst glandAngleRecommendedGlandAngleWarningTitle = \"Gland Angle\";\nconst glandAngleRecommendedGlandAngleWarningMessage = \"For a dovetail gland, input ranges from 45 to 75 degrees though recommended gland angles are from 55-66 degrees. Please contact Greene Tweed engineering for further recommendations.\";\nconst topRadiiReduceLifeWarningTitle = \"Top Radii\";\nconst topRadiiReduceLifeWarningMessage = \"Gland inputs may reduce the lifetime of the seal. Consider reducing Top Radii to below 13% of Gland Depth.\";\nconst bottomRadiiReduceLifeWarningTitle = \"Bottom Radii\";\nconst bottomRadiiReduceLifeWarningMessage = \"Gland inputs may reduce the lifetime of the seal. Consider reducing Bottom Radii to below 33% of Gland Depth.\";\nconst glandWidthNoReliableWarningTitle = \"Gland Width\";\nconst glandWidthNoReliableWarningMessage = \"The gland fill calculations will be considered not reliable as the o-ring could not expand fully into the gland.\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingDovetailGlandVacuumOnlyValidationService {\n\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation/Errors *********************/\n  /************* That do not Prevent the form submission***************/\n  /********************************************************************/\n  // glandAngleNominal validation\n  glandAngleNominalValidation(control: FormGroup): ErrorModel {\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n    let error = null;\n\n    // glandAngleNominal\n    if (glandAngleNominalControl.value) {\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleNominalControl.value, \"44\", \"glandAngleNominal\", glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleNominalControl.value, \"76\", \"glandAngleNominal\", glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n\n    return error;\n  }\n\n  // gland angle min value validation\n  glandAngleMinValidation(control: FormGroup, option: string): ErrorModel {\n    let error: ErrorModel = null;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.Nominal) {\n      return null;\n    }\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(control);\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandAngleMinControlValue = control.get('glandAngleMin').value ? (+control.get('glandAngleMin').value) : null;\n    }\n\n    if (glandAngleMinControlValue) {\n      // min value validation\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"44\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleMinControlValue.toString(), \"76\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n\n    return error;\n  }\n\n  // gland angle max value validation\n  glandAngleMaxValidation(control: FormGroup, option: string): ErrorModel {\n    let error: ErrorModel = null;\n    let glandAngleMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.Nominal) {\n      return null;\n    }\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate max values\n      const maxValues: MaxValue = this.generateMaxValues(control);\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandAngleMaxControlValue = control.get('glandAngleMax').value ? (+control.get('glandAngleMax').value) : null;\n    }\n\n    if (glandAngleMaxControlValue) {\n      // max value validation\n      const lessThanEqual44Error = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"44\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      const largerThanEqual76Error = largerThanEqualValidation(glandAngleMaxControlValue.toString(), \"76\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleClientValidationTitle, glandAngleRangeValidationMessage);\n      if (lessThanEqual44Error || largerThanEqual76Error) {\n        error = lessThanEqual44Error || largerThanEqual76Error;\n      }\n    }\n    return error;\n  }\n\n  //  oringCrossSectionNominalLessThan vaidate\n  oringCrossSectionNominalLessThanValidation(control: FormGroup): ErrorModel {\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    let error = null;\n    if (oringCrossSectionNominalControl && glandDepthNominalControl && oringCrossSectionNominalControl.value && glandDepthNominalControl.value) {\n      const oringCrossSectionNominalLessThanError = lessThanValidation(oringCrossSectionNominalControl.value, glandDepthNominalControl.value, \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"O-ring Cross Section should greater than or equal to gland depth.\");\n      error = oringCrossSectionNominalLessThanError;\n    }\n    return error;\n  }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n\n  // glandWidthNominal limit validation\n  glandWidthNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n\n      // glandWidthNominal\n      if (radiiRecommendedNominalValues.w) {\n        error = lessThanValidation(radiiRecommendedNominalValues.w.toString(), \"0\", \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthNominalNonPhysicalGland\");\n      return error;\n    };\n  }\n\n  // glandWidth min value validation\n  glandWidthMinValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandWidthMinControl = control.get('glandWidthMin');\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      // min value validation\n      if (radiiRecommendedMinValues.wMin) {\n        error = lessThanValidation(radiiRecommendedMinValues.wMin.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"glandWidthMin\" : \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        // if (!glandWidthMinControl.errors) {\n        //   glandWidthMinControl.setErrors(error);\n        // }\n        this.helperService.setValidationErrorToFormControl(glandWidthMinControl, error, \"errorGlandWidthMinNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthMinNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // glandWidth max value validation\n  glandWidthMaxValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandWidthMaxControl = control.get('glandWidthMax');\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if (radiiRecommendedMaxValues.wMax) {\n        // max value validation\n        error = lessThanValidation(radiiRecommendedMaxValues.wMax.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"glandWidthMax\" : \"glandWidthNominal\", glandWidthClientValidationTitle, glandWidthClientValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        // if (!glandWidthMaxControl.errors) {\n        //   glandWidthMaxControl.setErrors(error);\n        // }\n        this.helperService.setValidationErrorToFormControl(glandWidthMaxControl, error, \"errorGlandWidthMaxNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(glandWidthNominalControl, error, \"errorGlandWidthMaxNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // bottomRadiiNominal limit validation\n  bottomRadiiShouldBeLessThanBottomRadiiMinLimit(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\n      const error = lessThanValidation(bottomRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, `Bottom Radii must have a minimum ${bottomRadiiMinLimit} ${currentSelectedUnit.display_Short_title} radius due to typical machining tolerance standards.`);\n      this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiShouldBeLessThanBottomRadiiMin\");\n      return error;\n    };\n  }\n\n  // bottom radii non physical validation\n  bottomRadiiNominalNonPhysicalGland(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel;\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n\n      if (bottomRadiiNominalControl.value && glandDepthNominalControl.value) {\n        if (radiiRecommendedNominalValues.h && radiiRecommendedNominalValues.bottomRadiiPercent) {\n          const radiiRecommendedNominalValuesHLessThanZeroError = lessThanValidation(radiiRecommendedNominalValues.h.toString(), \"0\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          const radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33 = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          const bottomRadiiErrorMaxRange = (33 / 100) * parseFloat(glandDepthNominalControl.value);\n          const radiiRecommendedNominalValuesBottomRadiiErrorMaxRangeError = largerThanValidation(bottomRadiiNominalControl.value, bottomRadiiErrorMaxRange.toString(), \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n          if (radiiRecommendedNominalValuesHLessThanZeroError || radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33 || radiiRecommendedNominalValuesBottomRadiiErrorMaxRangeError) {\n            error = radiiRecommendedNominalValuesHLessThanZeroError || radiiRecommendedNominalValuesBottomRadiiPercentGreaterThan33;\n          }\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiNominalNonPhysicalGland\");\n      return error;\n    };\n  }\n\n  // bottom radii min non physical validation\n  bottomRadiiMinNonPhysicalGland(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const bottomRadiiMinControl = control.get('bottomRadiiMin');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      if ((radiiRecommendedMinValues.hMin && radiiRecommendedMinValues.bottomRadiiMinPercent)) {\n        const radiiRecommendedMinValuesHMinLessThanZeroError = lessThanValidation(radiiRecommendedMinValues.hMin.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        const radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error = largerThanValidation(radiiRecommendedMinValues.bottomRadiiMinPercent.toString(), \"33\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        if (radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error) {\n          error = radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesBottomRadiiMinPercentLargerThan13Error;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMin\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMinControl, error, \"bottomRadiiMinNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiMinNonPhysicalGland\");\n      }\n\n      return error;\n    };\n  }\n\n  // bottom radii max non physical validation\n  bottomRadiiMaxNonPhysicalGland(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const bottomRadiiMaxControl = control.get('bottomRadiiMax');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n\n      const radiiRecommendedNominalValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(control);\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if ((radiiRecommendedMaxValues.hMax && radiiRecommendedMaxValues.bottomRadiiMaxPercent)) {\n        const radiiRecommendedMaxValuesHMaxLessThanZero = lessThanValidation(radiiRecommendedMaxValues.hMax.toString(), \"0\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        const radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error = largerThanValidation(radiiRecommendedMaxValues.bottomRadiiMaxPercent.toString(), \"33\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n        if (radiiRecommendedMaxValuesHMaxLessThanZero || radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error) {\n          error = radiiRecommendedMaxValuesHMaxLessThanZero || radiiRecommendedMaxValuesBottomRadiiMaxPercentGreaterThan33Error;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecommendedNominalValues.bottomRadiiPercent.toString(), \"52\", (+option) === CalculatorOption.WithMinMax ? \"bottomRadiiMax\" : \"bottomRadiiNominal\", bottomRadiiClientValidationTitle, bottomRadiiNonPhysicalValidationMessage, ErrorTypes.Error);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMaxControl, error, \"bottomRadiiMaxNonPhysicalGland\");\n      }\n      else {\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiMaxNonPhysicalGland\");\n      }\n      return error;\n    };\n  }\n\n  // topRadiiNominal limit validation\n  topRadiiNominalShouldBeLessThanBottomRadiiMinLimit(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\n      const error = lessThanValidation(topRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"topRadiiNominal\", topRadiiClientValidationTitle, `Top Radii must have a minimum ${bottomRadiiMinLimit} ${currentSelectedUnit.display_Short_title} radius due to typical machining tolerance standards.`);\n      if (!topRadiiNominalControl.errors) {\n        topRadiiNominalControl.setErrors(error);\n      }\n      return error;\n    };\n  }\n\n  // topRadiiNominal limit validation\n  topRadiiNominalNonPhysicalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      let largerThanValidationError = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n\n      if (topRadiiNominalControl.value && glandDepthNominalControl.value) {\n        const glandDepthNominalControlValidateValue = (parseFloat(glandDepthNominalControl.value) * 22 / 100).toString();\n        largerThanValidationError = largerThanValidation(topRadiiNominalControl.value, glandDepthNominalControlValidateValue, \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if (largerThanValidationError) {\n        error = { ...largerThanValidationError };\n      }\n\n      if (!error && (radiiRecomendationNominalValues.h && radiiRecomendationNominalValues.topRadiiPercent)) {\n        const radiiRecomendationNominalValuesHError = lessThanValidation(radiiRecomendationNominalValues.h.toString(), \"0\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecomendationNominalValuesTopRadiiPercentError = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"13\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        if (radiiRecomendationNominalValuesHError || radiiRecomendationNominalValuesTopRadiiPercentError) {\n          error = radiiRecomendationNominalValuesHError || radiiRecomendationNominalValuesTopRadiiPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if (!topRadiiNominalControl.errors) {\n        topRadiiNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // topRadii min value validation\n  topRadiiMinNonPhysicalValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const topRadiiMinControl = control.get('topRadiiMin');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n      const radiiRecommendedMinValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(control, option);\n\n      // min value validation\n      if (radiiRecommendedMinValues.hMin && radiiRecommendedMinValues.topRadiiMinPercent) {\n        const radiiRecommendedMinValuesHMinLessThanZeroError = lessThanValidation(radiiRecommendedMinValues.hMin.toString(), \"0\", \"topRadiiMin\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecommendedMinValuesTopRadiiMinPercentError = largerThanValidation(radiiRecommendedMinValues.topRadiiMinPercent.toString(), \"13\", \"topRadiiMin\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n\n        if (radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesTopRadiiMinPercentError) {\n          error = radiiRecommendedMinValuesHMinLessThanZeroError || radiiRecommendedMinValuesTopRadiiMinPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        if (!topRadiiMinControl.errors) {\n          topRadiiMinControl.setErrors(error);\n        }\n      }\n      else {\n        if (!topRadiiNominalControl.errors) {\n          topRadiiNominalControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // topRadii max value validation\n  topRadiiMaxNonPhysicalValidation(option: string): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const topRadiiMaxControl = control.get('topRadiiMax');\n      const radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n      const radiiRecommendedMaxValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(control, option);\n\n      if (radiiRecommendedMaxValues.hMax && radiiRecommendedMaxValues.topRadiiMaxPercent) {\n        const radiiRecommendedMinValuesHMaxLessThanZeroError = lessThanValidation(radiiRecommendedMaxValues.hMax.toString(), \"0\", \"topRadiiMax\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n        const radiiRecommendedMaxaluesTopRadiiMinPercentError = largerThanValidation(radiiRecommendedMaxValues.topRadiiMaxPercent.toString(), \"13\", \"topRadiiMax\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n\n        if (radiiRecommendedMinValuesHMaxLessThanZeroError || radiiRecommendedMaxaluesTopRadiiMinPercentError) {\n          error = radiiRecommendedMinValuesHMaxLessThanZeroError || radiiRecommendedMaxaluesTopRadiiMinPercentError;\n        }\n      }\n\n      if (!error) {\n        error = largerThanValidation(radiiRecomendationNominalValues.topRadiiPercent.toString(), \"22\", \"topRadiiNominal\", topRadiiClientValidationTitle, topRadiiNonPhysicalValidationMessage);\n      }\n\n      if ((+option) === CalculatorOption.WithMinMax) {\n        if (!topRadiiMaxControl.errors) {\n          topRadiiMaxControl.setErrors(error);\n        }\n      }\n      else {\n        if (!topRadiiNominalControl.errors) {\n          topRadiiNominalControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // operating temperture nominal validation\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  operatingTemperatureValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const materialCteNominalControl = control.get('materialCteNominal');\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\n      const operatingTemperatureMinControl = control.get('operatingTemperatureMin');\n      const operatingTemperatureMaxControl = control.get('operatingTemperatureMax');\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\n      let error = null;\n      if (materialCteNominalValue && materialCteNominalValue.maxtemp) {\n\n        let message = \"\";\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        else {\n          // default CELCIUS\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n\n        // Nominal temperature min and max validation\n        if (operatingTemperatureNominalControl.value) {\n          let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n          if (operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError) {\n            error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\n          }\n          operatingTemperatureNominalControl.setErrors(error);\n        }\n\n        // Min temperature min and max validation\n        if (operatingTemperatureMinControl.value) {\n          let operatingTemperatureMinInCelcius = operatingTemperatureMinControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMinInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMinControl.value).toFixed(2);\n          }\n\n          // Temperature min and max validation\n          const operatingTemperatureMinLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          const operatingTemperatureMinLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\n          if (operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError) {\n            error = operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError;\n          }\n          operatingTemperatureMinControl.setErrors(error);\n        }\n\n        // Max Temperature min and max validation\n        if (operatingTemperatureMaxControl.value) {\n          let operatingTemperatureMaxInCelcius = operatingTemperatureMaxControl.value;\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n            operatingTemperatureMaxInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMaxControl.value).toFixed(2);\n          }\n\n          // Nominal temperature min and max validation\n          const operatingTemperatureMaxLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          const operatingTemperatureMaxLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\n          if (operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError) {\n            error = operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError;\n          }\n          operatingTemperatureMaxControl.setErrors(error);\n        }\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // Function check O-ring cross section is in range or not else set error message\n  // replacement of checkCrossSection() function of existing angular 1 app\n  oringCrossSectionNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n\n        // check O-ring cross section is in range or not else set error message\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if (oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError) {\n          error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\n        }\n      }\n\n      if (!oringCrossSectionNominalControl.errors) {\n        oringCrossSectionNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // oRingId nominal validation\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\n      let error = null;\n      if (oringIdNominalControl && oringIdNominalControl.value) {\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\n\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"oringIDNominalLargerThanMaxOringID\");\n      }\n\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // less than zero validation\n  formLessThanZeroValidation(toolbarOptionkey: any): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error = null;\n      // get form controls key\n      const formControlKeys = Object.keys(control.controls);\n      // loop through the reactive form/formgroup controls \n      for (let index = 0; index < formControlKeys.length; index++) {\n        // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n        if (toolbarOptionkey === formControlKeys[index]) {\n          continue;\n        }\n\n        // skip gapNominal and operatingTemperatureNominal\n        if (formControlKeys[index] === \"gapNominal\" || formControlKeys[index] === \"gapTolerance\"\n          || formControlKeys[index] === \"gapMin\" || formControlKeys[index] === \"gapMax\"\n          || formControlKeys[index] === \"operatingTemperatureMin\"\n          || formControlKeys[index] === \"operatingTemperatureNominal\"\n          || formControlKeys[index] === \"operatingTemperatureMax\"\n        ) {\n          continue;\n        }\n\n        // any form control value is less than zero\n        const error = lessThanEqualValidation(control.controls[formControlKeys[index]].value, \"0\", formControlKeys[index], \"\", \"Input values should not be Zero or Negative, except Gap and Operating Temperature.\");\n\n        // set error to form control\n        const fc = control.get(formControlKeys[index]);\n        this.helperService.setValidationErrorToFormControl(fc, error, \"LessThanZeroValueError\");\n      }\n      return error;\n    };\n  }\n\n  // common validation function also exist in o-ring Internal Vacuum only calculator validation service\n  // tolrerance validation\n  toleranceValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let error: ErrorModel = null;\n      const msg = \"Tolerance value should not greater or equal to respective nominal value.\";\n      const glandWidthToleranceControl = control.get('glandWidthTolerance');\n      const glandWidthNominalControl = control.get('glandWidthNominal');\n      const glandDepthToleranceControl = control.get('glandDepthTolerance');\n      const glandDepthNominalControl = control.get('glandDepthNominal');\n      const glandAngleToleranceControl = control.get('glandAngleTolerance');\n      const glandAngleNominalControl = control.get('glandAngleNominal');\n      const topRadiiToleranceControl = control.get('topRadiiTolerance');\n      const topRadiiNominalControl = control.get('topRadiiNominal');\n      const bottomRadiiToleranceControl = control.get('bottomRadiiTolerance');\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n      const gapToleranceControl = control.get('gapTolerance');\n      const gapNominalControl = control.get('gapNominal');\n      const glandCenterlineToleranceControl = control.get('glandCenterlineTolerance');\n      const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n\n      if (glandWidthToleranceControl && glandWidthToleranceControl.value) {\n        error = largerThanEqualValidation(glandWidthToleranceControl.value, glandWidthNominalControl.value, \"glandWidthTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandWidthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandDepthToleranceControl && glandDepthToleranceControl.value) {\n        error = largerThanEqualValidation(glandDepthToleranceControl.value, glandDepthNominalControl.value, \"glandDepthTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandDepthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandAngleToleranceControl && glandAngleToleranceControl.value) {\n        error = largerThanEqualValidation(glandAngleToleranceControl.value, glandAngleNominalControl.value, \"glandAngleTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandAngleToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (topRadiiToleranceControl && topRadiiToleranceControl.value) {\n        error = largerThanEqualValidation(topRadiiToleranceControl.value, topRadiiNominalControl.value, \"topRadiiTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(topRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (bottomRadiiToleranceControl && bottomRadiiToleranceControl.value) {\n        error = largerThanEqualValidation(bottomRadiiToleranceControl.value, bottomRadiiNominalControl.value, \"bottomRadiiTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(bottomRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (gapToleranceControl.value != 0) {\n        error = largerThanEqualValidation(gapToleranceControl.value, gapNominalControl.value, \"gapTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(gapToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n\n      if (glandCenterlineToleranceControl && glandCenterlineToleranceControl.value) {\n        error = largerThanEqualValidation(glandCenterlineToleranceControl.value, glandCenterlineNominalControl.value, \"glandCenterlineTolerance\", \"\", msg);\n        this.helperService.setValidationErrorToFormControl(glandCenterlineToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\n      }\n      return error;\n    };\n  }\n\n\n\n  // orin id standard warning and prevent to submit the form\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let warning: ErrorModel = null;\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      if ((+currentSelectedUnit.id) === Units.INCH) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\n          (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n      }\n      this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"oRingIDAS568AStandards\");\n      return warning;\n    };\n  }\n\n\n  /********************************************************************/\n  /************** O-Ring - Internal Vacuum only Warnings **************/\n  /**************** that Doesn't prevent the form submission*****************/\n  /********************************************************************/\n\n  // glandAngleNominal warning\n  glandAngleNominalWarning(form: FormGroup): ErrorModel {\n    let error: ErrorModel = null;\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n\n    // glandAngleNominal\n    if (glandAngleNominalControl && glandAngleNominalControl.value) {\n      const glandAngleNominalError1 = largerThanEqualValidation(glandAngleNominalControl.value, \"45\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleNominalError2 = lessThanEqualValidation(glandAngleNominalControl.value, \"54\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleNominalError3 = largerThanValidation(glandAngleNominalControl.value, \"67\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleNominalError4 = lessThanEqualValidation(glandAngleNominalControl.value, \"75\", \"glandAngleNominal\", glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleNominalError1 && glandAngleNominalError2) || (glandAngleNominalError3 && glandAngleNominalError4)) {\n        error = glandAngleNominalError1 || glandAngleNominalError2 || glandAngleNominalError3 || glandAngleNominalError4;\n      }\n    }\n\n    return error;\n  }\n\n  // glandAngleMin\n  glandAngleMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandAngleMinControlValue = form.get('glandAngleMin').value ? (+form.get('glandAngleMin').value) : null;\n    }\n\n    if (glandAngleMinControlValue) {\n      const glandAngleMinWarning1 = largerThanEqualValidation(glandAngleMinControlValue.toString(), \"45\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMinWarning2 = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"54\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleMinWarning3 = largerThanValidation(glandAngleMinControlValue.toString(), \"67\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMinWarning4 = lessThanEqualValidation(glandAngleMinControlValue.toString(), \"75\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleMinWarning1 && glandAngleMinWarning2) || (glandAngleMinWarning3 && glandAngleMinWarning4)) {\n        warning = glandAngleMinWarning1 || glandAngleMinWarning2 || glandAngleMinWarning3 || glandAngleMinWarning4;\n      }\n    }\n    return warning;\n  }\n\n  // glandAngleMax\n  glandAngleMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandAngleMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandAngleMaxControlValue = form.get('glandAngleMax').value ? (+form.get('glandAngleMax').value) : null;\n    }\n\n    if (glandAngleMaxControlValue) {\n      const glandAngleMaxWarning1 = largerThanEqualValidation(glandAngleMaxControlValue.toString(), \"45\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMaxWarning2 = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"54\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      const glandAngleMaxWarning3 = largerThanValidation(glandAngleMaxControlValue.toString(), \"67\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n      const glandAngleMaxWarning4 = lessThanEqualValidation(glandAngleMaxControlValue.toString(), \"75\", (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), glandAngleRecommendedGlandAngleWarningTitle, glandAngleRecommendedGlandAngleWarningMessage, ErrorTypes.Warning);\n\n      if ((glandAngleMaxWarning1 && glandAngleMaxWarning2) || (glandAngleMaxWarning3 && glandAngleMaxWarning4)) {\n        warning = glandAngleMaxWarning1 || glandAngleMaxWarning2 || glandAngleMaxWarning3 || glandAngleMaxWarning4;\n      }\n    }\n    return warning;\n  }\n\n  // topRadiiNominal warning\n  topRadiiNominalWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiNominal\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n\n    const topRadiiNominalWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"topRadiiNominal\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiNominalWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiPercent.toString(), \"13\", \"topRadiiNominal\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.h && recommendedRadiiValues.topRadiiPercent && topRadiiNominalWarning1 && topRadiiNominalWarning2) {\n      warning = topRadiiNominalWarning1 || topRadiiNominalWarning2;\n    }\n\n    return warning;\n  }\n\n  // topRadiiMin\n  topRadiiMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiMin\n    const recommendedRadiiValues: RadiiRecomendationMin = this.generateRadiiRecomendationMin(form, option);\n\n    const topRadiiMinWarning1 = largerThanValidation(recommendedRadiiValues.hMin.toString(), \"0\", \"topRadiiMin\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiMinWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiMinPercent.toString(), \"13\", \"topRadiiMin\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.hMin && recommendedRadiiValues.topRadiiMinPercent && topRadiiMinWarning1 && topRadiiMinWarning2) {\n      warning = topRadiiMinWarning1 || topRadiiMinWarning2;\n    }\n    return warning;\n  }\n\n  // topRadiiMax\n  topRadiiMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    // topRadiiMax\n    const recommendedRadiiValues: RadiiRecomendationMax = this.generateRadiiRecomendationMax(form, option);\n\n    const topRadiiMaxWarning1 = largerThanValidation(recommendedRadiiValues.hMax.toString(), \"0\", \"topRadiiMax\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const topRadiiMaxWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiMaxPercent.toString(), \"13\", \"topRadiiMax\", topRadiiReduceLifeWarningTitle, topRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.hMax && recommendedRadiiValues.topRadiiMaxPercent && topRadiiMaxWarning1 && topRadiiMaxWarning2) {\n      warning = topRadiiMaxWarning1 || topRadiiMaxWarning2;\n    }\n    return warning;\n  }\n\n  // bottomRadiiNominal warning\n  bottomRadiiNominalWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // bottomRadiiNominal\n    const bottomRadiiNominalControlValue = form.get('bottomRadiiNominal').value;\n    const glandDepthNominalControlValue = form.get('glandDepthNominal').value;\n    const bottomRadiiRanges: IBottomRadiiWarningRanges = this.helperService.getBottomRadiiRange(glandDepthNominalControlValue);\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n\n    const bottomRadiiNominalWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalWarning2 = largerThanValidation(recommendedRadiiValues.topRadiiPercent.toString(), \"33\", \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiNominalRangeWarning1 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange1.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalRangeWarning2 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange1.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiNominalRangeWarning3 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange2.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiNominalRangeWarning4 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange2.toString(), \"bottomRadiiNominal\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (\n      (recommendedRadiiValues.h && recommendedRadiiValues.bottomRadiiPercent && bottomRadiiNominalWarning1 && bottomRadiiNominalWarning2)\n      || (bottomRadiiNominalRangeWarning1 && bottomRadiiNominalRangeWarning2)\n      || (bottomRadiiNominalRangeWarning3 && bottomRadiiNominalRangeWarning4)\n    ) {\n      warning = bottomRadiiNominalWarning1 || bottomRadiiNominalWarning2 || bottomRadiiNominalRangeWarning1 || bottomRadiiNominalRangeWarning2 || bottomRadiiNominalRangeWarning3 || bottomRadiiNominalRangeWarning4;\n    }\n\n    return warning;\n  }\n\n  // bottomRadiiMin\n  bottomRadiiMinWarning(form: FormGroup): ErrorModel {\n    let warning: ErrorModel = null;\n    // bottomRadiiMin\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n    const bottomRadiiMinWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiMin\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMinWarning2 = largerThanValidation(recommendedRadiiValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiMin\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (recommendedRadiiValues.h && recommendedRadiiValues.bottomRadiiPercent && bottomRadiiMinWarning1 && bottomRadiiMinWarning2) {\n      warning = bottomRadiiMinWarning1 || bottomRadiiMinWarning2;\n    }\n    return warning;\n  }\n\n  // bottomRadiiMax\n  bottomRadiiMaxWarning(form: FormGroup): ErrorModel {\n    // bottomRadiiNominal\n    const bottomRadiiNominalControlValue = form.get('bottomRadiiNominal').value;\n    let warning: ErrorModel = null;\n    // bottomRadiiMax\n    const recommendedRadiiValues: RadiiRecomendationNominal = this.generateRadiiRecomendationNominal(form);\n    const glandDepthNominalControlValue = form.get('glandDepthNominal').value;\n    const bottomRadiiRanges: IBottomRadiiWarningRanges = this.helperService.getBottomRadiiRange(glandDepthNominalControlValue);\n\n    const bottomRadiiMaxWarning1 = largerThanValidation(recommendedRadiiValues.h.toString(), \"0\", \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMaxWarning2 = largerThanValidation(recommendedRadiiValues.bottomRadiiPercent.toString(), \"33\", \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    const bottomRadiiMaxWarning3 = largerThanEqualValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMinRange1.toString(), \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n    const bottomRadiiMaxWarning4 = lessThanValidation(bottomRadiiNominalControlValue, bottomRadiiRanges.bottomRadiiWarningMaxRange1.toString(), \"bottomRadiiMax\", bottomRadiiReduceLifeWarningTitle, bottomRadiiReduceLifeWarningMessage, ErrorTypes.Warning);\n\n    if (\n      (\n        recommendedRadiiValues.h\n        && recommendedRadiiValues.bottomRadiiPercent\n        && bottomRadiiMaxWarning1\n        && bottomRadiiMaxWarning2)\n      || (bottomRadiiMaxWarning3 && bottomRadiiMaxWarning4)\n    ) {\n      warning = bottomRadiiMaxWarning1 || bottomRadiiMaxWarning2 || bottomRadiiMaxWarning3 || bottomRadiiMaxWarning4;\n    }\n    return warning;\n  }\n\n  // common warning also exist in other calculators\n  // gland width nominal warning\n  glandWidthNominalWarning(form: FormGroup): ErrorModel {\n    let error: ErrorModel = null;\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n    if (glandWidthNominalControl && glandWidthNominalControl.value && oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\n      const oringCrossSectionNominalControlValue = (1.2 * (+oringCrossSectionNominalControl.value)).toString();\n      error = largerThanValidation(glandWidthNominalControl.value, oringCrossSectionNominalControlValue, \"glandWidthNominal\", glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return error;\n  }\n\n  // common warning also exist in other calculators\n  // gland width min warning\n  glandWidthMinWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMinControlValue: number;\n\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n    }\n    else {\n      glandWidthMinControlValue = form.get('glandWidthMin').value ? (+form.get('glandWidthMin').value) : null;\n    }\n\n    if (glandWidthMinControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.2 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMinControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  // gland width max warning\n  glandWidthMaxWarning(form: FormGroup, option: string): ErrorModel {\n    let warning: ErrorModel = null;\n    let glandWidthMaxControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n    }\n    else {\n      glandWidthMaxControlValue = form.get('glandWidthMax').value ? (+form.get('glandWidthMax').value) : null;\n    }\n    if (glandWidthMaxControlValue) {\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\n      const oringCrossSectionNominalControlValue = (1.2 * +(oringCrossSectionNominalControl.value)).toString();\n      warning = largerThanValidation(glandWidthMaxControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\n    }\n    return warning;\n  }\n\n  minValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Min values should be less or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const topRadiiNominalControl = control.get('topRadiiNominal');\n    const gapNominalControl = control.get('gapNominal');\n    const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n\n    let glandWidthMinControlValue: number;\n    let glandDepthMinControlValue: number;\n    let bottomRadiiMinControlValue: number;\n    let topRadiiMinControlValue: number;\n    let gapMinControlValue: number;\n    let glandCenterlineMinControlValue: number;\n    let glandAngleMinControlValue: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(control);\n      glandWidthMinControlValue = minValues.glandWidthMin;\n      glandDepthMinControlValue = minValues.glandDepthMin;\n      bottomRadiiMinControlValue = minValues.bottomRadiiMin;\n      topRadiiMinControlValue = minValues.topRadiiMin;\n      gapMinControlValue = minValues.gapMin;\n      glandCenterlineMinControlValue = minValues.glandCenterlineMin;\n      glandAngleMinControlValue = minValues.glandAngleMin;\n    }\n    else {\n      glandWidthMinControlValue = control.get('glandWidthMin').value ? (+control.get('glandWidthMin').value) : null;\n      glandDepthMinControlValue = control.get('glandDepthMin').value ? (+control.get('glandDepthMin').value) : null;\n      bottomRadiiMinControlValue = control.get('bottomRadiiMin').value ? (+control.get('bottomRadiiMin').value) : null;\n      topRadiiMinControlValue = control.get('topRadiiMin').value ? (+control.get('topRadiiMin').value) : null;\n      gapMinControlValue = control.get('gapMin').value ? (+control.get('gapMin').value) : null;\n      glandCenterlineMinControlValue = control.get('glandCenterlineMin').value ? (+control.get('glandCenterlineMin').value) : null;\n      glandAngleMinControlValue = control.get('glandAngleMin').value ? (+control.get('glandAngleMin').value) : null;\n    }\n\n    // min value validation\n    if (glandWidthMinControlValue) {\n      const error1 = largerThanValidation(glandWidthMinControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMinControlValue) {\n      const error2 = largerThanValidation(glandDepthMinControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMin\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMinControlValue) {\n      const error3 = largerThanValidation(bottomRadiiMinControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMin\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMinControlValue) {\n      const error4 = largerThanValidation(gapMinControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMin\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (topRadiiMinControlValue) {\n      const error5 = largerThanValidation(topRadiiMinControlValue.toString(), topRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"topRadiiTolerance\" : \"topRadiiMin\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n\n    if (glandCenterlineMinControlValue) {\n      const error6 = largerThanValidation(glandCenterlineMinControlValue.toString(), glandCenterlineNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandCenterlineTolerance\" : \"glandCenterlineMin\"), \"\", msg);\n      if (error6) {\n        errors.push(error6);\n      }\n    }\n\n    if (glandAngleMinControlValue) {\n      const error7 = largerThanValidation(glandAngleMinControlValue.toString(), glandAngleNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMin\"), \"\", msg);\n      if (error7) {\n        errors.push(error7);\n      }\n    }\n    return errors;\n  }\n\n  maxValueValidation(control: FormGroup, option: string): ErrorModel[] {\n    let errors: ErrorModel[] = [];\n    const msg = \"Max value should be greater or equal to nominal value.\";\n\n    const glandWidthNominalControl = control.get('glandWidthNominal');\n    const glandDepthNominalControl = control.get('glandDepthNominal');\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\n    const topRadiiNominalControl = control.get('topRadiiNominal');\n    const gapNominalControl = control.get('gapNominal');\n    const glandCenterlineNominalControl = control.get('glandCenterlineNominal');\n    const glandAngleNominalControl = control.get('glandAngleNominal');\n\n\n    let glandWidthMaxControlValue: number;\n    let glandDepthMaxControlValue: number;\n    let bottomRadiiMaxControlValue: number;\n    let topRadiiMaxControlValue: number;\n    let gapMaxControlValue: number;\n    let glandCenterlineMaxControlValue: number;\n    let glandAngleMaxControlValue: number;\n\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate max values\n      const maxValues: MaxValue = this.generateMaxValues(control);\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\n      glandDepthMaxControlValue = maxValues.glandDepthMax;\n      bottomRadiiMaxControlValue = maxValues.bottomRadiiMax;\n      topRadiiMaxControlValue = maxValues.topRadiiMax;\n      gapMaxControlValue = maxValues.gapMax;\n      glandCenterlineMaxControlValue = maxValues.glandCenterlineMax;\n      glandAngleMaxControlValue = maxValues.glandAngleMax;\n    }\n    else {\n      glandWidthMaxControlValue = control.get('glandWidthMax').value ? (+control.get('glandWidthMax').value) : null;\n      glandDepthMaxControlValue = control.get('glandDepthMax').value ? (+control.get('glandDepthMax').value) : null;\n      bottomRadiiMaxControlValue = control.get('bottomRadiiMax').value ? (+control.get('bottomRadiiMax').value) : null;\n      topRadiiMaxControlValue = control.get('topRadiiMax').value ? (+control.get('topRadiiMax').value) : null;\n      gapMaxControlValue = control.get('gapMax').value ? (+control.get('gapMax').value) : null;\n      glandCenterlineMaxControlValue = control.get('glandCenterlineMax').value ? (+control.get('glandCenterlineMax').value) : null;\n      glandAngleMaxControlValue = control.get('glandAngleMax').value ? (+control.get('glandAngleMax').value) : null;\n    }\n\n    // max value validation\n    if (glandWidthMaxControlValue) {\n      const error1 = lessThanValidation(glandWidthMaxControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), \"\", msg);\n      if (error1) {\n        errors.push(error1);\n      }\n    }\n\n    if (glandDepthMaxControlValue) {\n      const error2 = lessThanValidation(glandDepthMaxControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMax\"), \"\", msg);\n      if (error2) {\n        errors.push(error2);\n      }\n    }\n\n    if (bottomRadiiMaxControlValue) {\n      const error3 = lessThanValidation(bottomRadiiMaxControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMax\"), \"\", msg);\n      if (error3) {\n        errors.push(error3);\n      }\n    }\n\n    if (gapMaxControlValue) {\n      const error4 = lessThanValidation(gapMaxControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMax\"), \"\", msg);\n      if (error4) {\n        errors.push(error4);\n      }\n    }\n\n    if (topRadiiMaxControlValue) {\n      const error5 = lessThanValidation(topRadiiMaxControlValue.toString(), topRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"topRadiiTolerance\" : \"topRadiiMax\"), \"\", msg);\n      if (error5) {\n        errors.push(error5);\n      }\n    }\n\n    if (glandCenterlineMaxControlValue) {\n      const error6 = lessThanValidation(glandCenterlineMaxControlValue.toString(), glandCenterlineNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandCenterlineTolerance\" : \"glandCenterlineMax\"), \"\", msg);\n      if (error6) {\n        errors.push(error6);\n      }\n    }\n\n    if (glandAngleMaxControlValue) {\n      const error7 = lessThanValidation(glandAngleMaxControlValue.toString(), glandAngleNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandAngleTolerance\" : \"glandAngleMax\"), \"\", msg);\n      if (error7) {\n        errors.push(error7);\n      }\n    }\n    return errors;\n  }\n\n  //  Helper methods\n  // generate min values when option is Tolerance\n  generateMinValues(form: FormGroup): MinValue {\n    let minValue: MinValue = new MinValue();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n    const glandAngleToleranceControl = form.get('glandAngleTolerance');\n    const topRadiiNominalControl = form.get('topRadiiNominal');\n    const topRadiiToleranceControl = form.get('topRadiiTolerance');\n    const glandCenterlineNominalControl = form.get('glandCenterlineNominal');\n    const glandCenterlineToleranceControl = form.get('glandCenterlineTolerance');\n\n    minValue.glandWidthMin = (parseFloat(glandWidthNominalControl.value) - parseFloat(glandWidthToleranceControl.value));\n    minValue.glandDepthMin = (parseFloat(glandDepthNominalControl.value) - parseFloat(glandDepthToleranceControl.value));\n    minValue.glandAngleMin = (parseFloat(glandAngleNominalControl.value) - parseFloat(glandAngleToleranceControl.value));\n    minValue.bottomRadiiMin = (parseFloat(bottomRadiiNominalControl.value) - parseFloat(bottomRadiiToleranceControl.value));\n    minValue.topRadiiMin = (parseFloat(topRadiiNominalControl.value) - parseFloat(topRadiiToleranceControl.value));\n    minValue.gapMin = (parseFloat(gapNominalControl.value) - parseFloat(gapToleranceControl.value));\n    minValue.glandCenterlineMin = (parseFloat(glandCenterlineNominalControl.value) - parseFloat(glandCenterlineToleranceControl.value));\n    return minValue;\n  }\n\n  // generate max values when option is Tolerance\n  generateMaxValues(form: FormGroup): MaxValue {\n    let maxValue: MaxValue = new MaxValue();\n    const glandWidthNominalControl = form.get('glandWidthNominal');\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\n    const glandDepthNominalControl = form.get('glandDepthNominal');\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\n    const gapNominalControl = form.get('gapNominal');\n    const gapToleranceControl = form.get('gapTolerance');\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\n    const glandAngleNominalControl = form.get('glandAngleNominal');\n    const glandAngleToleranceControl = form.get('glandAngleTolerance');\n    const topRadiiNominalControl = form.get('topRadiiNominal');\n    const topRadiiToleranceControl = form.get('topRadiiTolerance');\n    const glandCenterlineNominalControl = form.get('glandCenterlineNominal');\n    const glandCenterlineToleranceControl = form.get('glandCenterlineTolerance');\n\n    maxValue.glandWidthMax = (parseFloat(glandWidthNominalControl.value) + parseFloat(glandWidthToleranceControl.value));\n    maxValue.glandDepthMax = (parseFloat(glandDepthNominalControl.value) + parseFloat(glandDepthToleranceControl.value));\n    maxValue.glandAngleMax = (parseFloat(glandAngleNominalControl.value) + parseFloat(glandAngleToleranceControl.value));\n    maxValue.bottomRadiiMax = (parseFloat(bottomRadiiNominalControl.value) + parseFloat(bottomRadiiToleranceControl.value));\n    maxValue.topRadiiMax = (parseFloat(topRadiiNominalControl.value) + parseFloat(topRadiiToleranceControl.value));\n    maxValue.gapMax = (parseFloat(gapNominalControl.value) + parseFloat(gapToleranceControl.value));\n    maxValue.glandCenterlineMax = (parseFloat(glandCenterlineNominalControl.value) + parseFloat(glandCenterlineToleranceControl.value));\n    return maxValue;\n  }\n\n  // radii recommended values for nominal\n  generateRadiiRecomendationNominal(form: FormGroup): RadiiRecomendationNominal {\n    let radiiRecomendationNominalValues: RadiiRecomendationNominal = new RadiiRecomendationNominal();\n\n    const glandDepthNominal = parseFloat(form.get('glandDepthNominal').value);\n    const glandWidthNominal = parseFloat(form.get('glandWidthNominal').value);\n    const topRadiiNominal = parseFloat(form.get('topRadiiNominal').value);\n    const bottomRadiiNominal = parseFloat(form.get('bottomRadiiNominal').value);\n    const glandAngleNominal = parseFloat(form.get('glandAngleNominal').value);\n\n    if (glandDepthNominal >= 0 && glandWidthNominal >= 0 && topRadiiNominal >= 0 && bottomRadiiNominal >= 0 && glandAngleNominal >= 0) {\n      radiiRecomendationNominalValues.h = glandDepthNominal - (topRadiiNominal + bottomRadiiNominal) * (1 + Math.sin((90 - glandAngleNominal) * Math.PI / 180));\n      radiiRecomendationNominalValues.w = (glandWidthNominal / 2) + glandDepthNominal / Math.tan(glandAngleNominal * Math.PI / 180) - bottomRadiiNominal / Math.tan((glandAngleNominal / 2) * Math.PI / 180);\n      radiiRecomendationNominalValues.bottomRadiiPercent = Math.round((bottomRadiiNominal / glandDepthNominal) * 100);\n      radiiRecomendationNominalValues.topRadiiPercent = Math.round((topRadiiNominal / glandDepthNominal) * 100);\n    }\n\n    return radiiRecomendationNominalValues;\n  }\n\n  // radii recommended values for min\n  generateRadiiRecomendationMin(form: FormGroup, option: string): RadiiRecomendationMin {\n    let radiiRecomendationMinValues: RadiiRecomendationMin = new RadiiRecomendationMin();\n    let glandDepthMin: number;\n    let glandWidthMin: number;\n    let topRadiiMin: number;\n    let bottomRadiiMin: number;\n    let glandAngleMin: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const minValues: MinValue = this.generateMinValues(form);\n      glandDepthMin = minValues.glandDepthMin;\n      glandWidthMin = minValues.glandWidthMin;\n      topRadiiMin = minValues.topRadiiMin;\n      bottomRadiiMin = minValues.bottomRadiiMin;\n      glandAngleMin = minValues.glandAngleMin;\n    }\n    else {\n      glandDepthMin = parseFloat(form.get('glandDepthMin').value);\n      glandWidthMin = parseFloat(form.get('glandWidthMin').value);\n      topRadiiMin = parseFloat(form.get('topRadiiMin').value);\n      bottomRadiiMin = parseFloat(form.get('bottomRadiiMin').value);\n      glandAngleMin = parseFloat(form.get('glandAngleMin').value);\n    }\n\n\n    if (glandDepthMin >= 0 && glandWidthMin >= 0 && topRadiiMin >= 0 && bottomRadiiMin >= 0 && glandAngleMin >= 0) {\n      radiiRecomendationMinValues.hMin = glandDepthMin - (topRadiiMin + bottomRadiiMin) * (1 + Math.sin((90 - glandAngleMin) * Math.PI / 180));\n      radiiRecomendationMinValues.wMin = (glandWidthMin / 2) + glandDepthMin / Math.tan(glandAngleMin * Math.PI / 180) - bottomRadiiMin / Math.tan((glandAngleMin / 2) * Math.PI / 180);\n      radiiRecomendationMinValues.bottomRadiiMinPercent = Math.round((bottomRadiiMin / glandDepthMin) * 100);\n      radiiRecomendationMinValues.topRadiiMinPercent = Math.round((topRadiiMin / glandDepthMin) * 100);\n    }\n    return radiiRecomendationMinValues;\n  }\n\n  // radii recommended values for max\n  generateRadiiRecomendationMax(form: FormGroup, option: string): RadiiRecomendationMax {\n    let radiiRecomendationMaxValues: RadiiRecomendationMax = new RadiiRecomendationMax();\n    let glandDepthMax: number;\n    let glandWidthMax: number;\n    let topRadiiMax: number;\n    let bottomRadiiMax: number;\n    let glandAngleMax: number;\n\n    if ((+option) === CalculatorOption.WithTolerance) {\n      // generate min values\n      const maxValues: MaxValue = this.generateMaxValues(form);\n      glandDepthMax = maxValues.glandDepthMax;\n      glandWidthMax = maxValues.glandWidthMax;\n      topRadiiMax = maxValues.topRadiiMax;\n      bottomRadiiMax = maxValues.bottomRadiiMax;\n      glandAngleMax = maxValues.glandAngleMax;\n    }\n    else {\n      glandDepthMax = parseFloat(form.get('glandDepthMax').value);\n      glandWidthMax = parseFloat(form.get('glandWidthMax').value);\n      topRadiiMax = parseFloat(form.get('topRadiiMax').value);\n      bottomRadiiMax = parseFloat(form.get('bottomRadiiMax').value);\n      glandAngleMax = parseFloat(form.get('glandAngleMax').value);\n    }\n\n    if (glandDepthMax >= 0 && glandWidthMax >= 0 && topRadiiMax >= 0 && bottomRadiiMax >= 0 && glandAngleMax >= 0) {\n      radiiRecomendationMaxValues.hMax = glandDepthMax - (topRadiiMax + bottomRadiiMax) * (1 + Math.sin((90 - glandAngleMax) * Math.PI / 180));\n      radiiRecomendationMaxValues.wMax = (glandWidthMax / 2) + glandDepthMax / Math.tan(glandAngleMax * Math.PI / 180) - bottomRadiiMax / Math.tan((glandAngleMax / 2) * Math.PI / 180);\n      radiiRecomendationMaxValues.bottomRadiiMaxPercent = Math.round((bottomRadiiMax / glandDepthMax) * 100);\n      radiiRecomendationMaxValues.topRadiiMaxPercent = Math.round((topRadiiMax / glandDepthMax) * 100);\n    }\n\n    return radiiRecomendationMaxValues;\n  }\n}\n","// core imports\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../../models/calculator.model\";\nimport { FormControlModel } from '../../../models/form-control.model';\nimport { FormColumnModel } from '../../../models/form-column.model';\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ErrorModel } from '../../../models/error.model';\nimport { BaseModel } from '../../../models/base.model';\nimport { RectangularORingCalcService } from \"../rectangular-o-ring-calc.service\";\nimport { AuthService } from \"../../../shared/services/auth.service\";\nimport { ControlType, Units, CalculatorOption, ControlSubType, ORingTool_DovetailGlandVacuumOnly_Validators, Temperature, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../../shared/services/control-base.service\";\nimport { PrintService } from \"../../../shared/services/print.service\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\nimport { ORingDovetailGlandVacuumOnlyService } from \"./o-ring-dovetail-gland-vacuum-only.service\";\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { CalculatorToolbarService } from \"../../../shared/components/calculator-toolbar/calculator-toolbar.service\";\n\n@Component({\n  selector: 'app-o-ring-dovetail-gland-vacuum-only',\n  templateUrl: './o-ring-dovetail-gland-vacuum-only.component.html',\n  styleUrls: ['./o-ring-dovetail-gland-vacuum-only.component.css']\n})\nexport class ORingDovetailGlandVacuumOnlyComponent implements OnInit, OnDestroy {\n  calculatorConfig: CalculatorModel;\n  dovetailGlandForm: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted: Boolean = false;\n  payLoad = '';\n  bottomRadiiMaxLimit: number = 0.035;\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  isShowPasteBtn: Boolean = false;\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  oRingDataSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n  temperatureChangeSubscription: Subscription;\n\n  constructor(\n    private controlBaseService: ControlBaseService,\n    private authService: AuthService,\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private printService: PrintService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService,\n    private oRingDovetailGlandVacuumOnlyValidationService: ORingDovetailGlandVacuumOnlyValidationService,\n    private oRingDovetailGlandVacuumOnlyService: ORingDovetailGlandVacuumOnlyService,\n    private helperService: HelperService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) {\n\n    // get o-ring-dovetail-gland-vacuum-only config value from O-Ring JSON \n    const rectangleJSONConfig = this.rectangularORingCalcService.getCurrentORingConfigValue;\n\n    // o-ring calculator config subscription\n    if (rectangleJSONConfig) {\n      this.initializeOringConfig(rectangleJSONConfig);\n    }\n    else {\n      this.oRingDataSubscription = this.rectangularORingCalcService.oRingConfig$.subscribe((x: BaseModel) => {\n        if (x) {\n          this.initializeOringConfig(x);\n        }\n      });\n    }\n\n    // unit change update calculator values handler\n    this.onUnitChangeUpdateCalculator();\n    this.onTemperatureChangeUpdateCalculator();\n\n    // onPaste event subscription\n    this.calculatorToolbarService.paste.subscribe((d: any) => {\n      if (d) {\n        this.onPaste(d);\n      }\n    });\n  }\n\n  // initialize o-ring-dovetail-gland-vacuum-only calculator by json config param\n  private initializeOringConfig(oRingJsonConfig: BaseModel) {\n    // calculator - o-ring-dovetail-gland-vacuum-only\n    const oRingDovetailGlandVacuumOnly = { ...oRingJsonConfig.calculators[1] };\n    this.calculatorConfig = oRingDovetailGlandVacuumOnly;\n    // send calculator to dynamic form service\n    this.dynamicFormTwoColumnLayoutService.sendCalculator(oRingDovetailGlandVacuumOnly);\n    // create form\n    this.createForm();\n    // show or hide form controls\n    this.onOptionChange(+this.calculatorConfig.toolbarOption.value);\n    this.setShowPasteBtnFlag();\n  }\n\n  // onInit event of component\n  ngOnInit(): void {\n    this.onReset();\n    this.CalculatedData = {};\n    this.setShowPasteBtnFlag();\n  }\n\n  // temperature change update output values handler\n  onTemperatureChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.resetFormAndCalculation();\n      }\n    });\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.dovetailGlandForm\n      && this.dovetailGlandForm.controls[fieldName]\n      && this.dovetailGlandForm.controls[fieldName].value) {\n      return (+this.dovetailGlandForm.controls[fieldName].value).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3);\n    }\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.dovetailGlandForm) {\n            const fc = this.dovetailGlandForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row?.map(row =>\n      row.form_layout_columns?.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.dovetailGlandForm) {\n            const fc = this.dovetailGlandForm.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.dovetailGlandForm = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_NOMINAL_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthNominalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_MIN_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMinValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_WIDTH_MAX_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMaxValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiShouldBeLessThanBottomRadiiMinLimit());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiNominalNonPhysicalGland());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMinNonPhysicalGland(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.BOTTOM_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMaxNonPhysicalGland(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalShouldBeLessThanBottomRadiiMinLimit());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_NOMINAL_NON_PHYSICAL_GLAND_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalNonPhysicalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_MIN_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMinNonPhysicalValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOP_RADII_MAX_NON_PHYSICAL_GLAND_VALIDATION:\n          if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMaxNonPhysicalValidation(this.calculatorConfig.toolbarOption.value));\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.OPERATING_TEMPERATURE_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.operatingTemperatureValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_CROSS_SECTION_NOMINAL_STADARD_AS568A_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oringCrossSectionNominalValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oringIDNominalLargerThanMaxOringIDValidation());\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.LESS_THAN_ZERO_VALIDATION:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.formLessThanZeroValidation(this.calculatorConfig.toolbarOption.key));\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.TOLERANCE_VALIDATION:\n          // apply validation only when Tolerance option selected\n          if ((+this.calculatorConfig.toolbarOption.value) === CalculatorOption.WithTolerance) {\n            validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.toleranceValidation());\n          }\n          break;\n        case ORingTool_DovetailGlandVacuumOnly_Validators.ORING_ID_AS568A_STANDARD_WARNING:\n          validations.push(this.oRingDovetailGlandVacuumOnlyValidationService.oRingIDAS568AStandardsWarning());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.dovetailGlandForm.setValidators(validations);\n  }\n\n  // form submit event\n  onSubmit(isSubmitted = false) {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig || !this.calculatorConfig.form) {\n      return;\n    }\n\n    // this.payLoad = this.dovetailGlandForm.value;\n    this.isSubmitted = isSubmitted;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandAngle nominal validation\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_NOMINAL_VALIDATION)) {\n      const glandAngelNominalError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleNominalValidation(this.dovetailGlandForm);\n      if (glandAngelNominalError) {\n        this.addClientErrors(glandAngelNominalError);\n      }\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      // glandAngle min validation\n      if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_MIN_VALIDATION)) {\n        const glandAngelMinError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMinValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n        if (glandAngelMinError) {\n          this.addClientErrors(glandAngelMinError);\n        }\n      }\n\n      // glandAngle max validation\n      if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.GLAND_ANGLE_MAX_VALIDATION)) {\n        const glandAngelMaxError = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMaxValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n        if (glandAngelMaxError) {\n          this.addClientErrors(glandAngelMaxError);\n        }\n      }\n    }\n\n    // if validation key O_RING_CROSS_SECTION_VALIDATION exist \n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION)) {\n      const oringCrossSectionNominalLessThanError = this.oRingDovetailGlandVacuumOnlyValidationService.oringCrossSectionNominalLessThanValidation(this.dovetailGlandForm);\n      if (oringCrossSectionNominalLessThanError) {\n        this.addClientErrors(oringCrossSectionNominalLessThanError);\n      }\n    }\n\n    // min value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const minValueErrors: ErrorModel[] = this.oRingDovetailGlandVacuumOnlyValidationService.minValueValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (minValueErrors.length > 0) {\n        for (let index = 0; index < minValueErrors.length; index++) {\n          this.addClientErrors(minValueErrors[index]);\n        }\n      }\n    }\n\n    // max value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_DovetailGlandVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const maxValueErrors: ErrorModel[] = this.oRingDovetailGlandVacuumOnlyValidationService.maxValueValidation(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (maxValueErrors.length > 0) {\n        for (let index = 0; index < maxValueErrors.length; index++) {\n          this.addClientErrors(maxValueErrors[index]);\n        }\n      }\n    }\n\n    // warnings\n    // glandAngle warnings\n    const glandAngleNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleNominalWarning(this.dovetailGlandForm);\n    if (glandAngleNominalWarning) {\n      this.addClientWarnings(glandAngleNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandAngleMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandAngleMinWarning) {\n        this.addClientWarnings(glandAngleMinWarning);\n      }\n\n      const glandAngleMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandAngleMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandAngleMaxWarning) {\n        this.addClientWarnings(glandAngleMaxWarning);\n      }\n    }\n\n    // topRadii warnings\n    const topRadiiNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiNominalWarning(this.dovetailGlandForm);\n    if (topRadiiNominalWarning) {\n      this.addClientWarnings(topRadiiNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const topRadiiMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (topRadiiMinWarning) {\n        this.addClientWarnings(topRadiiMinWarning);\n      }\n\n      const topRadiiMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.topRadiiMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (topRadiiMaxWarning) {\n        this.addClientWarnings(topRadiiMaxWarning);\n      }\n    }\n\n    // bottomRadii warnings\n    const bottomRadiiNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiNominalWarning(this.dovetailGlandForm);\n    if (bottomRadiiNominalWarning) {\n      this.addClientWarnings(bottomRadiiNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const bottomRadiiMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMinWarning(this.dovetailGlandForm);\n      if (bottomRadiiMinWarning) {\n        this.addClientWarnings(bottomRadiiMinWarning);\n      }\n\n      const bottomRadiiMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.bottomRadiiMaxWarning(this.dovetailGlandForm);\n      if (bottomRadiiMaxWarning) {\n        this.addClientWarnings(bottomRadiiMaxWarning);\n      }\n    }\n\n    // glandWidth warnings\n    const glandWidthNominalWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthNominalWarning(this.dovetailGlandForm);\n    if (glandWidthNominalWarning) {\n      this.addClientWarnings(glandWidthNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandWidthMinWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMinWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      const glandWidthMaxWarning = this.oRingDovetailGlandVacuumOnlyValidationService.glandWidthMaxWarning(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value);\n      if (glandWidthMinWarning) {\n        this.addClientWarnings(glandWidthMinWarning);\n      }\n      if (glandWidthMaxWarning) {\n        this.addClientWarnings(glandWidthMaxWarning);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (this.dovetailGlandForm.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.oRingDovetailGlandVacuumOnlyService.createOringDovetail(this.dovetailGlandForm, this.calculatorConfig.toolbarOption.value, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((resp: any) => {\n      if (resp.data) {\n        // set CalculatedData\n        // this will set the graph data also\n        this.CalculatedData = Object.assign({}, resp.data);\n\n        if (resp.data.error && resp.data.error.length > 0) {\n          // copy the array for change detection\n          this.serverErrors = resp.data.error.slice();\n        }\n        if (resp.data.warning && resp.data.warning.length > 0) {\n          // copy the array for change detection\n          this.serverWarnings = resp.data.warning.slice();\n        }\n\n        const responseDataKeys = Object.keys(resp.data);\n\n        // when tolerance or minAndmax option is selected than also bind calculated labels received after calculation\n        if (CalculatorOption.Nominal !== +(this.calculatorConfig.toolbarOption.value)) {\n\n          // Bind left form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n\n          // Bind right form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Bind output form data\n        // loop through each output\n        for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n\n          // set output title of operating temperature label\n          if (outputIndex > 0) {\n            const temperatureCode = ((+this.temperatureButtonService.getCurrentTemperatureValue.id) === Temperature.FAHRENHEIT) ? TemperatureFahrenheitCode.HEXA_DECIMAL_CODE : TemperatureCelsiusCode.HEXA_DECIMAL_CODE;\n\n            const operatingTemperatureMin = this.dovetailGlandForm.controls[\"operatingTemperatureMin\"];\n            const operatingTemperatureNominal = this.dovetailGlandForm.controls[\"operatingTemperatureNominal\"];\n            const operatingTemperatureMax = this.dovetailGlandForm.controls[\"operatingTemperatureMax\"];\n\n            // operating temperature min\n            if (outputIndex === 1 && operatingTemperatureMin && operatingTemperatureMin.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMin.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 1) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature nominal\n            if (outputIndex === 2 && operatingTemperatureNominal && operatingTemperatureNominal.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureNominal.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 2) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n\n            // operating temperature max\n            if (outputIndex === 3 && operatingTemperatureMax && operatingTemperatureMax.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMax.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 3) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n          }\n\n          // loop through rows\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}%`;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // reset auth token \n        this.setAuth();\n      }\n    }, (error: any) => {\n      // reset auth token \n      this.setAuth();\n      // TODO: show error if any\n      console.log(error);\n    });\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    // copy the array for change detection\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    // copy the array for change detection\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // option nominal, tolerance and (min and max) change handler\n  onOptionChange(selectedOption: number) {\n    // show or hide controls based on options\n    this.dynamicFormTwoColumnLayoutService.showOrHideControlsBasedOnOption(selectedOption);\n    // update form submission status\n    this.isSubmitted = false;\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n    // create form\n    this.createForm();\n    this.setShowPasteBtnFlag();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \" %\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"dovetailGland\");\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.dovetailGlandForm) {\n      return;\n    }\n\n    // get form controls key\n    const formControlKeys = Object.keys(this.dovetailGlandForm.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n      if (this.calculatorConfig.toolbarOption.key === formControlKeys[index]) {\n        continue;\n      }\n\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.dovetailGlandForm.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.dovetailGlandForm.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset glandsize rectangle-internal-vacuum-only JSON config data\n    // const responseDataKeys = Object.keys(this.CalculatedData);\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n          // }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          // get fields key from resp data\n          // const responseDataKeys = Object.keys(resp.data);\n          // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n          // }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            // const responseDataKeys = Object.keys(resp.data);\n            // for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `%`;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    // reset calculated data received after calculation\n    this.CalculatedData = {};\n  }\n\n  // unit change update output values handler\n  onUnitChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      // reset \n      this.resetFormAndCalculation();\n\n      if (x) {\n        if (x.id === Units.MILLI_METER) {\n          // millimeter\n          this.bottomRadiiMaxLimit = 0.89; //0.035 * 25.40;\n        }\n        else {\n          // Inch\n          this.bottomRadiiMaxLimit = 0.035;\n        }\n\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.dovetailGlandForm, x);\n        if (convertedForm) {\n          this.dovetailGlandForm = convertedForm;\n        }\n\n        /// recalculate the data\n        this.onSubmit();\n      }\n    });\n  }\n\n  // call this function for calculatin to determine validation for dovetail radii\n  radiiRecomendation() {\n    const glandDepthNominal = parseFloat(this.dovetailGlandForm.controls[\"glandDepthNominal\"].value);\n    const glandWidthNominal = parseFloat(this.dovetailGlandForm.controls[\"glandWidthNominal\"].value);\n    const topRadiiNominal = parseFloat(this.dovetailGlandForm.controls[\"topRadiiNominal\"].value);\n    const bottomRadiiNominal = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiNominal\"].value);\n    const glandAngleNominal = parseFloat(this.dovetailGlandForm.controls[\"glandAngleNominal\"].value);\n\n    if (glandDepthNominal >= 0 && glandWidthNominal >= 0 && topRadiiNominal >= 0 && bottomRadiiNominal >= 0 && glandAngleNominal >= 0) {\n      let h = glandDepthNominal - (topRadiiNominal + bottomRadiiNominal) * (1 + Math.sin((90 - glandAngleNominal) * Math.PI / 180));\n      let w = (glandWidthNominal / 2) + glandDepthNominal / Math.tan(glandAngleNominal * Math.PI / 180) - bottomRadiiNominal / Math.tan((glandAngleNominal / 2) * Math.PI / 180);\n      let bottomRadiiPercent = Math.round((bottomRadiiNominal / glandDepthNominal) * 100);\n      let topRadiiPercent = Math.round((topRadiiNominal / glandDepthNominal) * 100);\n    }\n\n    const glandDepthMin = parseFloat(this.dovetailGlandForm.controls[\"glandDepthMin\"].value);\n    const glandWidthMin = parseFloat(this.dovetailGlandForm.controls[\"glandWidthMin\"].value);\n    const topRadiiMin = parseFloat(this.dovetailGlandForm.controls[\"topRadiiMin\"].value);\n    const bottomRadiiMin = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiMin\"].value);\n    const glandAngleMin = parseFloat(this.dovetailGlandForm.controls[\"glandAngleMin\"].value);\n    if (glandDepthMin >= 0 && glandWidthMin >= 0 && topRadiiMin >= 0 && bottomRadiiMin >= 0 && glandAngleMin >= 0) {\n      let hMin = glandDepthMin - (topRadiiMin + bottomRadiiMin) * (1 + Math.sin((90 - glandAngleMin) * Math.PI / 180));\n      let wMin = (glandWidthMin / 2) + glandDepthMin / Math.tan(glandAngleMin * Math.PI / 180) - bottomRadiiMin / Math.tan((glandAngleMin / 2) * Math.PI / 180);\n      let bottomRadiiMinPercent = Math.round((bottomRadiiMin / glandDepthMin) * 100);\n      let topRadiiMinPercent = Math.round((topRadiiMin / glandDepthMin) * 100);\n    }\n\n    const glandDepthMax = parseFloat(this.dovetailGlandForm.controls[\"glandDepthMax\"].value);\n    const glandWidthMax = parseFloat(this.dovetailGlandForm.controls[\"glandWidthMax\"].value);\n    const topRadiiMax = parseFloat(this.dovetailGlandForm.controls[\"topRadiiMax\"].value);\n    const bottomRadiiMax = parseFloat(this.dovetailGlandForm.controls[\"bottomRadiiMax\"].value);\n    const glandAngleMax = parseFloat(this.dovetailGlandForm.controls[\"glandAngleMax\"].value);\n    if (glandDepthMax >= 0 && glandWidthMax >= 0 && topRadiiMax >= 0 && bottomRadiiMax >= 0 && glandAngleMax >= 0) {\n      let hMax = glandDepthMax - (topRadiiMax + bottomRadiiMax) * (1 + Math.sin((90 - glandAngleMax) * Math.PI / 180));\n      let Max = (glandWidthMax / 2) + glandDepthMax / Math.tan(glandAngleMax * Math.PI / 180) - bottomRadiiMax / Math.tan((glandAngleMax / 2) * Math.PI / 180)\n      let bottomRadiiMaxPercent = Math.round((bottomRadiiMax / glandDepthMax) * 100);\n      let topRadiiMaxPercent = Math.round((topRadiiMax / glandDepthMax) * 100);\n    }\n  }\n\n  // on paste calculated data\n  onPaste(calculatedData: any) {\n    if (calculatedData) {\n      this.dovetailGlandForm.patchValue(calculatedData);\n      // set material choice dropdown value\n      const materialChoiceControl = this.dovetailGlandForm.get('materialCteNominal');\n      if (materialChoiceControl) {\n        const cte = this.helperService.getMaterialChoiceList('materialCteNominal');\n        const i = cte.findIndex((c) => {\n          return c.value.id === calculatedData['materialCteNominal'].id\n        });\n        if (i > -1) {\n          materialChoiceControl.setValue(cte[i].value);\n        }\n      }\n    }\n  }\n\n  // set show flag of paste button\n  setShowPasteBtnFlag() {\n    if (this.calculatorConfig && this.calculatorConfig.id) {\n      this.isShowPasteBtn = (this.helperService.isCalculatedDataExist(+this.calculatorConfig.id)) ? true : false;\n    }\n    else {\n      this.isShowPasteBtn = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n    if (this.temperatureChangeSubscription) {\n      this.temperatureChangeSubscription.unsubscribe();\n    }\n    if (this.oRingDataSubscription) {\n      this.oRingDataSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9\">\n        <form *ngIf=\"calculatorConfig && dovetailGlandForm\" (ngSubmit)=\"onSubmit(true)\" [formGroup]=\"dovetailGlandForm\"\n            novalidate class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\"\n                        [isShowOptions]=\"calculatorConfig.toolbarOption ? true : false\" [form]=\"dovetailGlandForm\"\n                        [control]=\"calculatorConfig.toolbarOption\" [isSubmitted]=\"isSubmitted\"\n                        [isShowPasteBtn]=\"isShowPasteBtn\" (optionChange)=\"onOptionChange($event)\" (reset)=\"onReset()\"\n                        (print)=\"onPrint()\"></calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <dynamic-form-two-column-layout [form]=\"dovetailGlandForm\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                <!-- graph -->\n                <div class=\"graph-sec\">\n                    <h3>Gland Information</h3>\n                    <div class=\"graph-bg dovtail-bg\">\n                        <div class=\"gld-id\">CL: <strong>{{getControlValue('glandCenterlineNominal')}}</strong> <br>\n                            (to centerline)</div>\n                        <div class=\"gld-width\">GLAND WIDTH: <strong>{{getControlValue('glandWidthNominal')}}</strong>\n                            <br>(to sharp corners)</div>\n                        <div class=\"gld-depth\">GLAND DEPTH:\n                            <br><strong>{{getControlValue('glandDepthNominal')}}</strong></div>\n                        <div class=\"top-radii\">TOP RADII: <strong>{{getControlValue('topRadiiNominal')}}</strong>\n                        </div>\n                        <div class=\"bottom-radii\">BOTTOM RADII:\n                            <strong>{{getControlValue('bottomRadiiNominal')}} </strong></div>\n                        <div class=\"gld-angle\">GLAND ANGLE: <strong>{{getControlValue('glandAngleNominal')}}</strong>\n                        </div>\n                        <div class=\"gap-full-comp\">GAP: <strong>{{getControlValue('gapNominal')}}</strong> <br>(may\n                            or may not exist)</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                <user-rules></user-rules>\n            </div>\n        </div>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../../dynamic-form/dynamic-form.module\";\nimport { ORingDovetailGlandVacuumOnlyRoutingModule } from \"./o-ring-dovetail-gland-vacuum-only-routing.module\";\nimport { ORingDovetailGlandVacuumOnlyComponent } from '../o-ring-dovetail-gland-vacuum-only/o-ring-dovetail-gland-vacuum-only.component';\nimport { ORingDovetailGlandVacuumOnlyService } from \"./o-ring-dovetail-gland-vacuum-only.service\";\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\n\n@NgModule({\n  declarations: [ORingDovetailGlandVacuumOnlyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    DynamicFormModule,\n    ORingDovetailGlandVacuumOnlyRoutingModule\n  ],\n  providers: [\n    ORingDovetailGlandVacuumOnlyService,\n    ORingDovetailGlandVacuumOnlyValidationService\n  ]\n})\nexport class ORingDovetailGlandVacuumOnlyModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { ORingDovetailGlandVacuumOnlyDTO } from \"../../../models/oRingDovetailGlandVacuum OnlyDTO\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ORingDovetailGlandVacuumOnlyValidationService } from \"./o-ring-dovetail-gland-vacuum-only-validation.service\";\nimport { FormGroup } from '@angular/forms';\nimport { CalculatorOption, calculationType } from '../../../shared/helpers/constants';\nimport { MaxValue } from '../../../models/oring-dovetail-max.model';\nimport { MinValue } from '../../../models/oring-dovetail-min.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingDovetailGlandVacuumOnlyService {\n  private baseUrl = AppConfig.settings.env.api;\n\n  constructor(private _http: HttpClient, private oRingDovetailGlandVacuumOnlyValidationService: ORingDovetailGlandVacuumOnlyValidationService) { }\n\n  public createOringDovetail(form: FormGroup, inputOption: string, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: ORingDovetailGlandVacuumOnlyDTO = new ORingDovetailGlandVacuumOnlyDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.inputOption = inputOption;\n    body.calculationType = calculationType.ORING_SIZING;\n\n    if (CalculatorOption.WithTolerance === +(inputOption)) {\n      const minValue: MinValue = this.oRingDovetailGlandVacuumOnlyValidationService.generateMinValues(form);\n      body.glandWidthMin = minValue.glandWidthMin ? minValue.glandWidthMin : 0;\n      body.glandDepthMin = minValue.glandDepthMin ? minValue.glandDepthMin : 0;\n      body.glandAngleMin = minValue.glandAngleMin ? minValue.glandAngleMin : 0;\n      body.bottomRadiiMin = minValue.bottomRadiiMin ? minValue.bottomRadiiMin : 0;\n      body.topRadiiMin = minValue.topRadiiMin ? minValue.topRadiiMin : 0;\n      body.gapMin = minValue.gapMin ? minValue.gapMin : 0;\n      body.glandCenterlineMin = minValue.glandCenterlineMin ? minValue.glandCenterlineMin : 0;\n\n      const maxValue: MaxValue = this.oRingDovetailGlandVacuumOnlyValidationService.generateMaxValues(form);\n      body.glandWidthMax = maxValue.glandWidthMax ? maxValue.glandWidthMax : 0;\n      body.glandDepthMax = maxValue.glandDepthMax ? maxValue.glandDepthMax : 0;\n      body.glandAngleMax = maxValue.glandAngleMax ? maxValue.glandAngleMax : 0;\n      body.bottomRadiiMax = maxValue.bottomRadiiMax ? maxValue.bottomRadiiMax : 0;\n      body.topRadiiMax = maxValue.topRadiiMax ? maxValue.topRadiiMax : 0;\n      body.gapMax = maxValue.gapMax ? maxValue.gapMax : 0;\n      body.glandCenterlineMax = maxValue.glandCenterlineMax ? maxValue.glandCenterlineMax : 0\n    }\n\n    return this._http.post(`${this.baseUrl}oringglandanalysistool/createOringDovetail`, body);\n  }\n}\n"]}