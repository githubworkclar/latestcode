{"version":3,"sources":["webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc-routing.module.ts","webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc-validation.service.ts","webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.component.ts","webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.component.html","webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.module.ts","webpack:///client/app/oring-and-gland-calc/rectangle-gland-calc/rectangle-gland-calc.service.ts"],"names":["routes","path","component","children","data","calculatorType","ORingInternalVacuumOnly","loadChildren","then","m","GlandSizeRectangleInternalVacuumOnlyModule","ORingDovetailGlandVacuumOnly","GlandSizeDovetailGlandVacuumOnlyModule","ORingHalfDovetailGlandInternalVacuumOnly","GlandSizeHalfDovetailGlandInternalVacuumOnlyModule","ORingRectangularGlandExternalVacuumOnly","GlandSizeRectangularGlandExternalVacuumOnlyModule","RectangleGlandCalcRoutingModule","forChild","imports","exports","RectangleGlandCalcValidationService","helperService","unitButtonService","temperatureButtonService","control","materialCteNominalControl","get","operatingTemperatureNominalControl","currentSelectedTemperature","getCurrentTemperatureValue","materialCteNominalValue","value","error","maxtemp","undefined","message","FAHRENHEIT","id","mintempF","maxtempF","mname","mintemp","operatingTemperatureNominalInCelcius","convertFahrenheitToCelcius","toFixed","operatingTemperatureNominalLessThanMaxTempError","operatingTemperatureNominalLargerThanMinTempError","setErrors","oringCrossSectionNominalControl","currentSelectedUnit","getCurrentUnitValue","oringCrossSectionNominalLessThanRangeError","oringCrossSectionNominalLargerThanRangeError","INCH","MILLI_METER","oringIdNominalControl","maxOringIdValue","toString","display_Short_title","setValidationErrorToFormControl","warning","parseFloat","field","title","detail","type","Warning","providedIn","RectangleGlandCalcComponent","rectangleGlandCalcService","router","controlBaseService","activatedRoute","GLAND_SIZE_CALCULATOR_TYPE_FORM_CONTROL_KEY","currrentSelectedCalculatorId","isJSONConfigFetched","flattenedFormControls","controlType","activatedRouteSubscription","events","pipe","event","subscribe","calculatorId","snapshot","firstChild","getGlandSizeCalcConfig","resp","jsonConfiguration","calculatorTypes","getCalculatorTypeArray","calculatorTypeDDl","calculatorTypeDDLGroup","getCalcuilatorindex","findIndex","calc","form_control_id","push","createCalculatorTypeFormGroup","sendGlandSizeCalcConfigValue","Error","unsubscribe","formControlKey","index","calculators","length","fc","key","label","display_calculator_title","formControls","calculatorTypeDDLFormGroup","toFormGroup","calculator","navigate","selector","templateUrl","styleUrls","RectangleGlandCalcModule","declarations","providers","RectangleGlandCalcService","_http","baseUrl","settings","env","api","glandSizeCalcConfigSubject","glandSizeCalcConfig$","asObservable","val","glandSizeCalcConfig","getValue","next"],"mappings":"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","file":"rectangle-gland-calc-rectangle-gland-calc-module-es5.js","sourcesContent":["// core imports\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n// application imports\r\nimport { RectangleGlandCalcComponent } from \"./rectangle-gland-calc.component\";\r\nimport { CalculatorTypes } from '../../shared/helpers/constants';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: RectangleGlandCalcComponent, children: [\r\n            { path: 'createRectangleGland', data: { calculatorType: CalculatorTypes.ORingInternalVacuumOnly }, loadChildren: () => import('./gland-size-rectangle-internal-vacuum-only/gland-size-rectangle-internal-vacuum-only.module').then(m => m.GlandSizeRectangleInternalVacuumOnlyModule) },\r\n            { path: 'createDovetailGland', data: { calculatorType: CalculatorTypes.ORingDovetailGlandVacuumOnly }, loadChildren: () => import('./gland-size-dovetail-gland-vacuum-only/gland-size-dovetail-gland-vacuum-only.module').then(m => m.GlandSizeDovetailGlandVacuumOnlyModule) },\r\n            { path: 'createHalfDovetailGland', data: { calculatorType: CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly }, loadChildren: () => import('./gland-size-half-dovetail-gland-internal-vacuum-only/gland-size-half-dovetail-gland-internal-vacuum-only.module').then(m => m.GlandSizeHalfDovetailGlandInternalVacuumOnlyModule) },\r\n            { path: 'createRectangleOdGland', data: { calculatorType: CalculatorTypes.ORingRectangularGlandExternalVacuumOnly }, loadChildren: () => import('./gland-size-rectangular-gland-external-vacuum-only/gland-size-rectangular-gland-external-vacuum-only.module').then(m => m.GlandSizeRectangularGlandExternalVacuumOnlyModule) }\r\n        ],\r\n    }\r\n];\r\n\r\n@NgModule(\r\n    {\r\n        imports: [RouterModule.forChild(routes)],\r\n        exports: [RouterModule]\r\n    }\r\n)\r\nexport class RectangleGlandCalcRoutingModule {\r\n}","// core imports\nimport { Injectable } from '@angular/core';\nimport { ValidatorFn, ValidationErrors, FormGroup, AbstractControl } from '@angular/forms';\n\n// application imports\nimport { lessThanValidation, largerThanValidation } from \"../../shared/directives/custom-validations/comparison-validation.directive\";\nimport { MaterialChoiceModel } from '../../models/material-choice.model';\nimport { SwitchButtonModel } from '../../models/switch-button.model';\nimport { Temperature, Units, ErrorTypes } from '../../shared/helpers/constants';\nimport { ErrorModel } from '../../models/error.model';\nimport { HelperService } from \"../../shared/services/helper.service\";\nimport { UnitButtonService } from '../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../shared/components/temperature-button/temperature-button.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RectangleGlandCalcValidationService {\n  constructor(\n    private helperService: HelperService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService\n  ) { }\n\n  /********************************************************************/\n  /*********************** Client Side Validation *********************/\n  /******************** Prevent the form submission********************/\n  /********************************************************************/\n  // operating temperture nominal validation\n  operatingTemperatureValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const materialCteNominalControl = control.get('materialCteNominal');\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\n      let error = null;\n      if (\n        materialCteNominalValue\n        && materialCteNominalValue.maxtemp\n        && operatingTemperatureNominalControl.value !== ''\n        && operatingTemperatureNominalControl.value !== null\n        && operatingTemperatureNominalControl.value !== undefined\n      ) {\n        let message = \"\";\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        else {\n          // default CELCIUS\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\n        }\n        let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\n        if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\n          operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\n        }\n        const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n        const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\n        error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\n        operatingTemperatureNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // Function check O-ring cross section is in range or not else set error message\n  oringCrossSectionNominalValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      let error = null;\n      if (\n        oringCrossSectionNominalControl && oringCrossSectionNominalControl.value !== ''\n        && oringCrossSectionNominalControl.value !== null\n        && oringCrossSectionNominalControl.value !== undefined\n      ) {\n\n        // check O-ring cross section is in range or not else set error message\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\n\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\n        }\n\n\n        error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\n        oringCrossSectionNominalControl.setErrors(error);\n      }\n\n      return error;\n    };\n  }\n\n  // oRingId nominal validation\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      const oringIdNominalControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\n      let error = null;\n      if (\n        oringIdNominalControl && oringIdNominalControl.value !== ''\n        && oringIdNominalControl.value !== null\n        && oringIdNominalControl.value !== undefined\n      ) {\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\n\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"errorORingIDNominalMaxValue\");\n      }\n\n      return error;\n    };\n  }\n\n  // orin id standard warning and prevent to submit the form\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\n    return (control: FormGroup): ValidationErrors | null => {\n      let warning: ErrorModel = null;\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\n      const oringIdNominalControl: AbstractControl = control.get('oringIdNominal');\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\n\n      if (\n        oringCrossSectionNominalControl.value !== ''\n        && oringCrossSectionNominalControl.value !== null\n        && oringCrossSectionNominalControl.value !== undefined\n        && oringIdNominalControl.value !== ''\n        && oringIdNominalControl.value !== null\n        && oringIdNominalControl.value !== undefined\n      ) {\n        if ((+currentSelectedUnit.id) === Units.INCH) {\n          if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\n            warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n        }\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\n          if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\n            (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\n            warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\n        }\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"warningORingIDNominalStandard\");\n        // this.helperService.setValidationErrorToFormControl(control, \"oringIdNominal\", warning, \"warningORingIDNominalStandard\");\n      }\n      return warning;\n    };\n  }\n}\n","// core imports\nimport { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { FormGroup } from '@angular/forms';\n\n// third party imports\nimport { Subscription } from 'rxjs';\nimport { filter } from \"rxjs/operators\";\n\n// application imports\nimport { ControlType, CalculatorTypes } from '../../shared/helpers/constants';\nimport { BaseModel } from \"../../models/base.model\";\nimport { CalculatorModel } from \"../../models/calculator.model\";\nimport { FormControlModel } from '../../models/form-control.model';\nimport { RectangleGlandCalcService } from \"./rectangle-gland-calc.service\";\nimport { ControlBaseService } from \"../../shared/services/control-base.service\";\nimport { DropDownChangeModel } from '../../models/dropdown-change.model';\n\n@Component({\n  selector: 'app-rectangle-gland-calc',\n  templateUrl: './rectangle-gland-calc.component.html',\n  styleUrls: ['./rectangle-gland-calc.component.css']\n})\nexport class RectangleGlandCalcComponent implements OnInit {\n\n  readonly GLAND_SIZE_CALCULATOR_TYPE_FORM_CONTROL_KEY = \"Gland_Size_Calculator\";\n  currrentSelectedCalculatorId: number = 0;\n  isJSONConfigFetched: boolean = false;\n  jsonConfiguration: BaseModel;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n\n  // calculator dropdown formgroup\n  calculatorTypeDDLFormGroup: FormGroup;\n  calculatorTypeDDl: FormControlModel[];\n  // currentSelectedCalculator: FormControlModel;\n  // subscription\n  activatedRouteSubscription: Subscription;\n\n  constructor(\n    private rectangleGlandCalcService: RectangleGlandCalcService,\n    private router: Router,\n    private controlBaseService: ControlBaseService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    // get route data\n    this.activatedRouteSubscription = this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      let calculatorId = 0;\n      if (this.activatedRoute.snapshot.firstChild && this.activatedRoute.snapshot.firstChild.data) {\n        calculatorId = this.activatedRoute.snapshot.firstChild.data.calculatorType;\n      }\n\n      if (calculatorId) {\n        this.currrentSelectedCalculatorId = calculatorId;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    // get JSON config from server\n    this.rectangleGlandCalcService.getGlandSizeCalcConfig().subscribe(\n      (resp) => {\n        this.isJSONConfigFetched = true;\n        this.jsonConfiguration = resp as BaseModel;\n        // bind calculator type ddl \n        const calculatorTypes: FormControlModel[] = [...this.getCalculatorTypeArray(this.GLAND_SIZE_CALCULATOR_TYPE_FORM_CONTROL_KEY)];\n        this.calculatorTypeDDl = calculatorTypes;\n        // create form group for calculator dropdown - to handle the dropdown model binding using reactiveform model\n        let calculatorTypeDDLGroup: FormControlModel[] = [];\n        // below calculatorTypeDDLGroup.push also sets the default dropdown selection\n        // create form groupd with initial value of control \"calculatorTypes[0]\"\n        if (this.currrentSelectedCalculatorId && this.currrentSelectedCalculatorId >= 0) {\n\n          // get calculator index by calculator id\n          const getCalcuilatorindex = calculatorTypes.findIndex((calc: FormControlModel) => {\n            if (calc.form_control_id === this.currrentSelectedCalculatorId) {\n              return calc;\n            }\n          });\n\n          // set selected calcalcutor in calculator dropdown\n          if (getCalcuilatorindex) {\n            calculatorTypeDDLGroup.push(calculatorTypes[getCalcuilatorindex]);\n          }\n          else {\n            // set selected calcalcutor in calculator dropdown\n            calculatorTypeDDLGroup.push(calculatorTypes[0]);\n          }\n        }\n        else {\n          // set selected calcalcutor in calculator dropdown\n          calculatorTypeDDLGroup.push(calculatorTypes[0]);\n        }\n\n        // create form group with default option selection\n        this.createCalculatorTypeFormGroup(calculatorTypeDDLGroup);\n        // calculator change\n        // send o-ring config value to subscribers\n        this.rectangleGlandCalcService.sendGlandSizeCalcConfigValue(this.jsonConfiguration);\n      },\n      (error: HttpErrorResponse) => {\n        throw new Error(error.message);\n      }\n    );\n  }\n\n  // component destroy handler\n  ngOnDestroy(): void {\n    this.isJSONConfigFetched = false;\n    if (this.activatedRouteSubscription) {\n      this.activatedRouteSubscription.unsubscribe();\n    }\n  }\n\n  // calculator types\n  getCalculatorTypeArray(formControlKey: string): FormControlModel[] {\n    let calculatorTypeDDl: FormControlModel[] = [];\n    for (let index = 0; index < this.jsonConfiguration.calculators.length; index++) {\n      const fc: FormControlModel = new FormControlModel({ form_control_id: this.jsonConfiguration.calculators[index].id, key: formControlKey, label: this.jsonConfiguration.calculators[index].display_calculator_title, value: this.jsonConfiguration.calculators[index] });\n      calculatorTypeDDl.push(fc);\n    }\n    return calculatorTypeDDl\n  };\n\n  // create form group\n  // params => formControls\n  createCalculatorTypeFormGroup(formControls: FormControlModel[]) {\n    // calculator type dropdown form group\n    this.calculatorTypeDDLFormGroup = this.controlBaseService.toFormGroup(formControls);\n  }\n\n  // calculator change handler\n  onCalculatorChange(event: DropDownChangeModel) {\n    const calculator = event.value as CalculatorModel;\n    switch (+(calculator.id)) {\n      case CalculatorTypes.ORingInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createRectangleGland']);\n        break;\n      case CalculatorTypes.ORingDovetailGlandVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createDovetailGland']);\n        break;\n      case CalculatorTypes.ORingHalfDovetailGlandInternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createHalfDovetailGland']);\n        break;\n      case CalculatorTypes.ORingRectangularGlandExternalVacuumOnly:\n        this.router.navigate(['oringgland', 'evaluateglandsizecalculatorsglands', 'createRectangleOdGland']);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row ignorePdf\">\n        <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9 p-1\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <p class=\"info-tab pt-0\">Use this tool for designing new glands based upon desired o-ring sizing.\n                        Please contact Greene Tweed engineering for help or advice if required as some applications are\n                        difficult to optimize both at ambient and operating temperatures</p>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 p-1\"\n                    *ngIf=\"calculatorTypeDDl && calculatorTypeDDl.length > 0 && calculatorTypeDDLFormGroup\">\n                    <custom-drop-down [options]=\"calculatorTypeDDl\" [form]=\"calculatorTypeDDLFormGroup\"\n                        [control]=\"calculatorTypeDDl[0]\" (selectionChange)=\"onCalculatorChange($event)\">\n                    </custom-drop-down>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <div class=\"pull-left unit-section__label\">Units:</div>\n                        </div>\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <unit-button></unit-button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <div class=\"pull-left unit-section__label\">Temperature:</div>\n                        </div>\n                        <div class=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 p-0\">\n                            <temperature-button></temperature-button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","// core imports\n// Gland Size Calculator module\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../dynamic-form/dynamic-form.module\";\nimport { RectangleGlandCalcRoutingModule } from \"./rectangle-gland-calc-routing.module\";\nimport { RectangleGlandCalcComponent } from '../rectangle-gland-calc/rectangle-gland-calc.component';\nimport { RectangleGlandCalcService } from \"./rectangle-gland-calc.service\";\nimport { RectangleGlandCalcValidationService } from \"./rectangle-gland-calc-validation.service\";\n\n@NgModule({\n  declarations: [RectangleGlandCalcComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RectangleGlandCalcRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    RectangleGlandCalcService,\n    RectangleGlandCalcValidationService\n  ]\n})\nexport class RectangleGlandCalcModule { }\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../app.config.service';\nimport { BaseModel } from \"../../models/base.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RectangleGlandCalcService {\n  /* Private Properties   */\n  private baseUrl = AppConfig.settings.env.api;\n\n  // glandSizeCalc config state management subject and observable\n  // private glandSizeCalcConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  private readonly glandSizeCalcConfigSubject: BehaviorSubject<BaseModel> = new BehaviorSubject<BaseModel>(null);\n  // Expose the observable part of the glandSizeCalcConfig subject (read only stream)\n  readonly glandSizeCalcConfig$ = this.glandSizeCalcConfigSubject.asObservable();\n\n  // service state management property \"glandSizeCalcConfig\"\n  // the getter will return the last value emitted glandSizeCalcConfigSubject subject\n  private get glandSizeCalcConfig(): BaseModel {\n    return this.glandSizeCalcConfigSubject.getValue();\n  }\n\n  // assigning a value to this.glandSizeCalcConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.glandSizeCalcConfig = {})\n  private set glandSizeCalcConfig(val: BaseModel) {\n    this.glandSizeCalcConfigSubject.next(val);\n  }\n\n  /* Public Properties   */\n\n  // get config value directly using behaviour subject\n  public get getCurrentGlandSizeCalcConfigValue(): BaseModel {\n    return this.glandSizeCalcConfig;\n  }\n\n  /*  Constructor */\n  constructor(private _http: HttpClient) {\n  }\n\n  // Methods/functions\n  // send GlandSize config\n  // assigning a value to this.glandSizeCalcConfig will push it onto the observable \n  // and down to all of its subsribers (ex: this.glandSizeCalcConfig = {})\n  sendGlandSizeCalcConfigValue(val: BaseModel) {\n    this.glandSizeCalcConfig = val;\n  }\n\n  /*  Public Methods   */\n\n  // get o-ring config from server\n  getGlandSizeCalcConfig() {\n    return this._http.get(`${this.baseUrl}glandsizecalc/getjsonconfig`);\n  }\n}\n"]}