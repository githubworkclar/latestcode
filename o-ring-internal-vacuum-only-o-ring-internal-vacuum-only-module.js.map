{"version":3,"sources":["./client/app/models/oring-rectangular-gland-internal-vacuum-only-maxvalues.ts","./client/app/models/oring-rectangular-gland-internal-vacuum-only-minvalues.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only-routing.module.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only-validation.service.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.component.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.component.html","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.module.ts","./client/app/oring-and-gland-calc/rectangular-o-ring-calc/o-ring-internal-vacuum-only/o-ring-internal-vacuum-only.service.ts"],"names":[],"mappings":"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","file":"o-ring-internal-vacuum-only-o-ring-internal-vacuum-only-module.js","sourcesContent":["import { ORingMaxValuesModel } from \"./oring-maxvalues\";\r\nexport class ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel extends ORingMaxValuesModel {\r\n    glandIdMax: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMax?: number,\r\n        glandDepthMax?: number,\r\n        bottomRadiiMax?: number,\r\n        gapMax?: number,\r\n        glandIdMax?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandIdMax = options.glandIdMax;\r\n    }\r\n}","import { ORingMinValuesModel } from \"./oring-minvalues\";\r\nexport class ORingRectangularGlandInternalVacuumOnlyMinvaluesModel extends ORingMinValuesModel {\r\n    glandIdMin: number;\r\n\r\n    constructor(options: {\r\n        glandWidthMin?: number,\r\n        glandDepthMin?: number,\r\n        bottomRadiiMin?: number,\r\n        gapMin?: number,\r\n        glandIdMin?: number\r\n    } = {}) {\r\n        super(options);\r\n        this.glandIdMin = options.glandIdMin;\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { ORingInternalVacuumOnlyComponent } from \"./o-ring-internal-vacuum-only.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ORingInternalVacuumOnlyComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ORingInternalVacuumOnlyRoutingModule { }","// core imports\r\nimport { Injectable } from '@angular/core';\r\nimport { ValidatorFn, ValidationErrors, FormGroup } from '@angular/forms';\r\n\r\n// application imports\r\nimport { lessThanValidation, largerThanValidation, noLargerThanHalf, lessThanEqualValidation, largerThanEqualValidation } from \"../../../shared/directives/custom-validations/comparison-validation.directive\";\r\nimport { MaterialChoiceModel } from '../../../models/material-choice.model';\r\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\r\nimport { Temperature, Units, ErrorTypes, CalculatorOption } from '../../../shared/helpers/constants';\r\nimport { ErrorModel } from '../../../models/error.model';\r\nimport { HelperService } from \"../../../shared/services/helper.service\";\r\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\r\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\r\nimport { ORingRectangularGlandInternalVacuumOnlyMinvaluesModel } from '../../../models/oring-rectangular-gland-internal-vacuum-only-minvalues';\r\nimport { ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel } from '../../../models/oring-rectangular-gland-internal-vacuum-only-maxvalues';\r\n\r\nconst glandWidthNoReliableWarningTitle = \"Gland Width\";\r\nconst glandWidthNoReliableWarningMessage = \"The gland fill calculations will be considered not reliable as the o-ring could not expand fully into the gland.\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ORingInternalVacuumOnlyValidationService {\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private unitButtonService: UnitButtonService,\r\n    private temperatureButtonService: TemperatureButtonService\r\n  ) { }\r\n\r\n  /********************************************************************/\r\n  /*********************** Client Side Validation *********************/\r\n  /******************** Prevent the form submission********************/\r\n  /********************************************************************/\r\n\r\n  // bottom radii should not be larger than half(1/2) of glandWidthNominal\r\n  // bottom radii should not be larger than glandDepthNominal\r\n  bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n      const bottomRadiiMinControl = control.get('bottomRadiiMin');\r\n      const bottomRadiiMaxControl = control.get('bottomRadiiMax');\r\n      const glandWidthNominalControl = control.get('glandWidthNominal');\r\n      const glandDepthNominalControl = control.get('glandDepthNominal');\r\n      let error: any = null;\r\n      // bottomRadii Nominal\r\n      if (bottomRadiiNominalControl) {\r\n        const bottomRadiiNominalError1 = largerThanValidation(bottomRadiiNominalControl.value, glandDepthNominalControl.value, \"bottomRadiiNominal\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiNominalError2 = noLargerThanHalf(bottomRadiiNominalControl.value, glandWidthNominalControl.value, \"bottomRadiiNominal\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiNominalError1) {\r\n          error = bottomRadiiNominalError1;\r\n        }\r\n        else if (bottomRadiiNominalError2) {\r\n          error = bottomRadiiNominalError2;\r\n        }\r\n\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiNominalControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n\r\n      // bottomRadiiMin\r\n      if (bottomRadiiMinControl) {\r\n        const bottomRadiiMinError1 = largerThanValidation(bottomRadiiMinControl.value, glandDepthNominalControl.value, \"bottomRadiiMin\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiMinError2 = noLargerThanHalf(bottomRadiiMinControl.value, glandWidthNominalControl.value, \"bottomRadiiMin\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiMinError1) {\r\n          error = bottomRadiiMinError1;\r\n        }\r\n        else if (bottomRadiiMinError2) {\r\n          error = bottomRadiiMinError2;\r\n        }\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMinControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n\r\n      // bottomRadiiMax\r\n      if (bottomRadiiMaxControl) {\r\n        const bottomRadiiMaxError1 = largerThanValidation(bottomRadiiMaxControl.value, glandDepthNominalControl.value, \"bottomRadiiMax\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        const bottomRadiiMaxError2 = noLargerThanHalf(bottomRadiiMaxControl.value, glandWidthNominalControl.value, \"bottomRadiiMax\", \"Bottom Radii\", \"Bottom Radius must be no larger than 1/2 of Gland Width or Gland Depth.\");\r\n        if (bottomRadiiMaxError1) {\r\n          error = bottomRadiiMaxError1;\r\n        }\r\n        else if (bottomRadiiMaxError2) {\r\n          error = bottomRadiiMaxError2;\r\n        }\r\n\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiMaxControl, error, \"bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // operating temperture nominal validation\r\n  operatingTemperatureValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const materialCteNominalControl = control.get('materialCteNominal');\r\n      const operatingTemperatureNominalControl = control.get('operatingTemperatureNominal');\r\n      const operatingTemperatureMinControl = control.get('operatingTemperatureMin');\r\n      const operatingTemperatureMaxControl = control.get('operatingTemperatureMax');\r\n      const currentSelectedTemperature: SwitchButtonModel = this.temperatureButtonService.getCurrentTemperatureValue;\r\n      let materialCteNominalValue = materialCteNominalControl.value as MaterialChoiceModel;\r\n      let error = null;\r\n      if (materialCteNominalValue && materialCteNominalValue.maxtemp) {\r\n\r\n        // message\r\n        let message = \"\";\r\n        if (Temperature.FAHRENHEIT === +(currentSelectedTemperature.id)) {\r\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintempF + \" to \" + materialCteNominalValue.maxtempF + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\r\n        }\r\n        else {\r\n          // default CELCIUS\r\n          message = \"You have requested a temperature that is outside the \" + materialCteNominalValue.mintemp + \" to \" + materialCteNominalValue.maxtemp + \" temperature range of the material \" + materialCteNominalValue.mname + \". Please change temperature or contact Greene Tweed for assistance, if needed.\";\r\n        }\r\n\r\n        // Nominal temperature min and max validation\r\n        if (operatingTemperatureNominalControl.value) {\r\n          let operatingTemperatureNominalInCelcius = operatingTemperatureNominalControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureNominalInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureNominalControl.value).toFixed(2);\r\n          }\r\n\r\n          // Nominal temperature min and max validation\r\n          const operatingTemperatureNominalLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\r\n          const operatingTemperatureNominalLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureNominalInCelcius, \"operatingTemperatureNominal\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError) {\r\n            error = operatingTemperatureNominalLessThanMaxTempError || operatingTemperatureNominalLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureNominalControl.setErrors(error);\r\n        }\r\n\r\n        // Min temperature min and max validation\r\n        if (operatingTemperatureMinControl.value) {\r\n          let operatingTemperatureMinInCelcius = operatingTemperatureMinControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureMinInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMinControl.value).toFixed(2);\r\n          }\r\n\r\n          // Temperature min and max validation\r\n          const operatingTemperatureMinLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\r\n          const operatingTemperatureMinLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMinInCelcius, \"operatingTemperatureMin\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError) {\r\n            error = operatingTemperatureMinLessThanMaxTempError || operatingTemperatureMinLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureMinControl.setErrors(error);\r\n        }\r\n\r\n        // Max Temperature min and max validation\r\n        if (operatingTemperatureMaxControl.value) {\r\n          let operatingTemperatureMaxInCelcius = operatingTemperatureMaxControl.value;\r\n          if ((+currentSelectedTemperature.id) === Temperature.FAHRENHEIT) {\r\n            operatingTemperatureMaxInCelcius = this.helperService.convertFahrenheitToCelcius(operatingTemperatureMaxControl.value).toFixed(2);\r\n          }\r\n\r\n          // Nominal temperature min and max validation\r\n          const operatingTemperatureMaxLessThanMaxTempError = lessThanValidation(materialCteNominalValue.maxtemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\r\n          const operatingTemperatureMaxLargerThanMinTempError = largerThanValidation(materialCteNominalValue.mintemp, operatingTemperatureMaxInCelcius, \"operatingTemperatureMax\", \"Operating Temperature\", message);\r\n          if (operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError) {\r\n            error = operatingTemperatureMaxLessThanMaxTempError || operatingTemperatureMaxLargerThanMinTempError;\r\n          }\r\n          operatingTemperatureMaxControl.setErrors(error);\r\n        }\r\n      }\r\n\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // Function check O-ring cross section is in range or not else set error message\r\n  oringCrossSectionNominalValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n      let error = null;\r\n      if (oringCrossSectionNominalControl\r\n        && oringCrossSectionNominalControl.value\r\n      ) {\r\n        // check O-ring cross section is in range or not else set error message\r\n        let oringCrossSectionNominalLessThanRangeError: ErrorModel;\r\n        let oringCrossSectionNominalLargerThanRangeError: ErrorModel;\r\n\r\n        if ((+currentSelectedUnit.id) === Units.INCH) {\r\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"0.056\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"0.331\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n        }\r\n\r\n        if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\r\n          oringCrossSectionNominalLessThanRangeError = lessThanValidation(oringCrossSectionNominalControl.value, \"1.42\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently less than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n          oringCrossSectionNominalLargerThanRangeError = largerThanValidation(oringCrossSectionNominalControl.value, \"8.41\", \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"Cross section is currently greater than AS568A standards, please contact Greene Tweed for this custom application.\");\r\n        }\r\n\r\n\r\n        if (oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError) {\r\n          error = oringCrossSectionNominalLessThanRangeError || oringCrossSectionNominalLargerThanRangeError;\r\n        }\r\n      }\r\n\r\n      this.helperService.setValidationErrorToFormControl(oringCrossSectionNominalControl, error, \"CrossSectionAS568AStandards\");\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // orin id standard warning and prevent to submit the form\r\n  oRingIDAS568AStandardsWarning(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let warning: ErrorModel = null;\r\n      const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n      const oringIdNominalControl = control.get('oringIdNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n\r\n      if ((+currentSelectedUnit.id) === Units.INCH) {\r\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 0.056 && parseFloat(oringCrossSectionNominalControl.value) <= 0.086 && (parseFloat(oringIdNominalControl.value) > 5.239 || parseFloat(oringIdNominalControl.value) < 0.101)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.087 && parseFloat(oringCrossSectionNominalControl.value) <= 0.121 && (parseFloat(oringIdNominalControl.value) > 9.737 || parseFloat(oringIdNominalControl.value) < 0.049)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.122 && parseFloat(oringCrossSectionNominalControl.value) <= 0.174 && (parseFloat(oringIdNominalControl.value) > 17.955 || parseFloat(oringIdNominalControl.value) < 0.171)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.175 && parseFloat(oringCrossSectionNominalControl.value) <= 0.242 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 0.412)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 0.243 && parseFloat(oringCrossSectionNominalControl.value) <= 0.331 && (parseFloat(oringIdNominalControl.value) > 25.940 || parseFloat(oringIdNominalControl.value) < 4.475)))\r\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\r\n      }\r\n      if ((+currentSelectedUnit.id) === Units.MILLI_METER) {\r\n        if ((parseFloat(oringCrossSectionNominalControl.value) >= 1.42 && parseFloat(oringCrossSectionNominalControl.value) <= 2.18 && (parseFloat(oringIdNominalControl.value) > 133.07 || parseFloat(oringIdNominalControl.value) < 2.57)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 2.21 && parseFloat(oringCrossSectionNominalControl.value) <= 3.07 && (parseFloat(oringIdNominalControl.value) > 247.32 || parseFloat(oringIdNominalControl.value) < 1.24)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 3.1 && parseFloat(oringCrossSectionNominalControl.value) <= 4.42 && (parseFloat(oringIdNominalControl.value) > 456.06 || parseFloat(oringIdNominalControl.value) < 4.34)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 4.45 && parseFloat(oringCrossSectionNominalControl.value) <= 6.15 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 10.46)) ||\r\n          (parseFloat(oringCrossSectionNominalControl.value) >= 6.17 && parseFloat(oringCrossSectionNominalControl.value) <= 8.41 && (parseFloat(oringIdNominalControl.value) > 658.88 || parseFloat(oringIdNominalControl.value) < 113.67)))\r\n          warning = new ErrorModel({ field: \"oringIdNominal\", title: \"O-ring Inside Diameter\", detail: \"O-ring Diameter is currently not as per AS568A standards, please contact Greene Tweed for this custom application.\", type: ErrorTypes.Warning });\r\n      }\r\n\r\n      this.helperService.setValidationErrorToFormControl(oringIdNominalControl, warning, \"oRingIDAS568AStandards\");\r\n      return warning;\r\n    };\r\n  }\r\n\r\n  // oRingId nominal validation\r\n  oringIDNominalLargerThanMaxOringIDValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      const oringIdNominalControl = control.get('oringIdNominal');\r\n      const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n      const maxOringIdValue = this.helperService.maxOringIdValue(currentSelectedUnit);\r\n      let error = null;\r\n      if (oringIdNominalControl && oringIdNominalControl.value) {\r\n        error = largerThanValidation(oringIdNominalControl.value, maxOringIdValue.toString(), \"oringIdNominal\", \"O-ring Id\", `Please make maximum O-ring ID entry to be no more than ${maxOringIdValue} ${currentSelectedUnit.display_Short_title}`);\r\n\r\n        this.helperService.setValidationErrorToFormControl(oringIdNominalControl, error, \"oringIDNominalLargerThanMaxOringID\");\r\n      }\r\n\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // less than zero validation\r\n  formLessThanZeroValidation(toolbarOptionkey: any): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let error = null;\r\n      // get form controls key\r\n      const formControlKeys = Object.keys(control.controls);\r\n      // loop through the reactive form/formgroup controls \r\n      for (let index = 0; index < formControlKeys.length; index++) {\r\n        // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\r\n        if (toolbarOptionkey === formControlKeys[index]) {\r\n          continue;\r\n        }\r\n\r\n        // skip gapNominal and operatingTemperatureNominal\r\n        if (formControlKeys[index] === \"gapNominal\" || formControlKeys[index] === \"gapTolerance\"\r\n          || formControlKeys[index] === \"gapMin\" || formControlKeys[index] === \"gapMax\"\r\n          || formControlKeys[index] === \"operatingTemperatureMin\"\r\n          || formControlKeys[index] === \"operatingTemperatureNominal\"\r\n          || formControlKeys[index] === \"operatingTemperatureMax\") {\r\n          continue;\r\n        }\r\n\r\n        // any form control value is less than zero\r\n        const error = lessThanEqualValidation(control.controls[formControlKeys[index]].value, \"0\", formControlKeys[index], \"\", \"Input values should not be Zero or Negative, except Gap and Operating Temperature.\");\r\n\r\n        // set error to form control\r\n        const fc = control.get(formControlKeys[index]);\r\n        this.helperService.setValidationErrorToFormControl(fc, error, \"LessThanZeroValueError\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  // tolrerance validation\r\n  toleranceValidation(): ValidatorFn {\r\n    return (control: FormGroup): ValidationErrors | null => {\r\n      let error: ErrorModel = null;\r\n      const msg = \"Tolerance value should not greater or equal to respective nominal value.\";\r\n      const glandWidthToleranceControl = control.get('glandWidthTolerance');\r\n      const glandWidthNominalControl = control.get('glandWidthNominal');\r\n      const glandDepthToleranceControl = control.get('glandDepthTolerance');\r\n      const glandDepthNominalControl = control.get('glandDepthNominal');\r\n      const bottomRadiiToleranceControl = control.get('bottomRadiiTolerance');\r\n      const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n      const gapToleranceControl = control.get('gapTolerance');\r\n      const gapNominalControl = control.get('gapNominal');\r\n      const glandIdToleranceControl = control.get('glandIdTolerance');\r\n      const glandIdNominalControl = control.get('glandIdNominal');\r\n\r\n      if (glandWidthToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandWidthToleranceControl.value, glandWidthNominalControl.value, \"glandWidthTolerance\", \"\", msg);\r\n        // glandWidthToleranceControl.setErrors(error);\r\n        this.helperService.setValidationErrorToFormControl(glandWidthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (glandDepthToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandDepthToleranceControl.value, glandDepthNominalControl.value, \"glandDepthTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(glandDepthToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (bottomRadiiToleranceControl.value) {\r\n        error = largerThanEqualValidation(bottomRadiiToleranceControl.value, bottomRadiiNominalControl.value, \"bottomRadiiTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(bottomRadiiToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (glandIdToleranceControl.value) {\r\n        error = largerThanEqualValidation(glandIdToleranceControl.value, glandIdNominalControl.value, \"glandIdTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(glandIdToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n\r\n      if (gapToleranceControl.value && gapToleranceControl.value != 0) {\r\n        error = largerThanEqualValidation(gapToleranceControl.value, gapNominalControl.value, \"gapTolerance\", \"\", msg);\r\n        this.helperService.setValidationErrorToFormControl(gapToleranceControl, error, \"ToleranceValueShouldBeLessThanRepectiveToNominal\");\r\n      }\r\n      return error;\r\n    };\r\n  }\r\n\r\n  /********************************************************************/\r\n  /************** O-Ring - Internal Vacuum only Warnings **************/\r\n  /**************** Doen't prevent the form submission*****************/\r\n  /********************************************************************/\r\n\r\n  // gland width validation\r\n  glandWidthShouldBeLargerThanORingCrossSection(control: FormGroup): ErrorModel {\r\n    // return (control: FormGroup): ValidationErrors | null => {\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n    const error = lessThanEqualValidation(glandWidthNominalControl.value, oringCrossSectionNominalControl.value, \"glandWidthNominal\", \"Gland Width\", \"For a rectangular gland, it is recommended for the gland width to be larger than the cross section of the o-ring.\");\r\n    return error;\r\n  }\r\n\r\n  // gland width nominal warning\r\n  glandWidthNominalWarning(form: FormGroup): ErrorModel {\r\n    let error: ErrorModel = null;\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n    const oringCrossSectionNominalControlValue = (1.5 * (+oringCrossSectionNominalControl.value)).toString();\r\n    if (glandWidthNominalControl && glandWidthNominalControl.value && oringCrossSectionNominalControl && oringCrossSectionNominalControl.value) {\r\n      error = largerThanValidation(glandWidthNominalControl.value, oringCrossSectionNominalControlValue, \"glandWidthNominal\", glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return error;\r\n  }\r\n\r\n  // gland width min warning\r\n  glandWidthMinWarning(form: FormGroup, option: string): ErrorModel {\r\n    let warning: ErrorModel = null;\r\n    let glandWidthMinControlValue: number;\r\n\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const minValues: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.generateMinValues(form);\r\n      glandWidthMinControlValue = minValues.glandWidthMin;\r\n    }\r\n    else {\r\n      glandWidthMinControlValue = form.get('glandWidthMin').value ? form.get('glandWidthMin').value : null;\r\n    }\r\n\r\n    if (glandWidthMinControlValue) {\r\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\r\n      warning = largerThanValidation(glandWidthMinControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return warning;\r\n  }\r\n\r\n  // gland width max warning\r\n  glandWidthMaxWarning(form: FormGroup, option: string): ErrorModel {\r\n    let warning: ErrorModel = null;\r\n    let glandWidthMaxControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const maxValues: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(form);\r\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\r\n    }\r\n    else {\r\n      glandWidthMaxControlValue = form.get('glandWidthMax').value ? (+form.get('glandWidthMax').value) : null;\r\n    }\r\n    if (glandWidthMaxControlValue) {\r\n      const oringCrossSectionNominalControl = form.get('oringCrossSectionNominal');\r\n      const oringCrossSectionNominalControlValue = (1.5 * +(oringCrossSectionNominalControl.value)).toString();\r\n      warning = largerThanValidation(glandWidthMaxControlValue.toString(), oringCrossSectionNominalControlValue, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), glandWidthNoReliableWarningTitle, glandWidthNoReliableWarningMessage, ErrorTypes.Warning);\r\n    }\r\n    return warning;\r\n  }\r\n\r\n  // bottomRadiiNominal min limit validation\r\n  bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(control: FormGroup): ErrorModel {\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const currentSelectedUnit: SwitchButtonModel = this.unitButtonService.getCurrentUnitValue;\r\n    const bottomRadiiMinLimit = this.helperService.bottomRadiiMinLimit(currentSelectedUnit);\r\n    const error = lessThanValidation(bottomRadiiNominalControl.value, bottomRadiiMinLimit.toString(), \"bottomRadiiNominal\", \"Bottom Radii\", `Minimum radii is ${bottomRadiiMinLimit} due to typical machining standards.`);\r\n    return error;\r\n  }\r\n\r\n  //  oringCrossSectionNominalLessThan vaidate\r\n  oringCrossSectionNominalLessThanValidation(control: FormGroup): ErrorModel {\r\n    const oringCrossSectionNominalControl = control.get('oringCrossSectionNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    let error = null;\r\n    if (oringCrossSectionNominalControl && glandDepthNominalControl && oringCrossSectionNominalControl.value && glandDepthNominalControl.value) {\r\n      const oringCrossSectionNominalLessThanError = lessThanValidation(oringCrossSectionNominalControl.value, glandDepthNominalControl.value, \"oringCrossSectionNominal\", \"O-ring Cross Section\", \"O-ring Cross Section should greater than or equal to gland depth.\");\r\n      error = oringCrossSectionNominalLessThanError;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  minValueValidation(control: FormGroup, option: string): ErrorModel[] {\r\n    let errors: ErrorModel[] = [];\r\n    const msg = \"Min values should be less or equal to nominal value.\";\r\n\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = control.get('glandIdNominal');\r\n    const gapNominalControl = control.get('gapNominal');\r\n\r\n    let glandWidthMinControlValue: number;\r\n    let glandDepthMinControlValue: number;\r\n    let bottomRadiiMinControlValue: number;\r\n    let gapMinControlValue: number;\r\n    let glandIdMinControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate min values\r\n      const minValues: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.generateMinValues(control);\r\n      glandWidthMinControlValue = minValues.glandWidthMin;\r\n      glandDepthMinControlValue = minValues.glandDepthMin;\r\n      bottomRadiiMinControlValue = minValues.bottomRadiiMin;\r\n      gapMinControlValue = minValues.gapMin;\r\n      glandIdMinControlValue = minValues.glandIdMin;\r\n    }\r\n    else {\r\n      glandWidthMinControlValue = control.get('glandWidthMin').value ? (+control.get('glandWidthMin').value) : null;\r\n      glandDepthMinControlValue = control.get('glandDepthMin').value ? (+control.get('glandDepthMin').value) : null;\r\n      bottomRadiiMinControlValue = control.get('bottomRadiiMin').value ? (+control.get('bottomRadiiMin').value) : null;\r\n      gapMinControlValue = control.get('gapMin').value ? (+control.get('gapMin').value) : null;\r\n      glandIdMinControlValue = control.get('glandIdMin').value ? (+control.get('glandIdMin').value) : null;\r\n    }\r\n\r\n    // min value validation\r\n    if (glandWidthMinControlValue) {\r\n      const error1 = largerThanValidation(glandWidthMinControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMin\"), \"\", msg);\r\n      if (error1) {\r\n        errors.push(error1);\r\n      }\r\n    }\r\n\r\n    if (glandDepthMinControlValue) {\r\n      const error2 = largerThanValidation(glandDepthMinControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMin\"), \"\", msg);\r\n      if (error2) {\r\n        errors.push(error2);\r\n      }\r\n    }\r\n\r\n    if (bottomRadiiMinControlValue) {\r\n      const error3 = largerThanValidation(bottomRadiiMinControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMin\"), \"\", msg);\r\n      if (error3) {\r\n        errors.push(error3);\r\n      }\r\n    }\r\n\r\n    if (gapMinControlValue) {\r\n      const error4 = largerThanValidation(gapMinControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMin\"), \"\", msg);\r\n      if (error4) {\r\n        errors.push(error4);\r\n      }\r\n    }\r\n\r\n    if (glandIdMinControlValue) {\r\n      const error5 = largerThanValidation(glandIdMinControlValue.toString(), glandIdNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandIdTolerance\" : \"glandIdMin\"), \"\", msg);\r\n      if (error5) {\r\n        errors.push(error5);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  maxValueValidation(control: FormGroup, option: string): ErrorModel[] {\r\n    let errors: ErrorModel[] = [];\r\n    const msg = \"Max value should be greater or equal to nominal value.\";\r\n\r\n    const glandWidthNominalControl = control.get('glandWidthNominal');\r\n    const glandDepthNominalControl = control.get('glandDepthNominal');\r\n    const bottomRadiiNominalControl = control.get('bottomRadiiNominal');\r\n    const gapNominalControl = control.get('gapNominal');\r\n    const glandIdNominalControl = control.get('glandIdNominal');\r\n\r\n    let glandWidthMaxControlValue: number;\r\n    let glandDepthMaxControlValue: number;\r\n    let bottomRadiiMaxControlValue: number;\r\n    let gapMaxControlValue: number;\r\n    let glandIdMaxControlValue: number;\r\n\r\n    if ((+option) === CalculatorOption.WithTolerance) {\r\n      // generate max values\r\n      const maxValues: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.generateMaxValues(control);\r\n      glandWidthMaxControlValue = maxValues.glandWidthMax;\r\n      glandDepthMaxControlValue = maxValues.glandDepthMax;\r\n      bottomRadiiMaxControlValue = maxValues.bottomRadiiMax;\r\n      gapMaxControlValue = maxValues.gapMax;\r\n      glandIdMaxControlValue = maxValues.glandIdMax;\r\n    }\r\n    else {\r\n      glandWidthMaxControlValue = control.get('glandWidthMax').value ? (+control.get('glandWidthMax').value) : null;\r\n      glandDepthMaxControlValue = control.get('glandDepthMax').value ? (+control.get('glandDepthMax').value) : null;\r\n      bottomRadiiMaxControlValue = control.get('bottomRadiiMax').value ? (+control.get('bottomRadiiMax').value) : null;\r\n      gapMaxControlValue = control.get('gapMax').value ? (+control.get('gapMax').value) : null;\r\n      glandIdMaxControlValue = control.get('glandIdMax').value ? (+control.get('glandIdMax').value) : null;\r\n    }\r\n\r\n    // max value validation\r\n    if (glandWidthMaxControlValue) {\r\n      const error1 = lessThanValidation(glandWidthMaxControlValue.toString(), glandWidthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandWidthTolerance\" : \"glandWidthMax\"), \"\", msg);\r\n      if (error1) {\r\n        errors.push(error1);\r\n      }\r\n    }\r\n\r\n    if (glandDepthMaxControlValue) {\r\n      const error2 = lessThanValidation(glandDepthMaxControlValue.toString(), glandDepthNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandDepthTolerance\" : \"glandDepthMax\"), \"\", msg);\r\n      if (error2) {\r\n        errors.push(error2);\r\n      }\r\n    }\r\n\r\n    if (bottomRadiiMaxControlValue) {\r\n      const error3 = lessThanValidation(bottomRadiiMaxControlValue.toString(), bottomRadiiNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"bottomRadiiTolerance\" : \"bottomRadiiMax\"), \"\", msg);\r\n      if (error3) {\r\n        errors.push(error3);\r\n      }\r\n    }\r\n\r\n    if (gapMaxControlValue) {\r\n      const error4 = lessThanValidation(gapMaxControlValue.toString(), gapNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"gapTolerance\" : \"gapMax\"), \"\", msg);\r\n      if (error4) {\r\n        errors.push(error4);\r\n      }\r\n    }\r\n\r\n    if (glandIdMaxControlValue) {\r\n      const error5 = lessThanValidation(glandIdMaxControlValue.toString(), glandIdNominalControl.value, (((+option) === CalculatorOption.WithTolerance) ? \"glandIdTolerance\" : \"glandIdMax\"), \"\", msg);\r\n      if (error5) {\r\n        errors.push(error5);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  //******Helper Methods********/\r\n\r\n  // generate min values when option is Tolerance\r\n  generateMinValues(form: FormGroup): ORingRectangularGlandInternalVacuumOnlyMinvaluesModel {\r\n    let minValue: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = new ORingRectangularGlandInternalVacuumOnlyMinvaluesModel();\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\r\n    const glandDepthNominalControl = form.get('glandDepthNominal');\r\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\r\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\r\n    const gapNominalControl = form.get('gapNominal');\r\n    const gapToleranceControl = form.get('gapTolerance');\r\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = form.get('glandIdNominal');\r\n    const glandIdToleranceControl = form.get('glandIdTolerance');\r\n\r\n    minValue.glandWidthMin = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") - parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\r\n    minValue.glandDepthMin = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") - parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\r\n    minValue.bottomRadiiMin = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") - parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\r\n    minValue.gapMin = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") - parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\r\n    minValue.glandIdMin = (parseFloat(glandIdNominalControl.value ? glandIdNominalControl.value : \"0\") - parseFloat(glandIdToleranceControl.value ? glandIdToleranceControl.value : \"0\"));\r\n    return minValue;\r\n  }\r\n\r\n  // generate max values when option is Tolerance\r\n  generateMaxValues(form: FormGroup): ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel {\r\n    let maxValue: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = new ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel();\r\n    const glandWidthNominalControl = form.get('glandWidthNominal');\r\n    const glandWidthToleranceControl = form.get('glandWidthTolerance');\r\n    const glandDepthNominalControl = form.get('glandDepthNominal');\r\n    const glandDepthToleranceControl = form.get('glandDepthTolerance');\r\n    const bottomRadiiToleranceControl = form.get('bottomRadiiTolerance');\r\n    const gapNominalControl = form.get('gapNominal');\r\n    const gapToleranceControl = form.get('gapTolerance');\r\n    const bottomRadiiNominalControl = form.get('bottomRadiiNominal');\r\n    const glandIdNominalControl = form.get('glandIdNominal');\r\n    const glandIdToleranceControl = form.get('glandIdTolerance');\r\n\r\n    maxValue.glandWidthMax = (parseFloat(glandWidthNominalControl.value ? glandWidthNominalControl.value : \"0\") + parseFloat(glandWidthToleranceControl.value ? glandWidthToleranceControl.value : \"0\"));\r\n    maxValue.glandDepthMax = (parseFloat(glandDepthNominalControl.value ? glandDepthNominalControl.value : \"0\") + parseFloat(glandDepthToleranceControl.value ? glandDepthToleranceControl.value : \"0\"));\r\n    maxValue.bottomRadiiMax = (parseFloat(bottomRadiiNominalControl.value ? bottomRadiiNominalControl.value : \"0\") + parseFloat(bottomRadiiToleranceControl.value ? bottomRadiiToleranceControl.value : \"0\"));\r\n    maxValue.gapMax = (parseFloat(gapNominalControl.value ? gapNominalControl.value : \"0\") + parseFloat(gapToleranceControl.value ? gapToleranceControl.value : \"0\"));\r\n    maxValue.glandIdMax = (parseFloat(glandIdNominalControl.value ? glandIdNominalControl.value : \"0\") + parseFloat(glandIdToleranceControl.value ? glandIdToleranceControl.value : \"0\"));\r\n    return maxValue;\r\n  }\r\n}\r\n","// core imports\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n// third party imports\nimport { first } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n// application imports\nimport { DynamicFormTwoColumnLayoutService } from \"../../../dynamic-form/dynamic-form-two-column-layout/dynamic-form-two-column-layout.service\";\nimport { CalculatorModel } from \"../../../models/calculator.model\";\nimport { FormControlModel } from '../../../models/form-control.model';\nimport { BaseModel } from '../../../models/base.model';\nimport { FormColumnModel } from '../../../models/form-column.model';\nimport { ErrorModel } from '../../../models/error.model';\nimport { ORingInternalVacuumOnlyCalculatedOutput } from '../../../models/oRingInternalVacuumOnlyCalculatedOutput';\nimport { RectangularORingCalcService } from \"../rectangular-o-ring-calc.service\";\nimport { AuthService } from \"../../../shared/services/auth.service\";\nimport { ControlType, ORingTool_InternalVacuumOnly_Validators, CalculatorOption, ControlSubType, CalculatorTypes, calculatedDataKeys, Units, Temperature, TemperatureFahrenheitCode, TemperatureCelsiusCode } from '../../../shared/helpers/constants';\nimport { ControlBaseService } from \"../../../shared/services/control-base.service\";\nimport { PrintService } from \"../../../shared/services/print.service\";\nimport { UnitButtonService } from '../../../shared/components/unit-button/unit-button.service';\nimport { TemperatureButtonService } from '../../../shared/components/temperature-button/temperature-button.service';\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\nimport { ORingInternalVacuumOnlyService } from \"./o-ring-internal-vacuum-only.service\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { HelperService } from \"../../../shared/services/helper.service\";\nimport { CalculatorToolbarService } from \"../../../shared/components/calculator-toolbar/calculator-toolbar.service\";\n\n@Component({\n  selector: 'app-internal-vacuum-only',\n  templateUrl: './o-ring-internal-vacuum-only.component.html',\n  styleUrls: ['./o-ring-internal-vacuum-only.component.css']\n})\nexport class ORingInternalVacuumOnlyComponent implements OnInit, OnDestroy {\n  calculatorConfig: CalculatorModel;\n  oringform: FormGroup;\n  flattenedFormControls: FormControlModel[] = [];\n  controlType = ControlType;\n  isSubmitted: Boolean = false;\n  payLoad = '';\n  clientErrors: ErrorModel[] = [];\n  clientWarnings: ErrorModel[] = [];\n  serverErrors: ErrorModel[] = [];\n  serverWarnings: ErrorModel[] = [];\n  isShowPasteBtn: Boolean = false;\n\n  // calculated data\n  private calculatedData: any;\n\n  get CalculatedData(): any {\n    return this.calculatedData;\n  }\n\n  set CalculatedData(val: any) {\n    this.calculatedData = val;\n  }\n\n  // subscription\n  oRingDataSubscription: Subscription;\n  temperatureChangeSubscription: Subscription;\n  unitChangeSubscription: Subscription;\n\n  // constructor\n  constructor(\n    private controlBaseService: ControlBaseService,\n    private authService: AuthService,\n    private rectangularORingCalcService: RectangularORingCalcService,\n    private dynamicFormTwoColumnLayoutService: DynamicFormTwoColumnLayoutService,\n    private printService: PrintService,\n    private unitButtonService: UnitButtonService,\n    private temperatureButtonService: TemperatureButtonService,\n    private oRingInternalVacuumOnlyValidationService: ORingInternalVacuumOnlyValidationService,\n    private oRingInternalVacuumOnlyService: ORingInternalVacuumOnlyService,\n    private helperService: HelperService,\n    private calculatorToolbarService: CalculatorToolbarService\n  ) {\n    // o-ring calculator config subscription\n    this.oRingDataSubscription = this.rectangularORingCalcService.oRingConfig$.subscribe((x: BaseModel) => {\n      if (x) {\n        // calculator - internal vacuum only\n        this.calculatorConfig = x.calculators[0];\n        // send calculator to dynamic form service\n        this.dynamicFormTwoColumnLayoutService.sendCalculator(x.calculators[0]);\n        // create form\n        // this.createForm();\n        // show or hide form controls\n        this.onOptionChange(+this.calculatorConfig.toolbarOption.value);\n        this.setShowPasteBtnFlag();\n      }\n    });\n    // temperature change subscription\n    this.onTemperatureChangeUpdateCalculator();\n\n    // onPaste event subscription\n    this.calculatorToolbarService.paste.subscribe((d: any) => {\n      if (d) {\n        this.onPaste(d);\n      }\n    });\n\n    // unit change\n    this.onUnitChange();\n  }\n\n  // form control changes subcription and update the graph data\n  getControlValue(fieldName: string) {\n    if (this.oringform\n      && this.oringform.controls[fieldName]\n      && this.oringform.controls[fieldName].value) {\n      return (+this.oringform.controls[fieldName].value).toFixed(this.unitButtonService.getCurrentUnitValue.id === Units.MILLI_METER ? 2 : 3);\n    }\n  }\n\n  // onInit\n  ngOnInit(): void {\n    this.onReset();\n    this.isSubmitted = false;\n    this.CalculatedData = {};\n    this.setShowPasteBtnFlag();\n  }\n\n  // unit change perform operations\n  onUnitChange() {\n    // reset \n    this.resetFormAndCalculation();\n    // unit switch button click/change subscription\n    this.unitChangeSubscription = this.unitButtonService.unit$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        // convert the form data\n        const convertedForm = this.helperService.convertFormUnitControlValuesAndSet((this.calculatorConfig && this.calculatorConfig.form ? this.calculatorConfig.form : null), this.oringform, x);\n        if (convertedForm) {\n          this.oringform = convertedForm;\n        }\n\n        /// recalculate the data\n        this.onSubmit();\n      }\n    });\n  }\n\n  // temperature change update output values handler\n  onTemperatureChangeUpdateCalculator() {\n    // unit switch button click/change subscription\n    this.temperatureChangeSubscription = this.temperatureButtonService.temperature$.subscribe((x: SwitchButtonModel) => {\n      if (x) {\n        this.resetFormAndCalculation();\n      }\n    });\n  }\n\n  // form submit event\n  onSubmit(isSubmitted = false) {\n    this.CalculatedData = {};\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // this.payLoad = this.oringform.value;\n    this.isSubmitted = isSubmitted;\n\n    // client errors that doesnot prevent to submit forms/calculation\n    // glandWidth validation\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.GLAND_WIDTH_LARGER_THAN_O_RING_CROSS_SECTION)) {\n      const glandWidthShouldBeLargerThanORingCrossSectionError = this.oRingInternalVacuumOnlyValidationService.glandWidthShouldBeLargerThanORingCrossSection(this.oringform);\n      if (glandWidthShouldBeLargerThanORingCrossSectionError) {\n        this.addClientErrors(glandWidthShouldBeLargerThanORingCrossSectionError);\n      }\n    }\n\n    // if validation key O_RING_CROSS_SECTION_VALIDATION exist \n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.O_RING_CROSS_SECTION_LESS_THAN_GLAND_DEPTH_NOMINAL_VALIDATION)) {\n      const oringCrossSectionNominalLessThanError = this.oRingInternalVacuumOnlyValidationService.oringCrossSectionNominalLessThanValidation(this.oringform);\n      if (oringCrossSectionNominalLessThanError) {\n        this.addClientErrors(oringCrossSectionNominalLessThanError);\n      }\n    }\n\n    // bottomRadiiShouldBeLargerThanBottomRadiiMinLimit error\n    if (this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_LARGER_THAN_BOTTOM_RADII_MIN_LIMIT)) {\n      const bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError = this.oRingInternalVacuumOnlyValidationService.bottomRadiiShouldBeLargerThanBottomRadiiMinLimit(this.oringform);\n      if (bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError) {\n        this.addClientErrors(bottomRadiiShouldBeLargerThanBottomRadiiMinLimitError);\n      }\n    }\n\n    // min value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const minValueErrors: ErrorModel[] = this.oRingInternalVacuumOnlyValidationService.minValueValidation(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (minValueErrors.length > 0) {\n        for (let index = 0; index < minValueErrors.length; index++) {\n          this.addClientErrors(minValueErrors[index]);\n        }\n      }\n    }\n\n    // max value validation\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal && this.calculatorConfig.form.form_validation.includes(ORingTool_InternalVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION)) {\n      // apply validation only when Tolerance and min and max option selected\n      const maxValueErrors: ErrorModel[] = this.oRingInternalVacuumOnlyValidationService.maxValueValidation(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (maxValueErrors.length > 0) {\n        for (let index = 0; index < maxValueErrors.length; index++) {\n          this.addClientErrors(maxValueErrors[index]);\n        }\n      }\n    }\n\n    // warnings\n    const glandWidthNominalWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthNominalWarning(this.oringform);\n    if (glandWidthNominalWarning) {\n      this.addClientWarnings(glandWidthNominalWarning);\n    }\n\n    if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n      const glandWidthMinWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthMinWarning(this.oringform, this.calculatorConfig.toolbarOption.value);\n      const glandWidthMaxWarning = this.oRingInternalVacuumOnlyValidationService.glandWidthMaxWarning(this.oringform, this.calculatorConfig.toolbarOption.value);\n      if (glandWidthMinWarning) {\n        this.addClientWarnings(glandWidthMinWarning);\n      }\n      if (glandWidthMaxWarning) {\n        this.addClientWarnings(glandWidthMaxWarning);\n      }\n    }\n\n    // stop here if form is invalid/Not_valid\n    if (this.oringform.invalid) {\n      return;\n    }\n\n    // perform calculation\n    this.oRingInternalVacuumOnlyService.createORing(this.oringform, this.calculatorConfig.toolbarOption.value, this.unitButtonService.getCurrentUnitValue, this.temperatureButtonService.getCurrentTemperatureValue).subscribe((resp: ORingInternalVacuumOnlyCalculatedOutput) => {\n      if (resp.data) {\n        // set CalculatedData\n        // this will set the graph data also\n        this.CalculatedData = Object.assign({}, resp.data);\n\n        if (resp.data.error && resp.data.error.length > 0) {\n          this.serverErrors = resp.data.error.slice();\n        }\n\n        if (resp.data.warning && resp.data.warning.length > 0) {\n          this.serverWarnings = resp.data.warning;\n        }\n\n        const responseDataKeys = Object.keys(resp.data);\n\n        // when toleranc or minmax option is selected than also bind calculated labels received after calculation\n        if (CalculatorOption.Nominal !== +(this.calculatorConfig.toolbarOption.value)) {\n\n          // Bind left form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n\n          // Bind right form data\n          // loop through each form left column row\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = resp.data[responseDataKeys[keyIndex]] ? resp.data[responseDataKeys[keyIndex]].toFixed((this.unitButtonService.getCurrentUnitValue.id === Units.INCH) ? 3 : 2) : resp.data[responseDataKeys[keyIndex]];\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Bind output form data\n        // loop through each output\n        for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n\n          // set output title of operating temperature label\n          if (outputIndex > 0) {\n            const temperatureCode = ((+this.temperatureButtonService.getCurrentTemperatureValue.id) === Temperature.FAHRENHEIT) ? TemperatureFahrenheitCode.HEXA_DECIMAL_CODE : TemperatureCelsiusCode.HEXA_DECIMAL_CODE;\n\n            const operatingTemperatureMin = this.oringform.controls[\"operatingTemperatureMin\"];\n            const operatingTemperatureNominal = this.oringform.controls[\"operatingTemperatureNominal\"];\n            const operatingTemperatureMax = this.oringform.controls[\"operatingTemperatureMax\"];\n\n            // operating temperature min\n            if (outputIndex === 1 && operatingTemperatureMin && operatingTemperatureMin.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMin.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 1) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature nominal\n            if (outputIndex === 2 && operatingTemperatureNominal && operatingTemperatureNominal.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureNominal.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 2) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n\n            // operating temperature max\n            if (outputIndex === 3 && operatingTemperatureMax && operatingTemperatureMax.value) {\n              this.calculatorConfig.form_output[outputIndex].show = true;\n              this.calculatorConfig.form_output[outputIndex].display_output_title = `${operatingTemperatureMax.value}${temperatureCode}`;\n            }\n            else if (outputIndex === 3) {\n              this.calculatorConfig.form_output[outputIndex].show = false;\n            }\n          }\n\n\n          // loop through rows\n          for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n            // loop through columns\n            for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n              // loop through controls\n              for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n                // get form control of JSON\n                const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n                // get fields key from resp data\n                // const responseDataKeys = Object.keys(resp.data);\n                for (let keyIndex = 0; keyIndex < responseDataKeys.length; keyIndex++) {\n                  if (formControl.sub_type === ControlSubType.calculated_label && responseDataKeys[keyIndex] === formControl.key) {\n                    // set JSON output label\n                    // bind calculated result to output label\n                    this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `${(resp.data[responseDataKeys[keyIndex]] !== null && resp.data[responseDataKeys[keyIndex]] !== undefined && !isNaN((+resp.data[responseDataKeys[keyIndex]]))) ? parseFloat(resp.data[responseDataKeys[keyIndex]]).toFixed(1) : resp.data[responseDataKeys[keyIndex]]}%`;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // reset auth token \n        this.setAuth();\n      }\n    }, (error: any) => {\n      // reset auth token \n      this.setAuth();\n      // TODO: show error if any\n      console.log(error);\n    });\n  }\n\n  // option nominal, tolerance and (min and max) change handler\n  onOptionChange(selectedOption: number) {\n    // show or hide controls based on options\n    this.dynamicFormTwoColumnLayoutService.showOrHideControlsBasedOnOption(selectedOption);\n    // update form submission status\n    this.isSubmitted = false;\n    // reset error, warnings\n    this.resetErroAndWarnings();\n    // reset calculated output\n    this.resetCalculatedLabelValue();\n    // create form\n    this.createForm();\n    this.setShowPasteBtnFlag();\n  }\n\n  // on reset button handler\n  onReset() {\n    if (!this.oringform) {\n      return;\n    }\n\n    // get form controls key\n    const formControlKeys = Object.keys(this.oringform.controls);\n    // loop through the reactive form/formgroup controls \n    for (let index = 0; index < formControlKeys.length; index++) {\n      // skip toolbar options(Nominal, Tolerance, Min and Max) resetting\n      if (this.calculatorConfig.toolbarOption.key === formControlKeys[index]) {\n        continue;\n      }\n\n      // get form control default value and set\n      const formControlDefaultValue = this.dynamicFormTwoColumnLayoutService.getDefaultControlValueFromCalculatorJSONConfig(formControlKeys[index]);\n      if (formControlDefaultValue) {\n        this.oringform.controls[formControlKeys[index]].setValue(formControlDefaultValue);\n      }\n      else {\n        this.oringform.controls[formControlKeys[index]].setValue('');\n      }\n    }\n\n    this.resetFormAndCalculation();\n  }\n\n  // clears the form submission status and \n  // calcuated data\n  resetFormAndCalculation() {\n    // reset form submitted status to false \n    this.isSubmitted = false;\n\n    // reset client errors and warnings\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = '';\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            // get fields key from resp data\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = `%`;\n            }\n          }\n        }\n      }\n    }\n\n    // Operating Temperature Min\n    this.calculatorConfig.form_output[1].display_output_title = \"\";\n    this.calculatorConfig.form_output[1].show = false;\n    // Operating Temperature Nominal\n    this.calculatorConfig.form_output[2].display_output_title = \"\";\n    // Operating Temperature Max\n    this.calculatorConfig.form_output[3].display_output_title = \"\";\n    this.calculatorConfig.form_output[3].show = false;\n\n    // reset calculated data received after calculation\n    this.CalculatedData = {};\n  }\n\n  // print button event handler\n  onPrint() {\n    this.printService.generatePdf(\"rectangleGland\");\n  }\n\n  // create form group\n  createForm() {\n    // get form controls nested array\n    const leftFormControls = this.calculatorConfig.form.left_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oringform) {\n            const fc = this.oringform.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // create reactive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    const rightFormControls = this.calculatorConfig.form.right_column.form_layout_row.map(row =>\n      row.form_layout_columns.map((column: FormColumnModel) => {\n        let formControls: FormControlModel[] = [];\n        for (let index = 0; index < column.form_controls.length; index++) {\n          // get existing inputted values of form \n          if (this.oringform) {\n            const fc = this.oringform.get(column.form_controls[index].key);\n            if (fc) {\n              column.form_controls[index].value = fc.value;\n            }\n          }\n          // createreaxctive form of only those control which are show = true\n          if (column.form_controls[index].show) {\n            formControls.push(column.form_controls[index]);\n          }\n        }\n        return formControls;\n      }));\n\n    // make form control flatten array\n    this.flattenedFormControls = [];\n    // add calculator toolbar option\n    this.flattenedFormControls.push(this.calculatorConfig.toolbarOption);\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(leftFormControls)];\n    this.flattenedFormControls = [...this.flattenedFormControls, ...this.controlBaseService.flatten(rightFormControls)];\n    // exclude formcontrol which is type of label\n    const filteredControls: FormControlModel[] = this.flattenedFormControls.filter(fc => {\n      // exclude labels and buttons from formgroup\n      if (fc && fc.type !== this.controlType.label && fc.type !== this.controlType.button) {\n        return fc;\n      }\n    });\n\n    this.oringform = this.controlBaseService.toFormGroup(filteredControls);\n    // get and set validations\n    const validations: ValidatorFn[] = [];\n    // get validation key from json config object\n    let jsonConfigValidationsArray: string[] = this.calculatorConfig.form.form_validation;\n\n    for (let index = 0; index < jsonConfigValidationsArray.length; index++) {\n      const validationFuncKey = jsonConfigValidationsArray[index];\n      switch (validationFuncKey) {\n        case ORingTool_InternalVacuumOnly_Validators.BOTTOM_RADII_NOMINAL_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.bottomRadiiShouldNotBeLargerThanGlandWidthOrDepth());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.OPERATING_TEMPERATURE_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.operatingTemperatureValidation());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.O_RING_CROSS_NOMINAL_AS568A_STANDARD_SECTION_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oringCrossSectionNominalValidation());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.LESS_THAN_ZERO_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.formLessThanZeroValidation(this.calculatorConfig.toolbarOption.key));\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.TOLERANCE_VALIDATION:\n          // apply validation only when Tolerance option selected\n          if ((+this.calculatorConfig.toolbarOption.value) === CalculatorOption.WithTolerance) {\n            validations.push(this.oRingInternalVacuumOnlyValidationService.toleranceValidation());\n          }\n          break;\n        // case ORingTool_InternalVacuumOnly_Validators.MIN_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION:\n        //   // apply validation only when Tolerance and min and max option selected\n        //   if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n        //     validations.push(this.oRingInternalVacuumOnlyValidationService.minValueValidation(this.calculatorConfig.toolbarOption.value));\n        //   }\n        //   break;\n        // case ORingTool_InternalVacuumOnly_Validators.MAX_VALUE_RESPECT_TO_NOMINAL_VALUE_VALIDATION:\n        //   // apply validation only when Tolerance and min and max option selected\n        //   if ((+this.calculatorConfig.toolbarOption.value) !== CalculatorOption.Nominal) {\n        //     validations.push(this.oRingInternalVacuumOnlyValidationService.maxValueValidation(this.calculatorConfig.toolbarOption.value));\n        //   }\n        //   break;\n        case ORingTool_InternalVacuumOnly_Validators.ORING_ID_AS568A_STANDARD_WARNING:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oRingIDAS568AStandardsWarning());\n          break;\n        case ORingTool_InternalVacuumOnly_Validators.O_RING_ID_NOMINAL_SHOULD_BE_LESS_THAN_MAX_ORING_ID_VALUE_VALIDATION:\n          validations.push(this.oRingInternalVacuumOnlyValidationService.oringIDNominalLargerThanMaxOringIDValidation());\n          break;\n      }\n    }\n    // set custom validations with params\n    this.oringform.setValidators(validations);\n  }\n\n  // reset auth token\n  setAuth() {\n    this.authService.authenticate().pipe(first())\n      .subscribe(r => r);\n  }\n\n  // add client errors\n  addClientErrors(error: ErrorModel) {\n    if (this.clientErrors.length > 0) {\n      for (let index = 0; index < this.clientErrors.length; index++) {\n        if (this.clientErrors[index].field && this.clientErrors[index].field !== error.field) {\n          this.clientErrors.push(error);\n        }\n      }\n    }\n    else {\n      this.clientErrors.push(error);\n    }\n\n    this.clientErrors = this.clientErrors.slice();\n  }\n\n  // add client warnings\n  addClientWarnings(warning: ErrorModel) {\n    if (this.clientWarnings.length > 0) {\n      for (let index = 0; index < this.clientWarnings.length; index++) {\n        if (this.clientWarnings[index] && this.clientWarnings[index].field !== warning.field) {\n          this.clientWarnings.push(warning);\n        }\n      }\n    }\n    else {\n      this.clientWarnings.push(warning);\n    }\n\n    this.clientWarnings = this.clientWarnings.slice();\n  }\n\n  // reset error, warnings of client and server\n  resetErroAndWarnings() {\n    this.clientErrors = [];\n    this.clientWarnings = [];\n    this.serverErrors = [];\n    this.serverWarnings = [];\n  }\n\n  // reset calculated label or output value in JSOn config\n  resetCalculatedLabelValue() {\n    this.CalculatedData = {};\n\n    if (!this.calculatorConfig) {\n      return;\n    }\n\n    // reset left form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.left_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // reset calculated result to output label\n            this.calculatorConfig.form.left_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset right form data\n    // loop through each form left column row\n    for (let rowIndex = 0; rowIndex < this.calculatorConfig.form.right_column.form_layout_row.length; rowIndex++) {\n      // loop through columns\n      for (let columnIndex = 0; columnIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns.length; columnIndex++) {\n        // loop through controls\n        for (let controlIndex = 0; controlIndex < this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n          // get form control of JSON\n          const formControl = this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n          if (formControl.sub_type === ControlSubType.calculated_label) {\n            // set JSON output label\n            // bind calculated result to output label\n            this.calculatorConfig.form.right_column.form_layout_row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \"\";\n          }\n        }\n      }\n    }\n\n    // reset output form data\n    // loop through each output\n    for (let outputIndex = 0; outputIndex < this.calculatorConfig.form_output.length; outputIndex++) {\n      // loop through rows\n      for (let rowIndex = 0; rowIndex < this.calculatorConfig.form_output[outputIndex].row.length; rowIndex++) {\n        // loop through columns\n        for (let columnIndex = 0; columnIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns.length; columnIndex++) {\n          // loop through controls\n          for (let controlIndex = 0; controlIndex < this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls.length; controlIndex++) {\n            // get form control of JSON\n            const formControl = this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex];\n            if (formControl.sub_type === ControlSubType.calculated_label) {\n              // set JSON output label\n              // bind calculated result to output label\n              this.calculatorConfig.form_output[outputIndex].row[rowIndex].form_layout_columns[columnIndex].form_controls[controlIndex].label = \" %\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // component destroy\n  ngOnDestroy(): void {\n    if (this.oRingDataSubscription) {\n      this.oRingDataSubscription.unsubscribe();\n    }\n\n    if (this.temperatureChangeSubscription) {\n      this.temperatureChangeSubscription.unsubscribe();\n    }\n\n    if (this.unitChangeSubscription) {\n      this.unitChangeSubscription.unsubscribe();\n    }\n  }\n\n  // on paste calculated data\n  onPaste(calculatedData: any) {\n    if (calculatedData) {\n      this.oringform.patchValue(calculatedData);\n      // set material choice dropdown value\n      const cte = this.helperService.getMaterialChoiceList('materialCteNominal');\n      const i = cte.findIndex((c) => {\n        return c.value.id === calculatedData['materialCteNominal'].id\n      });\n      if (i > -1) {\n        this.oringform.get('materialCteNominal').setValue(cte[i].value);\n      }\n    }\n  }\n\n  // set show flag of paste button\n  setShowPasteBtnFlag() {\n    if (this.calculatorConfig && this.calculatorConfig.id) {\n      this.isShowPasteBtn = (this.helperService.isCalculatedDataExist(+this.calculatorConfig.id)) ? true : false;\n    }\n    else {\n      this.isShowPasteBtn = false;\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-12 col-sm-12 col-md-9 col-lg-9 col-xl-9\">\n        <form *ngIf=\"calculatorConfig && oringform\" (ngSubmit)=\"onSubmit(true)\" [formGroup]=\"oringform\" novalidate\n            class=\"form-horizontal {{calculatorConfig.form.form_title_css_class}}\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1 ignorePdf\">\n                    <calculator-toolbar [calculatorConfig]=\"calculatorConfig\"\n                        [isShowOptions]=\"calculatorConfig.toolbarOption ? true : false\" [form]=\"oringform\"\n                        [control]=\"calculatorConfig.toolbarOption\" [isSubmitted]=\"isSubmitted\"\n                        [isShowPasteBtn]=\"isShowPasteBtn\" (optionChange)=\"onOptionChange($event)\" (reset)=\"onReset()\"\n                        (print)=\"onPrint()\"></calculator-toolbar>\n                </div>\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 p-1\">\n                    <dynamic-form-two-column-layout [form]=\"oringform\" [isSubmitted]=\"isSubmitted\"\n                        [calculatorJSON]=\"calculatorConfig\" [clientErrors]=\"clientErrors\"\n                        [clientWarnings]=\"clientWarnings\" [serverErrors]=\"serverErrors\"\n                        [serverWarnings]=\"serverWarnings\">\n                    </dynamic-form-two-column-layout>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 p-1\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n                <!-- graph -->\n                <div class=\"graph-sec\">\n                    <h3>Gland Information</h3>\n                    <div class=\"graph-bg\">\n                        <div class=\"gld-id\">GLAND ID: <br><strong>{{getControlValue('glandIdNominal')}}</strong></div>\n                        <div class=\"gld-width\">GLAND WIDTH: <strong>{{getControlValue('glandWidthNominal')}}</strong>\n                        </div>\n                        <div class=\"gld-depth\">GLAND DEPTH:\n                            <br><strong>{{getControlValue('glandDepthNominal')}}</strong>\n                        </div>\n                        <div class=\"top-radii\">TOP RADII </div>\n                        <div class=\"bottom-radii\">BOTTOM RADII:\n                            <strong>{{getControlValue('bottomRadiiNominal')}}</strong>\n                        </div>\n                        <div class=\"gap-full-comp rect-gap\">GAP: <strong>{{getControlValue('gapNominal')}}</strong>\n                            <br>(may or may not exist)\n                        </div>\n                        <div class=\"rect-static-value\"><strong>.005</strong></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 ignorePdf\">\n                <user-rules></user-rules>\n            </div>\n        </div>\n    </div>\n</div>","// core improts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// application imports\nimport { SharedModule } from \"../../../shared/shared.module\";\nimport { DynamicFormModule } from \"../../../dynamic-form/dynamic-form.module\";\nimport { ORingInternalVacuumOnlyRoutingModule } from \"./o-ring-internal-vacuum-only-routing.module\";\nimport { ORingInternalVacuumOnlyComponent } from './o-ring-internal-vacuum-only.component';\nimport { ORingInternalVacuumOnlyService } from \"./o-ring-internal-vacuum-only.service\";\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\n\n@NgModule({\n  declarations: [ORingInternalVacuumOnlyComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ORingInternalVacuumOnlyRoutingModule,\n    SharedModule,\n    DynamicFormModule\n  ],\n  providers: [\n    ORingInternalVacuumOnlyService,\n    ORingInternalVacuumOnlyValidationService\n  ]\n})\nexport class ORingInternalVacuumOnlyModule {\n}\n","// core imports\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n// third party imports\nimport { BehaviorSubject } from 'rxjs';\n\n// application imports\nimport { AppConfig } from '../../../app.config.service';\nimport { CalculatorModel } from '../../../models/calculator.model';\nimport { ORingInternalVacuumOnlyDTO } from \"../../../models/oRingInternalVacuumOnlyDTO\";\nimport { SwitchButtonModel } from '../../../models/switch-button.model';\nimport { ORingInternalVacuumOnlyValidationService } from \"./o-ring-internal-vacuum-only-validation.service\";\nimport { ORingRectangularGlandInternalVacuumOnlyMinvaluesModel } from \"../../../models/oring-rectangular-gland-internal-vacuum-only-minvalues\";\nimport { ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel } from \"../../../models/oring-rectangular-gland-internal-vacuum-only-maxvalues\";\nimport { FormGroup } from '@angular/forms';\nimport { CalculatorOption, calculationType } from '../../../shared/helpers/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ORingInternalVacuumOnlyService {\n  private baseUrl = AppConfig.settings.env.api;\n  private readonly oRingInternalVacuumCalculatorSubject: BehaviorSubject<CalculatorModel> = new BehaviorSubject<CalculatorModel>(null);\n  readonly oRingInternalVacuumCalculator$ = this.oRingInternalVacuumCalculatorSubject.asObservable();\n\n  constructor(\n    private _http: HttpClient,\n    private oRingInternalVacuumOnlyValidationService: ORingInternalVacuumOnlyValidationService\n  ) { }\n\n  private get oRingInternalVacuumCalculator(): CalculatorModel {\n    return this.oRingInternalVacuumCalculatorSubject.getValue();\n  }\n\n  private set oRingInternalVacuumCalculator(val: CalculatorModel) {\n    this.oRingInternalVacuumCalculatorSubject.next(val);\n  }\n\n  public get getCurrentValue() {\n    return this.oRingInternalVacuumCalculator;\n  }\n\n  public setORingInternalVacuumCalculator(val: CalculatorModel) {\n    this.oRingInternalVacuumCalculator = { ...val };\n  }\n\n  public createORing(form: FormGroup, inputOption: string, unit: SwitchButtonModel, unitTemp: SwitchButtonModel) {\n    let body: ORingInternalVacuumOnlyDTO = new ORingInternalVacuumOnlyDTO(form.value);\n    body.unit = unit.id.toString();\n    body.unitTemp = unitTemp.id.toString();\n    body.inputOption = inputOption;\n    // // body.calculationType = calculationType.ORING_SIZING;\n\n    if (CalculatorOption.WithTolerance === +(inputOption)) {\n      const minValue: ORingRectangularGlandInternalVacuumOnlyMinvaluesModel = this.oRingInternalVacuumOnlyValidationService.generateMinValues(form);\n      body.glandWidthMin = minValue.glandWidthMin ? minValue.glandWidthMin : 0;\n      body.glandDepthMin = minValue.glandDepthMin ? minValue.glandDepthMin : 0;\n      body.bottomRadiiMin = minValue.bottomRadiiMin ? minValue.bottomRadiiMin : 0;\n      body.gapMin = minValue.gapMin ? minValue.gapMin : 0;\n      body.glandIdMin = minValue.glandIdMin ? minValue.glandIdMin : 0;\n      const maxValue: ORingRectangularGlandInternalVacuumOnlyMaxvaluesModel = this.oRingInternalVacuumOnlyValidationService.generateMaxValues(form);\n      body.glandWidthMax = maxValue.glandWidthMax ? maxValue.glandWidthMax : 0;\n      body.glandDepthMax = maxValue.glandDepthMax ? maxValue.glandDepthMax : 0;\n      body.bottomRadiiMax = maxValue.bottomRadiiMax ? maxValue.bottomRadiiMax : 0;\n      body.gapMax = maxValue.gapMax ? maxValue.gapMax : 0;\n      body.glandIdMax = maxValue.glandIdMax ? maxValue.glandIdMax : 0;\n    }\n\n    return this._http.post(`${this.baseUrl}oringglandanalysistool/createoring`, body);\n  }\n}\n\n"],"sourceRoot":"webpack:///"}